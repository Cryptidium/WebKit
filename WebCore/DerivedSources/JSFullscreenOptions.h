/*
    This file is part of the WebKit open source project.
    This file has been generated by generate-bindings.pl. DO NOT MODIFY!

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Library General Public
    License as published by the Free Software Foundation; either
    version 2 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Library General Public License for more details.

    You should have received a copy of the GNU Library General Public License
    along with this library; see the file COPYING.LIB.  If not, write to
    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
    Boston, MA 02110-1301, USA.
*/

#pragma once

#if ENABLE(FULLSCREEN_API)

#include "FullscreenOptions.h"
#include "JSDOMConvertDictionary.h"
#include "JSDOMConvertEnumeration.h"

namespace WebCore {

template<> ConversionResult<IDLDictionary<FullscreenOptions>> convertDictionary<FullscreenOptions>(JSC::JSGlobalObject&, JSC::JSValue);

#if ENABLE(FULLSCREEN_API)

String convertEnumerationToString(FullscreenOptions::NavigationUI);
template<> JSC::JSString* convertEnumerationToJS(JSC::VM&, FullscreenOptions::NavigationUI);

template<> std::optional<FullscreenOptions::NavigationUI> parseEnumerationFromString<FullscreenOptions::NavigationUI>(const String&);
template<> std::optional<FullscreenOptions::NavigationUI> parseEnumeration<FullscreenOptions::NavigationUI>(JSC::JSGlobalObject&, JSC::JSValue);
template<> ASCIILiteral expectedEnumerationValues<FullscreenOptions::NavigationUI>();

#endif

#if ENABLE(FULLSCREEN_API)

String convertEnumerationToString(FullscreenOptions::KeyboardLock);
template<> JSC::JSString* convertEnumerationToJS(JSC::VM&, FullscreenOptions::KeyboardLock);

template<> std::optional<FullscreenOptions::KeyboardLock> parseEnumerationFromString<FullscreenOptions::KeyboardLock>(const String&);
template<> std::optional<FullscreenOptions::KeyboardLock> parseEnumeration<FullscreenOptions::KeyboardLock>(JSC::JSGlobalObject&, JSC::JSValue);
template<> ASCIILiteral expectedEnumerationValues<FullscreenOptions::KeyboardLock>();

#endif

} // namespace WebCore

#endif // ENABLE(FULLSCREEN_API)
