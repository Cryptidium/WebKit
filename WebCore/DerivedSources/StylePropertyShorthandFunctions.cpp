// This file is automatically generated from CSSProperties.json by the process-css-properties.py script. Do not edit it.

#include "config.h"
#include "StylePropertyShorthandFunctions.h"

#include "StylePropertyShorthand.h"

namespace WebCore {

StylePropertyShorthand allShorthand()
{
    static const CSSPropertyID allProperties[] = {
        CSSPropertyID::CSSPropertyColorScheme,
        CSSPropertyID::CSSPropertyRubyPosition,
        CSSPropertyID::CSSPropertyWritingMode,
        CSSPropertyID::CSSPropertyDisplay,
        CSSPropertyID::CSSPropertyFontFamily,
        CSSPropertyID::CSSPropertyFontFeatureSettings,
        CSSPropertyID::CSSPropertyFontKerning,
        CSSPropertyID::CSSPropertyFontOpticalSizing,
        CSSPropertyID::CSSPropertyFontPalette,
        CSSPropertyID::CSSPropertyFontSize,
        CSSPropertyID::CSSPropertyFontSizeAdjust,
        CSSPropertyID::CSSPropertyFontStyle,
        CSSPropertyID::CSSPropertyFontSynthesisSmallCaps,
        CSSPropertyID::CSSPropertyFontSynthesisStyle,
        CSSPropertyID::CSSPropertyFontSynthesisWeight,
        CSSPropertyID::CSSPropertyFontVariantAlternates,
        CSSPropertyID::CSSPropertyFontVariantCaps,
        CSSPropertyID::CSSPropertyFontVariantEastAsian,
        CSSPropertyID::CSSPropertyFontVariantEmoji,
        CSSPropertyID::CSSPropertyFontVariantLigatures,
        CSSPropertyID::CSSPropertyFontVariantNumeric,
        CSSPropertyID::CSSPropertyFontVariantPosition,
        CSSPropertyID::CSSPropertyFontVariationSettings,
        CSSPropertyID::CSSPropertyFontWeight,
        CSSPropertyID::CSSPropertyFontWidth,
        CSSPropertyID::CSSPropertyTextOrientation,
        CSSPropertyID::CSSPropertyTextRendering,
        CSSPropertyID::CSSPropertyZoom,
        CSSPropertyID::CSSPropertyWebkitFontSmoothing,
        CSSPropertyID::CSSPropertyWebkitLocale,
        CSSPropertyID::CSSPropertyWebkitTextZoom,
        CSSPropertyID::CSSPropertyLetterSpacing,
        CSSPropertyID::CSSPropertyTextAutospace,
        CSSPropertyID::CSSPropertyTextSpacingTrim,
        CSSPropertyID::CSSPropertyAccentColor,
        CSSPropertyID::CSSPropertyAlignContent,
        CSSPropertyID::CSSPropertyAlignItems,
        CSSPropertyID::CSSPropertyAlignSelf,
        CSSPropertyID::CSSPropertyAlignmentBaseline,
        CSSPropertyID::CSSPropertyAnchorName,
        CSSPropertyID::CSSPropertyAnchorScope,
        CSSPropertyID::CSSPropertyAnimationComposition,
        CSSPropertyID::CSSPropertyAnimationDelay,
        CSSPropertyID::CSSPropertyAnimationDirection,
        CSSPropertyID::CSSPropertyAnimationDuration,
        CSSPropertyID::CSSPropertyAnimationFillMode,
        CSSPropertyID::CSSPropertyAnimationIterationCount,
        CSSPropertyID::CSSPropertyAnimationName,
        CSSPropertyID::CSSPropertyAnimationPlayState,
        CSSPropertyID::CSSPropertyAnimationRangeEnd,
        CSSPropertyID::CSSPropertyAnimationRangeStart,
        CSSPropertyID::CSSPropertyAnimationTimeline,
        CSSPropertyID::CSSPropertyAnimationTimingFunction,
        CSSPropertyID::CSSPropertyAppearance,
        CSSPropertyID::CSSPropertyAspectRatio,
        CSSPropertyID::CSSPropertyBackdropFilter,
        CSSPropertyID::CSSPropertyBackfaceVisibility,
        CSSPropertyID::CSSPropertyBackgroundAttachment,
        CSSPropertyID::CSSPropertyBackgroundBlendMode,
        CSSPropertyID::CSSPropertyBackgroundClip,
        CSSPropertyID::CSSPropertyBackgroundColor,
        CSSPropertyID::CSSPropertyBackgroundImage,
        CSSPropertyID::CSSPropertyBackgroundOrigin,
        CSSPropertyID::CSSPropertyBackgroundPositionX,
        CSSPropertyID::CSSPropertyBackgroundPositionY,
        CSSPropertyID::CSSPropertyBackgroundRepeat,
        CSSPropertyID::CSSPropertyBackgroundSize,
        CSSPropertyID::CSSPropertyBaselineShift,
        CSSPropertyID::CSSPropertyBlockEllipsis,
        CSSPropertyID::CSSPropertyBlockStepAlign,
        CSSPropertyID::CSSPropertyBlockStepInsert,
        CSSPropertyID::CSSPropertyBlockStepRound,
        CSSPropertyID::CSSPropertyBlockStepSize,
        CSSPropertyID::CSSPropertyBorderCollapse,
        CSSPropertyID::CSSPropertyBorderImageOutset,
        CSSPropertyID::CSSPropertyBorderImageRepeat,
        CSSPropertyID::CSSPropertyBorderImageSlice,
        CSSPropertyID::CSSPropertyBorderImageSource,
        CSSPropertyID::CSSPropertyBorderImageWidth,
        CSSPropertyID::CSSPropertyBoxShadow,
        CSSPropertyID::CSSPropertyBoxSizing,
        CSSPropertyID::CSSPropertyBreakAfter,
        CSSPropertyID::CSSPropertyBreakBefore,
        CSSPropertyID::CSSPropertyBreakInside,
        CSSPropertyID::CSSPropertyBufferedRendering,
        CSSPropertyID::CSSPropertyCaptionSide,
        CSSPropertyID::CSSPropertyCaretColor,
        CSSPropertyID::CSSPropertyClear,
        CSSPropertyID::CSSPropertyClip,
        CSSPropertyID::CSSPropertyClipPath,
        CSSPropertyID::CSSPropertyClipRule,
        CSSPropertyID::CSSPropertyColor,
        CSSPropertyID::CSSPropertyColorInterpolation,
        CSSPropertyID::CSSPropertyColorInterpolationFilters,
        CSSPropertyID::CSSPropertyColumnCount,
        CSSPropertyID::CSSPropertyColumnFill,
        CSSPropertyID::CSSPropertyColumnGap,
        CSSPropertyID::CSSPropertyColumnRuleColor,
        CSSPropertyID::CSSPropertyColumnRuleStyle,
        CSSPropertyID::CSSPropertyColumnRuleWidth,
        CSSPropertyID::CSSPropertyColumnSpan,
        CSSPropertyID::CSSPropertyColumnWidth,
        CSSPropertyID::CSSPropertyContain,
        CSSPropertyID::CSSPropertyContainerName,
        CSSPropertyID::CSSPropertyContainerType,
        CSSPropertyID::CSSPropertyContent,
        CSSPropertyID::CSSPropertyContentVisibility,
        CSSPropertyID::CSSPropertyContinue,
        CSSPropertyID::CSSPropertyCounterIncrement,
        CSSPropertyID::CSSPropertyCounterReset,
        CSSPropertyID::CSSPropertyCounterSet,
        CSSPropertyID::CSSPropertyCursor,
        CSSPropertyID::CSSPropertyCx,
        CSSPropertyID::CSSPropertyCy,
        CSSPropertyID::CSSPropertyD,
        CSSPropertyID::CSSPropertyDominantBaseline,
        CSSPropertyID::CSSPropertyDynamicRangeLimit,
        CSSPropertyID::CSSPropertyEmptyCells,
        CSSPropertyID::CSSPropertyFieldSizing,
        CSSPropertyID::CSSPropertyFill,
        CSSPropertyID::CSSPropertyFillOpacity,
        CSSPropertyID::CSSPropertyFillRule,
        CSSPropertyID::CSSPropertyFilter,
        CSSPropertyID::CSSPropertyFlexBasis,
        CSSPropertyID::CSSPropertyFlexDirection,
        CSSPropertyID::CSSPropertyFlexGrow,
        CSSPropertyID::CSSPropertyFlexShrink,
        CSSPropertyID::CSSPropertyFlexWrap,
        CSSPropertyID::CSSPropertyFloat,
        CSSPropertyID::CSSPropertyFloodColor,
        CSSPropertyID::CSSPropertyFloodOpacity,
        CSSPropertyID::CSSPropertyGlyphOrientationHorizontal,
        CSSPropertyID::CSSPropertyGlyphOrientationVertical,
        CSSPropertyID::CSSPropertyGridAutoColumns,
        CSSPropertyID::CSSPropertyGridAutoFlow,
        CSSPropertyID::CSSPropertyGridAutoRows,
        CSSPropertyID::CSSPropertyGridColumnEnd,
        CSSPropertyID::CSSPropertyGridColumnStart,
        CSSPropertyID::CSSPropertyGridRowEnd,
        CSSPropertyID::CSSPropertyGridRowStart,
        CSSPropertyID::CSSPropertyGridTemplateAreas,
        CSSPropertyID::CSSPropertyGridTemplateColumns,
        CSSPropertyID::CSSPropertyGridTemplateRows,
        CSSPropertyID::CSSPropertyHangingPunctuation,
        CSSPropertyID::CSSPropertyHyphenateCharacter,
        CSSPropertyID::CSSPropertyHyphens,
        CSSPropertyID::CSSPropertyImageOrientation,
        CSSPropertyID::CSSPropertyImageRendering,
        CSSPropertyID::CSSPropertyInputSecurity,
        CSSPropertyID::CSSPropertyIsolation,
        CSSPropertyID::CSSPropertyJustifyContent,
        CSSPropertyID::CSSPropertyJustifyItems,
        CSSPropertyID::CSSPropertyJustifySelf,
        CSSPropertyID::CSSPropertyLightingColor,
        CSSPropertyID::CSSPropertyLineBreak,
        CSSPropertyID::CSSPropertyLineFitEdge,
        CSSPropertyID::CSSPropertyLineHeight,
        CSSPropertyID::CSSPropertyListStyleImage,
        CSSPropertyID::CSSPropertyListStylePosition,
        CSSPropertyID::CSSPropertyListStyleType,
        CSSPropertyID::CSSPropertyMarginTrim,
        CSSPropertyID::CSSPropertyMarkerEnd,
        CSSPropertyID::CSSPropertyMarkerMid,
        CSSPropertyID::CSSPropertyMarkerStart,
        CSSPropertyID::CSSPropertyMaskBorderOutset,
        CSSPropertyID::CSSPropertyMaskBorderRepeat,
        CSSPropertyID::CSSPropertyMaskBorderSlice,
        CSSPropertyID::CSSPropertyMaskBorderSource,
        CSSPropertyID::CSSPropertyMaskBorderWidth,
        CSSPropertyID::CSSPropertyMaskClip,
        CSSPropertyID::CSSPropertyMaskComposite,
        CSSPropertyID::CSSPropertyMaskImage,
        CSSPropertyID::CSSPropertyMaskMode,
        CSSPropertyID::CSSPropertyMaskOrigin,
        CSSPropertyID::CSSPropertyMaskRepeat,
        CSSPropertyID::CSSPropertyMaskSize,
        CSSPropertyID::CSSPropertyMaskType,
        CSSPropertyID::CSSPropertyMathStyle,
        CSSPropertyID::CSSPropertyMaxLines,
        CSSPropertyID::CSSPropertyMixBlendMode,
        CSSPropertyID::CSSPropertyObjectFit,
        CSSPropertyID::CSSPropertyObjectPosition,
        CSSPropertyID::CSSPropertyOffsetAnchor,
        CSSPropertyID::CSSPropertyOffsetDistance,
        CSSPropertyID::CSSPropertyOffsetPath,
        CSSPropertyID::CSSPropertyOffsetPosition,
        CSSPropertyID::CSSPropertyOffsetRotate,
        CSSPropertyID::CSSPropertyOpacity,
        CSSPropertyID::CSSPropertyOrder,
        CSSPropertyID::CSSPropertyOrphans,
        CSSPropertyID::CSSPropertyOutlineColor,
        CSSPropertyID::CSSPropertyOutlineOffset,
        CSSPropertyID::CSSPropertyOutlineStyle,
        CSSPropertyID::CSSPropertyOutlineWidth,
        CSSPropertyID::CSSPropertyOverflowAnchor,
        CSSPropertyID::CSSPropertyOverflowWrap,
        CSSPropertyID::CSSPropertyPage,
        CSSPropertyID::CSSPropertyPaintOrder,
        CSSPropertyID::CSSPropertyPerspective,
        CSSPropertyID::CSSPropertyPerspectiveOriginX,
        CSSPropertyID::CSSPropertyPerspectiveOriginY,
        CSSPropertyID::CSSPropertyPointerEvents,
        CSSPropertyID::CSSPropertyPosition,
        CSSPropertyID::CSSPropertyPositionAnchor,
        CSSPropertyID::CSSPropertyPositionArea,
        CSSPropertyID::CSSPropertyPositionTryFallbacks,
        CSSPropertyID::CSSPropertyPositionTryOrder,
        CSSPropertyID::CSSPropertyPositionVisibility,
        CSSPropertyID::CSSPropertyPrintColorAdjust,
        CSSPropertyID::CSSPropertyQuotes,
        CSSPropertyID::CSSPropertyR,
        CSSPropertyID::CSSPropertyResize,
        CSSPropertyID::CSSPropertyRotate,
        CSSPropertyID::CSSPropertyRowGap,
        CSSPropertyID::CSSPropertyRubyAlign,
        CSSPropertyID::CSSPropertyRubyOverhang,
        CSSPropertyID::CSSPropertyRx,
        CSSPropertyID::CSSPropertyRy,
        CSSPropertyID::CSSPropertyScale,
        CSSPropertyID::CSSPropertyScrollBehavior,
        CSSPropertyID::CSSPropertyScrollSnapAlign,
        CSSPropertyID::CSSPropertyScrollSnapStop,
        CSSPropertyID::CSSPropertyScrollSnapType,
        CSSPropertyID::CSSPropertyScrollTimelineAxis,
        CSSPropertyID::CSSPropertyScrollTimelineName,
        CSSPropertyID::CSSPropertyScrollbarColor,
        CSSPropertyID::CSSPropertyScrollbarGutter,
        CSSPropertyID::CSSPropertyScrollbarWidth,
        CSSPropertyID::CSSPropertyShapeImageThreshold,
        CSSPropertyID::CSSPropertyShapeMargin,
        CSSPropertyID::CSSPropertyShapeOutside,
        CSSPropertyID::CSSPropertyShapeRendering,
        CSSPropertyID::CSSPropertySpeakAs,
        CSSPropertyID::CSSPropertyStopColor,
        CSSPropertyID::CSSPropertyStopOpacity,
        CSSPropertyID::CSSPropertyStroke,
        CSSPropertyID::CSSPropertyStrokeColor,
        CSSPropertyID::CSSPropertyStrokeDasharray,
        CSSPropertyID::CSSPropertyStrokeDashoffset,
        CSSPropertyID::CSSPropertyStrokeLinecap,
        CSSPropertyID::CSSPropertyStrokeLinejoin,
        CSSPropertyID::CSSPropertyStrokeMiterlimit,
        CSSPropertyID::CSSPropertyStrokeOpacity,
        CSSPropertyID::CSSPropertyStrokeWidth,
        CSSPropertyID::CSSPropertyTabSize,
        CSSPropertyID::CSSPropertyTableLayout,
        CSSPropertyID::CSSPropertyTextAlign,
        CSSPropertyID::CSSPropertyTextAlignLast,
        CSSPropertyID::CSSPropertyTextAnchor,
        CSSPropertyID::CSSPropertyTextBoxEdge,
        CSSPropertyID::CSSPropertyTextBoxTrim,
        CSSPropertyID::CSSPropertyTextCombineUpright,
        CSSPropertyID::CSSPropertyTextDecorationColor,
        CSSPropertyID::CSSPropertyTextDecorationLine,
        CSSPropertyID::CSSPropertyTextDecorationSkipInk,
        CSSPropertyID::CSSPropertyTextDecorationStyle,
        CSSPropertyID::CSSPropertyTextDecorationThickness,
        CSSPropertyID::CSSPropertyTextEmphasisColor,
        CSSPropertyID::CSSPropertyTextEmphasisPosition,
        CSSPropertyID::CSSPropertyTextEmphasisStyle,
        CSSPropertyID::CSSPropertyTextGroupAlign,
        CSSPropertyID::CSSPropertyTextIndent,
        CSSPropertyID::CSSPropertyTextJustify,
        CSSPropertyID::CSSPropertyTextOverflow,
        CSSPropertyID::CSSPropertyTextShadow,
        CSSPropertyID::CSSPropertyTextTransform,
        CSSPropertyID::CSSPropertyTextUnderlineOffset,
        CSSPropertyID::CSSPropertyTextUnderlinePosition,
        CSSPropertyID::CSSPropertyTextWrapMode,
        CSSPropertyID::CSSPropertyTextWrapStyle,
        CSSPropertyID::CSSPropertyTimelineScope,
        CSSPropertyID::CSSPropertyTouchAction,
        CSSPropertyID::CSSPropertyTransform,
        CSSPropertyID::CSSPropertyTransformBox,
        CSSPropertyID::CSSPropertyTransformOriginX,
        CSSPropertyID::CSSPropertyTransformOriginY,
        CSSPropertyID::CSSPropertyTransformOriginZ,
        CSSPropertyID::CSSPropertyTransformStyle,
        CSSPropertyID::CSSPropertyTransitionBehavior,
        CSSPropertyID::CSSPropertyTransitionDelay,
        CSSPropertyID::CSSPropertyTransitionDuration,
        CSSPropertyID::CSSPropertyTransitionProperty,
        CSSPropertyID::CSSPropertyTransitionTimingFunction,
        CSSPropertyID::CSSPropertyTranslate,
        CSSPropertyID::CSSPropertyVectorEffect,
        CSSPropertyID::CSSPropertyVerticalAlign,
        CSSPropertyID::CSSPropertyViewTimelineAxis,
        CSSPropertyID::CSSPropertyViewTimelineInset,
        CSSPropertyID::CSSPropertyViewTimelineName,
        CSSPropertyID::CSSPropertyViewTransitionClass,
        CSSPropertyID::CSSPropertyViewTransitionName,
        CSSPropertyID::CSSPropertyVisibility,
        CSSPropertyID::CSSPropertyWhiteSpaceCollapse,
        CSSPropertyID::CSSPropertyWidows,
        CSSPropertyID::CSSPropertyWillChange,
        CSSPropertyID::CSSPropertyWordBreak,
        CSSPropertyID::CSSPropertyX,
        CSSPropertyID::CSSPropertyY,
        CSSPropertyID::CSSPropertyZIndex,
        CSSPropertyID::CSSPropertyAppleColorFilter,
        CSSPropertyID::CSSPropertyWebkitBackdropFilter,
        CSSPropertyID::CSSPropertyWebkitBackgroundClip,
        CSSPropertyID::CSSPropertyWebkitBackgroundOrigin,
        CSSPropertyID::CSSPropertyWebkitBorderHorizontalSpacing,
        CSSPropertyID::CSSPropertyWebkitBorderVerticalSpacing,
        CSSPropertyID::CSSPropertyWebkitBoxAlign,
        CSSPropertyID::CSSPropertyWebkitBoxDecorationBreak,
        CSSPropertyID::CSSPropertyWebkitBoxDirection,
        CSSPropertyID::CSSPropertyWebkitBoxFlex,
        CSSPropertyID::CSSPropertyWebkitBoxFlexGroup,
        CSSPropertyID::CSSPropertyWebkitBoxLines,
        CSSPropertyID::CSSPropertyWebkitBoxOrdinalGroup,
        CSSPropertyID::CSSPropertyWebkitBoxOrient,
        CSSPropertyID::CSSPropertyWebkitBoxPack,
        CSSPropertyID::CSSPropertyWebkitBoxReflect,
        CSSPropertyID::CSSPropertyWebkitBoxShadow,
        CSSPropertyID::CSSPropertyWebkitColumnAxis,
        CSSPropertyID::CSSPropertyWebkitColumnProgression,
        CSSPropertyID::CSSPropertyWebkitCursorVisibility,
        CSSPropertyID::CSSPropertyWebkitFontSizeDelta,
        CSSPropertyID::CSSPropertyWebkitHyphenateLimitAfter,
        CSSPropertyID::CSSPropertyWebkitHyphenateLimitBefore,
        CSSPropertyID::CSSPropertyWebkitHyphenateLimitLines,
        CSSPropertyID::CSSPropertyWebkitInitialLetter,
        CSSPropertyID::CSSPropertyWebkitLineAlign,
        CSSPropertyID::CSSPropertyWebkitLineBoxContain,
        CSSPropertyID::CSSPropertyWebkitLineClamp,
        CSSPropertyID::CSSPropertyWebkitLineGrid,
        CSSPropertyID::CSSPropertyWebkitLineSnap,
        CSSPropertyID::CSSPropertyWebkitMarqueeDirection,
        CSSPropertyID::CSSPropertyWebkitMarqueeIncrement,
        CSSPropertyID::CSSPropertyWebkitMarqueeRepetition,
        CSSPropertyID::CSSPropertyWebkitMarqueeSpeed,
        CSSPropertyID::CSSPropertyWebkitMarqueeStyle,
        CSSPropertyID::CSSPropertyWebkitMaskClip,
        CSSPropertyID::CSSPropertyWebkitMaskComposite,
        CSSPropertyID::CSSPropertyWebkitMaskPositionX,
        CSSPropertyID::CSSPropertyWebkitMaskPositionY,
        CSSPropertyID::CSSPropertyWebkitMaskSourceType,
        CSSPropertyID::CSSPropertyWebkitNbspMode,
        CSSPropertyID::CSSPropertyWebkitRtlOrdering,
        CSSPropertyID::CSSPropertyWebkitRubyPosition,
        CSSPropertyID::CSSPropertyWebkitTextCombine,
        CSSPropertyID::CSSPropertyWebkitTextDecorationsInEffect,
        CSSPropertyID::CSSPropertyWebkitTextFillColor,
        CSSPropertyID::CSSPropertyWebkitTextSecurity,
        CSSPropertyID::CSSPropertyWebkitTextStrokeColor,
        CSSPropertyID::CSSPropertyWebkitTextStrokeWidth,
        CSSPropertyID::CSSPropertyWebkitUserDrag,
        CSSPropertyID::CSSPropertyWebkitUserModify,
        CSSPropertyID::CSSPropertyWebkitUserSelect,
        CSSPropertyID::CSSPropertyWordSpacing,
        CSSPropertyID::CSSPropertyBorderBottomColor,
        CSSPropertyID::CSSPropertyBorderBottomLeftRadius,
        CSSPropertyID::CSSPropertyBorderBottomRightRadius,
        CSSPropertyID::CSSPropertyBorderBottomStyle,
        CSSPropertyID::CSSPropertyBorderBottomWidth,
        CSSPropertyID::CSSPropertyBorderLeftColor,
        CSSPropertyID::CSSPropertyBorderLeftStyle,
        CSSPropertyID::CSSPropertyBorderLeftWidth,
        CSSPropertyID::CSSPropertyBorderRightColor,
        CSSPropertyID::CSSPropertyBorderRightStyle,
        CSSPropertyID::CSSPropertyBorderRightWidth,
        CSSPropertyID::CSSPropertyBorderTopColor,
        CSSPropertyID::CSSPropertyBorderTopLeftRadius,
        CSSPropertyID::CSSPropertyBorderTopRightRadius,
        CSSPropertyID::CSSPropertyBorderTopStyle,
        CSSPropertyID::CSSPropertyBorderTopWidth,
        CSSPropertyID::CSSPropertyBottom,
        CSSPropertyID::CSSPropertyContainIntrinsicHeight,
        CSSPropertyID::CSSPropertyContainIntrinsicWidth,
        CSSPropertyID::CSSPropertyCornerBottomLeftShape,
        CSSPropertyID::CSSPropertyCornerBottomRightShape,
        CSSPropertyID::CSSPropertyCornerTopLeftShape,
        CSSPropertyID::CSSPropertyCornerTopRightShape,
        CSSPropertyID::CSSPropertyHeight,
        CSSPropertyID::CSSPropertyLeft,
        CSSPropertyID::CSSPropertyMarginBottom,
        CSSPropertyID::CSSPropertyMarginLeft,
        CSSPropertyID::CSSPropertyMarginRight,
        CSSPropertyID::CSSPropertyMarginTop,
        CSSPropertyID::CSSPropertyMaxHeight,
        CSSPropertyID::CSSPropertyMaxWidth,
        CSSPropertyID::CSSPropertyMinHeight,
        CSSPropertyID::CSSPropertyMinWidth,
        CSSPropertyID::CSSPropertyOverflowX,
        CSSPropertyID::CSSPropertyOverflowY,
        CSSPropertyID::CSSPropertyOverscrollBehaviorX,
        CSSPropertyID::CSSPropertyOverscrollBehaviorY,
        CSSPropertyID::CSSPropertyPaddingBottom,
        CSSPropertyID::CSSPropertyPaddingLeft,
        CSSPropertyID::CSSPropertyPaddingRight,
        CSSPropertyID::CSSPropertyPaddingTop,
        CSSPropertyID::CSSPropertyRight,
        CSSPropertyID::CSSPropertyScrollMarginBottom,
        CSSPropertyID::CSSPropertyScrollMarginLeft,
        CSSPropertyID::CSSPropertyScrollMarginRight,
        CSSPropertyID::CSSPropertyScrollMarginTop,
        CSSPropertyID::CSSPropertyScrollPaddingBottom,
        CSSPropertyID::CSSPropertyScrollPaddingLeft,
        CSSPropertyID::CSSPropertyScrollPaddingRight,
        CSSPropertyID::CSSPropertyScrollPaddingTop,
        CSSPropertyID::CSSPropertyTop,
        CSSPropertyID::CSSPropertyWidth,
        CSSPropertyID::CSSPropertyBlockSize,
        CSSPropertyID::CSSPropertyBorderBlockEndColor,
        CSSPropertyID::CSSPropertyBorderBlockEndStyle,
        CSSPropertyID::CSSPropertyBorderBlockEndWidth,
        CSSPropertyID::CSSPropertyBorderBlockStartColor,
        CSSPropertyID::CSSPropertyBorderBlockStartStyle,
        CSSPropertyID::CSSPropertyBorderBlockStartWidth,
        CSSPropertyID::CSSPropertyBorderEndEndRadius,
        CSSPropertyID::CSSPropertyBorderEndStartRadius,
        CSSPropertyID::CSSPropertyBorderInlineEndColor,
        CSSPropertyID::CSSPropertyBorderInlineEndStyle,
        CSSPropertyID::CSSPropertyBorderInlineEndWidth,
        CSSPropertyID::CSSPropertyBorderInlineStartColor,
        CSSPropertyID::CSSPropertyBorderInlineStartStyle,
        CSSPropertyID::CSSPropertyBorderInlineStartWidth,
        CSSPropertyID::CSSPropertyBorderStartEndRadius,
        CSSPropertyID::CSSPropertyBorderStartStartRadius,
        CSSPropertyID::CSSPropertyContainIntrinsicBlockSize,
        CSSPropertyID::CSSPropertyContainIntrinsicInlineSize,
        CSSPropertyID::CSSPropertyCornerEndEndShape,
        CSSPropertyID::CSSPropertyCornerEndStartShape,
        CSSPropertyID::CSSPropertyCornerStartEndShape,
        CSSPropertyID::CSSPropertyCornerStartStartShape,
        CSSPropertyID::CSSPropertyInlineSize,
        CSSPropertyID::CSSPropertyInsetBlockEnd,
        CSSPropertyID::CSSPropertyInsetBlockStart,
        CSSPropertyID::CSSPropertyInsetInlineEnd,
        CSSPropertyID::CSSPropertyInsetInlineStart,
        CSSPropertyID::CSSPropertyMarginBlockEnd,
        CSSPropertyID::CSSPropertyMarginBlockStart,
        CSSPropertyID::CSSPropertyMarginInlineEnd,
        CSSPropertyID::CSSPropertyMarginInlineStart,
        CSSPropertyID::CSSPropertyMaxBlockSize,
        CSSPropertyID::CSSPropertyMaxInlineSize,
        CSSPropertyID::CSSPropertyMinBlockSize,
        CSSPropertyID::CSSPropertyMinInlineSize,
        CSSPropertyID::CSSPropertyOverflowBlock,
        CSSPropertyID::CSSPropertyOverflowInline,
        CSSPropertyID::CSSPropertyOverscrollBehaviorBlock,
        CSSPropertyID::CSSPropertyOverscrollBehaviorInline,
        CSSPropertyID::CSSPropertyPaddingBlockEnd,
        CSSPropertyID::CSSPropertyPaddingBlockStart,
        CSSPropertyID::CSSPropertyPaddingInlineEnd,
        CSSPropertyID::CSSPropertyPaddingInlineStart,
        CSSPropertyID::CSSPropertyScrollMarginBlockEnd,
        CSSPropertyID::CSSPropertyScrollMarginBlockStart,
        CSSPropertyID::CSSPropertyScrollMarginInlineEnd,
        CSSPropertyID::CSSPropertyScrollMarginInlineStart,
        CSSPropertyID::CSSPropertyScrollPaddingBlockEnd,
        CSSPropertyID::CSSPropertyScrollPaddingBlockStart,
        CSSPropertyID::CSSPropertyScrollPaddingInlineEnd,
        CSSPropertyID::CSSPropertyScrollPaddingInlineStart,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyAll, std::span { allProperties });
}

StylePropertyShorthand animationShorthand()
{
    static const CSSPropertyID animationProperties[] = {
        CSSPropertyID::CSSPropertyAnimationDuration,
        CSSPropertyID::CSSPropertyAnimationTimingFunction,
        CSSPropertyID::CSSPropertyAnimationDelay,
        CSSPropertyID::CSSPropertyAnimationIterationCount,
        CSSPropertyID::CSSPropertyAnimationDirection,
        CSSPropertyID::CSSPropertyAnimationFillMode,
        CSSPropertyID::CSSPropertyAnimationPlayState,
        CSSPropertyID::CSSPropertyAnimationName,
        CSSPropertyID::CSSPropertyAnimationTimeline,
        CSSPropertyID::CSSPropertyAnimationRangeStart,
        CSSPropertyID::CSSPropertyAnimationRangeEnd,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyAnimation, std::span { animationProperties });
}

StylePropertyShorthand animationRangeShorthand()
{
    static const CSSPropertyID animationRangeProperties[] = {
        CSSPropertyID::CSSPropertyAnimationRangeStart,
        CSSPropertyID::CSSPropertyAnimationRangeEnd,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyAnimationRange, std::span { animationRangeProperties });
}

StylePropertyShorthand backgroundShorthand()
{
    static const CSSPropertyID backgroundProperties[] = {
        CSSPropertyID::CSSPropertyBackgroundImage,
        CSSPropertyID::CSSPropertyBackgroundPositionX,
        CSSPropertyID::CSSPropertyBackgroundPositionY,
        CSSPropertyID::CSSPropertyBackgroundSize,
        CSSPropertyID::CSSPropertyBackgroundRepeat,
        CSSPropertyID::CSSPropertyBackgroundAttachment,
        CSSPropertyID::CSSPropertyBackgroundOrigin,
        CSSPropertyID::CSSPropertyBackgroundClip,
        CSSPropertyID::CSSPropertyBackgroundColor,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBackground, std::span { backgroundProperties });
}

StylePropertyShorthand backgroundPositionShorthand()
{
    static const CSSPropertyID backgroundPositionProperties[] = {
        CSSPropertyID::CSSPropertyBackgroundPositionX,
        CSSPropertyID::CSSPropertyBackgroundPositionY,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBackgroundPosition, std::span { backgroundPositionProperties });
}

StylePropertyShorthand blockStepShorthand()
{
    static const CSSPropertyID blockStepProperties[] = {
        CSSPropertyID::CSSPropertyBlockStepSize,
        CSSPropertyID::CSSPropertyBlockStepInsert,
        CSSPropertyID::CSSPropertyBlockStepAlign,
        CSSPropertyID::CSSPropertyBlockStepRound,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBlockStep, std::span { blockStepProperties });
}

StylePropertyShorthand borderShorthand()
{
    static const CSSPropertyID borderProperties[] = {
        CSSPropertyID::CSSPropertyBorderTopWidth,
        CSSPropertyID::CSSPropertyBorderRightWidth,
        CSSPropertyID::CSSPropertyBorderBottomWidth,
        CSSPropertyID::CSSPropertyBorderLeftWidth,
        CSSPropertyID::CSSPropertyBorderTopStyle,
        CSSPropertyID::CSSPropertyBorderRightStyle,
        CSSPropertyID::CSSPropertyBorderBottomStyle,
        CSSPropertyID::CSSPropertyBorderLeftStyle,
        CSSPropertyID::CSSPropertyBorderTopColor,
        CSSPropertyID::CSSPropertyBorderRightColor,
        CSSPropertyID::CSSPropertyBorderBottomColor,
        CSSPropertyID::CSSPropertyBorderLeftColor,
        CSSPropertyID::CSSPropertyBorderImageSource,
        CSSPropertyID::CSSPropertyBorderImageSlice,
        CSSPropertyID::CSSPropertyBorderImageWidth,
        CSSPropertyID::CSSPropertyBorderImageOutset,
        CSSPropertyID::CSSPropertyBorderImageRepeat,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorder, std::span { borderProperties });
}

StylePropertyShorthand borderBlockShorthand()
{
    static const CSSPropertyID borderBlockProperties[] = {
        CSSPropertyID::CSSPropertyBorderBlockStartWidth,
        CSSPropertyID::CSSPropertyBorderBlockEndWidth,
        CSSPropertyID::CSSPropertyBorderBlockStartStyle,
        CSSPropertyID::CSSPropertyBorderBlockEndStyle,
        CSSPropertyID::CSSPropertyBorderBlockStartColor,
        CSSPropertyID::CSSPropertyBorderBlockEndColor,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderBlock, std::span { borderBlockProperties });
}

StylePropertyShorthand borderBlockColorShorthand()
{
    static const CSSPropertyID borderBlockColorProperties[] = {
        CSSPropertyID::CSSPropertyBorderBlockStartColor,
        CSSPropertyID::CSSPropertyBorderBlockEndColor,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderBlockColor, std::span { borderBlockColorProperties });
}

StylePropertyShorthand borderBlockEndShorthand()
{
    static const CSSPropertyID borderBlockEndProperties[] = {
        CSSPropertyID::CSSPropertyBorderBlockEndWidth,
        CSSPropertyID::CSSPropertyBorderBlockEndStyle,
        CSSPropertyID::CSSPropertyBorderBlockEndColor,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderBlockEnd, std::span { borderBlockEndProperties });
}

StylePropertyShorthand borderBlockStartShorthand()
{
    static const CSSPropertyID borderBlockStartProperties[] = {
        CSSPropertyID::CSSPropertyBorderBlockStartWidth,
        CSSPropertyID::CSSPropertyBorderBlockStartStyle,
        CSSPropertyID::CSSPropertyBorderBlockStartColor,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderBlockStart, std::span { borderBlockStartProperties });
}

StylePropertyShorthand borderBlockStyleShorthand()
{
    static const CSSPropertyID borderBlockStyleProperties[] = {
        CSSPropertyID::CSSPropertyBorderBlockStartStyle,
        CSSPropertyID::CSSPropertyBorderBlockEndStyle,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderBlockStyle, std::span { borderBlockStyleProperties });
}

StylePropertyShorthand borderBlockWidthShorthand()
{
    static const CSSPropertyID borderBlockWidthProperties[] = {
        CSSPropertyID::CSSPropertyBorderBlockStartWidth,
        CSSPropertyID::CSSPropertyBorderBlockEndWidth,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderBlockWidth, std::span { borderBlockWidthProperties });
}

StylePropertyShorthand borderBottomShorthand()
{
    static const CSSPropertyID borderBottomProperties[] = {
        CSSPropertyID::CSSPropertyBorderBottomWidth,
        CSSPropertyID::CSSPropertyBorderBottomStyle,
        CSSPropertyID::CSSPropertyBorderBottomColor,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderBottom, std::span { borderBottomProperties });
}

StylePropertyShorthand borderColorShorthand()
{
    static const CSSPropertyID borderColorProperties[] = {
        CSSPropertyID::CSSPropertyBorderTopColor,
        CSSPropertyID::CSSPropertyBorderRightColor,
        CSSPropertyID::CSSPropertyBorderBottomColor,
        CSSPropertyID::CSSPropertyBorderLeftColor,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderColor, std::span { borderColorProperties });
}

StylePropertyShorthand borderImageShorthand()
{
    static const CSSPropertyID borderImageProperties[] = {
        CSSPropertyID::CSSPropertyBorderImageSource,
        CSSPropertyID::CSSPropertyBorderImageSlice,
        CSSPropertyID::CSSPropertyBorderImageWidth,
        CSSPropertyID::CSSPropertyBorderImageOutset,
        CSSPropertyID::CSSPropertyBorderImageRepeat,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderImage, std::span { borderImageProperties });
}

StylePropertyShorthand borderInlineShorthand()
{
    static const CSSPropertyID borderInlineProperties[] = {
        CSSPropertyID::CSSPropertyBorderInlineStartWidth,
        CSSPropertyID::CSSPropertyBorderInlineEndWidth,
        CSSPropertyID::CSSPropertyBorderInlineStartStyle,
        CSSPropertyID::CSSPropertyBorderInlineEndStyle,
        CSSPropertyID::CSSPropertyBorderInlineStartColor,
        CSSPropertyID::CSSPropertyBorderInlineEndColor,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderInline, std::span { borderInlineProperties });
}

StylePropertyShorthand borderInlineColorShorthand()
{
    static const CSSPropertyID borderInlineColorProperties[] = {
        CSSPropertyID::CSSPropertyBorderInlineStartColor,
        CSSPropertyID::CSSPropertyBorderInlineEndColor,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderInlineColor, std::span { borderInlineColorProperties });
}

StylePropertyShorthand borderInlineEndShorthand()
{
    static const CSSPropertyID borderInlineEndProperties[] = {
        CSSPropertyID::CSSPropertyBorderInlineEndWidth,
        CSSPropertyID::CSSPropertyBorderInlineEndStyle,
        CSSPropertyID::CSSPropertyBorderInlineEndColor,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderInlineEnd, std::span { borderInlineEndProperties });
}

StylePropertyShorthand borderInlineStartShorthand()
{
    static const CSSPropertyID borderInlineStartProperties[] = {
        CSSPropertyID::CSSPropertyBorderInlineStartWidth,
        CSSPropertyID::CSSPropertyBorderInlineStartStyle,
        CSSPropertyID::CSSPropertyBorderInlineStartColor,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderInlineStart, std::span { borderInlineStartProperties });
}

StylePropertyShorthand borderInlineStyleShorthand()
{
    static const CSSPropertyID borderInlineStyleProperties[] = {
        CSSPropertyID::CSSPropertyBorderInlineStartStyle,
        CSSPropertyID::CSSPropertyBorderInlineEndStyle,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderInlineStyle, std::span { borderInlineStyleProperties });
}

StylePropertyShorthand borderInlineWidthShorthand()
{
    static const CSSPropertyID borderInlineWidthProperties[] = {
        CSSPropertyID::CSSPropertyBorderInlineStartWidth,
        CSSPropertyID::CSSPropertyBorderInlineEndWidth,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderInlineWidth, std::span { borderInlineWidthProperties });
}

StylePropertyShorthand borderLeftShorthand()
{
    static const CSSPropertyID borderLeftProperties[] = {
        CSSPropertyID::CSSPropertyBorderLeftWidth,
        CSSPropertyID::CSSPropertyBorderLeftStyle,
        CSSPropertyID::CSSPropertyBorderLeftColor,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderLeft, std::span { borderLeftProperties });
}

StylePropertyShorthand borderRadiusShorthand()
{
    static const CSSPropertyID borderRadiusProperties[] = {
        CSSPropertyID::CSSPropertyBorderTopLeftRadius,
        CSSPropertyID::CSSPropertyBorderTopRightRadius,
        CSSPropertyID::CSSPropertyBorderBottomRightRadius,
        CSSPropertyID::CSSPropertyBorderBottomLeftRadius,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderRadius, std::span { borderRadiusProperties });
}

StylePropertyShorthand borderRightShorthand()
{
    static const CSSPropertyID borderRightProperties[] = {
        CSSPropertyID::CSSPropertyBorderRightWidth,
        CSSPropertyID::CSSPropertyBorderRightStyle,
        CSSPropertyID::CSSPropertyBorderRightColor,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderRight, std::span { borderRightProperties });
}

StylePropertyShorthand borderSpacingShorthand()
{
    static const CSSPropertyID borderSpacingProperties[] = {
        CSSPropertyID::CSSPropertyWebkitBorderHorizontalSpacing,
        CSSPropertyID::CSSPropertyWebkitBorderVerticalSpacing,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderSpacing, std::span { borderSpacingProperties });
}

StylePropertyShorthand borderStyleShorthand()
{
    static const CSSPropertyID borderStyleProperties[] = {
        CSSPropertyID::CSSPropertyBorderTopStyle,
        CSSPropertyID::CSSPropertyBorderRightStyle,
        CSSPropertyID::CSSPropertyBorderBottomStyle,
        CSSPropertyID::CSSPropertyBorderLeftStyle,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderStyle, std::span { borderStyleProperties });
}

StylePropertyShorthand borderTopShorthand()
{
    static const CSSPropertyID borderTopProperties[] = {
        CSSPropertyID::CSSPropertyBorderTopWidth,
        CSSPropertyID::CSSPropertyBorderTopStyle,
        CSSPropertyID::CSSPropertyBorderTopColor,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderTop, std::span { borderTopProperties });
}

StylePropertyShorthand borderWidthShorthand()
{
    static const CSSPropertyID borderWidthProperties[] = {
        CSSPropertyID::CSSPropertyBorderTopWidth,
        CSSPropertyID::CSSPropertyBorderRightWidth,
        CSSPropertyID::CSSPropertyBorderBottomWidth,
        CSSPropertyID::CSSPropertyBorderLeftWidth,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyBorderWidth, std::span { borderWidthProperties });
}

StylePropertyShorthand columnRuleShorthand()
{
    static const CSSPropertyID columnRuleProperties[] = {
        CSSPropertyID::CSSPropertyColumnRuleWidth,
        CSSPropertyID::CSSPropertyColumnRuleStyle,
        CSSPropertyID::CSSPropertyColumnRuleColor,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyColumnRule, std::span { columnRuleProperties });
}

StylePropertyShorthand columnsShorthand()
{
    static const CSSPropertyID columnsProperties[] = {
        CSSPropertyID::CSSPropertyColumnWidth,
        CSSPropertyID::CSSPropertyColumnCount,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyColumns, std::span { columnsProperties });
}

StylePropertyShorthand containIntrinsicSizeShorthand()
{
    static const CSSPropertyID containIntrinsicSizeProperties[] = {
        CSSPropertyID::CSSPropertyContainIntrinsicWidth,
        CSSPropertyID::CSSPropertyContainIntrinsicHeight,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyContainIntrinsicSize, std::span { containIntrinsicSizeProperties });
}

StylePropertyShorthand containerShorthand()
{
    static const CSSPropertyID containerProperties[] = {
        CSSPropertyID::CSSPropertyContainerName,
        CSSPropertyID::CSSPropertyContainerType,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyContainer, std::span { containerProperties });
}

StylePropertyShorthand cornerShapeShorthand()
{
    static const CSSPropertyID cornerShapeProperties[] = {
        CSSPropertyID::CSSPropertyCornerTopLeftShape,
        CSSPropertyID::CSSPropertyCornerTopRightShape,
        CSSPropertyID::CSSPropertyCornerBottomRightShape,
        CSSPropertyID::CSSPropertyCornerBottomLeftShape,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyCornerShape, std::span { cornerShapeProperties });
}

StylePropertyShorthand flexShorthand()
{
    static const CSSPropertyID flexProperties[] = {
        CSSPropertyID::CSSPropertyFlexGrow,
        CSSPropertyID::CSSPropertyFlexShrink,
        CSSPropertyID::CSSPropertyFlexBasis,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyFlex, std::span { flexProperties });
}

StylePropertyShorthand flexFlowShorthand()
{
    static const CSSPropertyID flexFlowProperties[] = {
        CSSPropertyID::CSSPropertyFlexDirection,
        CSSPropertyID::CSSPropertyFlexWrap,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyFlexFlow, std::span { flexFlowProperties });
}

StylePropertyShorthand fontShorthand()
{
    static const CSSPropertyID fontProperties[] = {
        CSSPropertyID::CSSPropertyFontStyle,
        CSSPropertyID::CSSPropertyFontVariantCaps,
        CSSPropertyID::CSSPropertyFontWeight,
        CSSPropertyID::CSSPropertyFontWidth,
        CSSPropertyID::CSSPropertyFontSize,
        CSSPropertyID::CSSPropertyLineHeight,
        CSSPropertyID::CSSPropertyFontFamily,
        CSSPropertyID::CSSPropertyFontSizeAdjust,
        CSSPropertyID::CSSPropertyFontKerning,
        CSSPropertyID::CSSPropertyFontVariantAlternates,
        CSSPropertyID::CSSPropertyFontVariantLigatures,
        CSSPropertyID::CSSPropertyFontVariantNumeric,
        CSSPropertyID::CSSPropertyFontVariantEastAsian,
        CSSPropertyID::CSSPropertyFontVariantPosition,
        CSSPropertyID::CSSPropertyFontVariantEmoji,
        CSSPropertyID::CSSPropertyFontFeatureSettings,
        CSSPropertyID::CSSPropertyFontOpticalSizing,
        CSSPropertyID::CSSPropertyFontVariationSettings,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyFont, std::span { fontProperties });
}

StylePropertyShorthand fontSynthesisShorthand()
{
    static const CSSPropertyID fontSynthesisProperties[] = {
        CSSPropertyID::CSSPropertyFontSynthesisWeight,
        CSSPropertyID::CSSPropertyFontSynthesisStyle,
        CSSPropertyID::CSSPropertyFontSynthesisSmallCaps,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyFontSynthesis, std::span { fontSynthesisProperties });
}

StylePropertyShorthand fontVariantShorthand()
{
    static const CSSPropertyID fontVariantProperties[] = {
        CSSPropertyID::CSSPropertyFontVariantLigatures,
        CSSPropertyID::CSSPropertyFontVariantCaps,
        CSSPropertyID::CSSPropertyFontVariantAlternates,
        CSSPropertyID::CSSPropertyFontVariantNumeric,
        CSSPropertyID::CSSPropertyFontVariantEastAsian,
        CSSPropertyID::CSSPropertyFontVariantPosition,
        CSSPropertyID::CSSPropertyFontVariantEmoji,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyFontVariant, std::span { fontVariantProperties });
}

StylePropertyShorthand gapShorthand()
{
    static const CSSPropertyID gapProperties[] = {
        CSSPropertyID::CSSPropertyRowGap,
        CSSPropertyID::CSSPropertyColumnGap,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyGap, std::span { gapProperties });
}

StylePropertyShorthand gridShorthand()
{
    static const CSSPropertyID gridProperties[] = {
        CSSPropertyID::CSSPropertyGridTemplateRows,
        CSSPropertyID::CSSPropertyGridTemplateColumns,
        CSSPropertyID::CSSPropertyGridTemplateAreas,
        CSSPropertyID::CSSPropertyGridAutoFlow,
        CSSPropertyID::CSSPropertyGridAutoRows,
        CSSPropertyID::CSSPropertyGridAutoColumns,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyGrid, std::span { gridProperties });
}

StylePropertyShorthand gridAreaShorthand()
{
    static const CSSPropertyID gridAreaProperties[] = {
        CSSPropertyID::CSSPropertyGridRowStart,
        CSSPropertyID::CSSPropertyGridColumnStart,
        CSSPropertyID::CSSPropertyGridRowEnd,
        CSSPropertyID::CSSPropertyGridColumnEnd,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyGridArea, std::span { gridAreaProperties });
}

StylePropertyShorthand gridColumnShorthand()
{
    static const CSSPropertyID gridColumnProperties[] = {
        CSSPropertyID::CSSPropertyGridColumnStart,
        CSSPropertyID::CSSPropertyGridColumnEnd,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyGridColumn, std::span { gridColumnProperties });
}

StylePropertyShorthand gridRowShorthand()
{
    static const CSSPropertyID gridRowProperties[] = {
        CSSPropertyID::CSSPropertyGridRowStart,
        CSSPropertyID::CSSPropertyGridRowEnd,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyGridRow, std::span { gridRowProperties });
}

StylePropertyShorthand gridTemplateShorthand()
{
    static const CSSPropertyID gridTemplateProperties[] = {
        CSSPropertyID::CSSPropertyGridTemplateRows,
        CSSPropertyID::CSSPropertyGridTemplateColumns,
        CSSPropertyID::CSSPropertyGridTemplateAreas,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyGridTemplate, std::span { gridTemplateProperties });
}

StylePropertyShorthand insetShorthand()
{
    static const CSSPropertyID insetProperties[] = {
        CSSPropertyID::CSSPropertyTop,
        CSSPropertyID::CSSPropertyRight,
        CSSPropertyID::CSSPropertyBottom,
        CSSPropertyID::CSSPropertyLeft,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyInset, std::span { insetProperties });
}

StylePropertyShorthand insetBlockShorthand()
{
    static const CSSPropertyID insetBlockProperties[] = {
        CSSPropertyID::CSSPropertyInsetBlockStart,
        CSSPropertyID::CSSPropertyInsetBlockEnd,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyInsetBlock, std::span { insetBlockProperties });
}

StylePropertyShorthand insetInlineShorthand()
{
    static const CSSPropertyID insetInlineProperties[] = {
        CSSPropertyID::CSSPropertyInsetInlineStart,
        CSSPropertyID::CSSPropertyInsetInlineEnd,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyInsetInline, std::span { insetInlineProperties });
}

StylePropertyShorthand lineClampShorthand()
{
    static const CSSPropertyID lineClampProperties[] = {
        CSSPropertyID::CSSPropertyMaxLines,
        CSSPropertyID::CSSPropertyBlockEllipsis,
        CSSPropertyID::CSSPropertyContinue,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyLineClamp, std::span { lineClampProperties });
}

StylePropertyShorthand listStyleShorthand()
{
    static const CSSPropertyID listStyleProperties[] = {
        CSSPropertyID::CSSPropertyListStylePosition,
        CSSPropertyID::CSSPropertyListStyleImage,
        CSSPropertyID::CSSPropertyListStyleType,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyListStyle, std::span { listStyleProperties });
}

StylePropertyShorthand marginShorthand()
{
    static const CSSPropertyID marginProperties[] = {
        CSSPropertyID::CSSPropertyMarginTop,
        CSSPropertyID::CSSPropertyMarginRight,
        CSSPropertyID::CSSPropertyMarginBottom,
        CSSPropertyID::CSSPropertyMarginLeft,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyMargin, std::span { marginProperties });
}

StylePropertyShorthand marginBlockShorthand()
{
    static const CSSPropertyID marginBlockProperties[] = {
        CSSPropertyID::CSSPropertyMarginBlockStart,
        CSSPropertyID::CSSPropertyMarginBlockEnd,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyMarginBlock, std::span { marginBlockProperties });
}

StylePropertyShorthand marginInlineShorthand()
{
    static const CSSPropertyID marginInlineProperties[] = {
        CSSPropertyID::CSSPropertyMarginInlineStart,
        CSSPropertyID::CSSPropertyMarginInlineEnd,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyMarginInline, std::span { marginInlineProperties });
}

StylePropertyShorthand markerShorthand()
{
    static const CSSPropertyID markerProperties[] = {
        CSSPropertyID::CSSPropertyMarkerStart,
        CSSPropertyID::CSSPropertyMarkerMid,
        CSSPropertyID::CSSPropertyMarkerEnd,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyMarker, std::span { markerProperties });
}

StylePropertyShorthand maskShorthand()
{
    static const CSSPropertyID maskProperties[] = {
        CSSPropertyID::CSSPropertyMaskImage,
        CSSPropertyID::CSSPropertyWebkitMaskPositionX,
        CSSPropertyID::CSSPropertyWebkitMaskPositionY,
        CSSPropertyID::CSSPropertyMaskSize,
        CSSPropertyID::CSSPropertyMaskRepeat,
        CSSPropertyID::CSSPropertyMaskOrigin,
        CSSPropertyID::CSSPropertyMaskClip,
        CSSPropertyID::CSSPropertyMaskComposite,
        CSSPropertyID::CSSPropertyMaskMode,
        CSSPropertyID::CSSPropertyMaskBorderSource,
        CSSPropertyID::CSSPropertyMaskBorderSlice,
        CSSPropertyID::CSSPropertyMaskBorderWidth,
        CSSPropertyID::CSSPropertyMaskBorderOutset,
        CSSPropertyID::CSSPropertyMaskBorderRepeat,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyMask, std::span { maskProperties });
}

StylePropertyShorthand maskBorderShorthand()
{
    static const CSSPropertyID maskBorderProperties[] = {
        CSSPropertyID::CSSPropertyMaskBorderSource,
        CSSPropertyID::CSSPropertyMaskBorderSlice,
        CSSPropertyID::CSSPropertyMaskBorderWidth,
        CSSPropertyID::CSSPropertyMaskBorderOutset,
        CSSPropertyID::CSSPropertyMaskBorderRepeat,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyMaskBorder, std::span { maskBorderProperties });
}

StylePropertyShorthand maskPositionShorthand()
{
    static const CSSPropertyID maskPositionProperties[] = {
        CSSPropertyID::CSSPropertyWebkitMaskPositionX,
        CSSPropertyID::CSSPropertyWebkitMaskPositionY,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyMaskPosition, std::span { maskPositionProperties });
}

StylePropertyShorthand offsetShorthand()
{
    static const CSSPropertyID offsetProperties[] = {
        CSSPropertyID::CSSPropertyOffsetPosition,
        CSSPropertyID::CSSPropertyOffsetPath,
        CSSPropertyID::CSSPropertyOffsetDistance,
        CSSPropertyID::CSSPropertyOffsetRotate,
        CSSPropertyID::CSSPropertyOffsetAnchor,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyOffset, std::span { offsetProperties });
}

StylePropertyShorthand outlineShorthand()
{
    static const CSSPropertyID outlineProperties[] = {
        CSSPropertyID::CSSPropertyOutlineColor,
        CSSPropertyID::CSSPropertyOutlineStyle,
        CSSPropertyID::CSSPropertyOutlineWidth,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyOutline, std::span { outlineProperties });
}

StylePropertyShorthand overflowShorthand()
{
    static const CSSPropertyID overflowProperties[] = {
        CSSPropertyID::CSSPropertyOverflowX,
        CSSPropertyID::CSSPropertyOverflowY,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyOverflow, std::span { overflowProperties });
}

StylePropertyShorthand overscrollBehaviorShorthand()
{
    static const CSSPropertyID overscrollBehaviorProperties[] = {
        CSSPropertyID::CSSPropertyOverscrollBehaviorX,
        CSSPropertyID::CSSPropertyOverscrollBehaviorY,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyOverscrollBehavior, std::span { overscrollBehaviorProperties });
}

StylePropertyShorthand paddingShorthand()
{
    static const CSSPropertyID paddingProperties[] = {
        CSSPropertyID::CSSPropertyPaddingTop,
        CSSPropertyID::CSSPropertyPaddingRight,
        CSSPropertyID::CSSPropertyPaddingBottom,
        CSSPropertyID::CSSPropertyPaddingLeft,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyPadding, std::span { paddingProperties });
}

StylePropertyShorthand paddingBlockShorthand()
{
    static const CSSPropertyID paddingBlockProperties[] = {
        CSSPropertyID::CSSPropertyPaddingBlockStart,
        CSSPropertyID::CSSPropertyPaddingBlockEnd,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyPaddingBlock, std::span { paddingBlockProperties });
}

StylePropertyShorthand paddingInlineShorthand()
{
    static const CSSPropertyID paddingInlineProperties[] = {
        CSSPropertyID::CSSPropertyPaddingInlineStart,
        CSSPropertyID::CSSPropertyPaddingInlineEnd,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyPaddingInline, std::span { paddingInlineProperties });
}

StylePropertyShorthand pageBreakAfterShorthand()
{
    static const CSSPropertyID pageBreakAfterProperties[] = {
        CSSPropertyID::CSSPropertyBreakAfter,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyPageBreakAfter, std::span { pageBreakAfterProperties });
}

StylePropertyShorthand pageBreakBeforeShorthand()
{
    static const CSSPropertyID pageBreakBeforeProperties[] = {
        CSSPropertyID::CSSPropertyBreakBefore,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyPageBreakBefore, std::span { pageBreakBeforeProperties });
}

StylePropertyShorthand pageBreakInsideShorthand()
{
    static const CSSPropertyID pageBreakInsideProperties[] = {
        CSSPropertyID::CSSPropertyBreakInside,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyPageBreakInside, std::span { pageBreakInsideProperties });
}

StylePropertyShorthand perspectiveOriginShorthand()
{
    static const CSSPropertyID perspectiveOriginProperties[] = {
        CSSPropertyID::CSSPropertyPerspectiveOriginX,
        CSSPropertyID::CSSPropertyPerspectiveOriginY,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyPerspectiveOrigin, std::span { perspectiveOriginProperties });
}

StylePropertyShorthand placeContentShorthand()
{
    static const CSSPropertyID placeContentProperties[] = {
        CSSPropertyID::CSSPropertyAlignContent,
        CSSPropertyID::CSSPropertyJustifyContent,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyPlaceContent, std::span { placeContentProperties });
}

StylePropertyShorthand placeItemsShorthand()
{
    static const CSSPropertyID placeItemsProperties[] = {
        CSSPropertyID::CSSPropertyAlignItems,
        CSSPropertyID::CSSPropertyJustifyItems,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyPlaceItems, std::span { placeItemsProperties });
}

StylePropertyShorthand placeSelfShorthand()
{
    static const CSSPropertyID placeSelfProperties[] = {
        CSSPropertyID::CSSPropertyAlignSelf,
        CSSPropertyID::CSSPropertyJustifySelf,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyPlaceSelf, std::span { placeSelfProperties });
}

StylePropertyShorthand positionTryShorthand()
{
    static const CSSPropertyID positionTryProperties[] = {
        CSSPropertyID::CSSPropertyPositionTryOrder,
        CSSPropertyID::CSSPropertyPositionTryFallbacks,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyPositionTry, std::span { positionTryProperties });
}

StylePropertyShorthand scrollMarginShorthand()
{
    static const CSSPropertyID scrollMarginProperties[] = {
        CSSPropertyID::CSSPropertyScrollMarginTop,
        CSSPropertyID::CSSPropertyScrollMarginRight,
        CSSPropertyID::CSSPropertyScrollMarginBottom,
        CSSPropertyID::CSSPropertyScrollMarginLeft,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyScrollMargin, std::span { scrollMarginProperties });
}

StylePropertyShorthand scrollMarginBlockShorthand()
{
    static const CSSPropertyID scrollMarginBlockProperties[] = {
        CSSPropertyID::CSSPropertyScrollMarginBlockStart,
        CSSPropertyID::CSSPropertyScrollMarginBlockEnd,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyScrollMarginBlock, std::span { scrollMarginBlockProperties });
}

StylePropertyShorthand scrollMarginInlineShorthand()
{
    static const CSSPropertyID scrollMarginInlineProperties[] = {
        CSSPropertyID::CSSPropertyScrollMarginInlineStart,
        CSSPropertyID::CSSPropertyScrollMarginInlineEnd,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyScrollMarginInline, std::span { scrollMarginInlineProperties });
}

StylePropertyShorthand scrollPaddingShorthand()
{
    static const CSSPropertyID scrollPaddingProperties[] = {
        CSSPropertyID::CSSPropertyScrollPaddingTop,
        CSSPropertyID::CSSPropertyScrollPaddingRight,
        CSSPropertyID::CSSPropertyScrollPaddingBottom,
        CSSPropertyID::CSSPropertyScrollPaddingLeft,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyScrollPadding, std::span { scrollPaddingProperties });
}

StylePropertyShorthand scrollPaddingBlockShorthand()
{
    static const CSSPropertyID scrollPaddingBlockProperties[] = {
        CSSPropertyID::CSSPropertyScrollPaddingBlockStart,
        CSSPropertyID::CSSPropertyScrollPaddingBlockEnd,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyScrollPaddingBlock, std::span { scrollPaddingBlockProperties });
}

StylePropertyShorthand scrollPaddingInlineShorthand()
{
    static const CSSPropertyID scrollPaddingInlineProperties[] = {
        CSSPropertyID::CSSPropertyScrollPaddingInlineStart,
        CSSPropertyID::CSSPropertyScrollPaddingInlineEnd,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyScrollPaddingInline, std::span { scrollPaddingInlineProperties });
}

StylePropertyShorthand scrollTimelineShorthand()
{
    static const CSSPropertyID scrollTimelineProperties[] = {
        CSSPropertyID::CSSPropertyScrollTimelineName,
        CSSPropertyID::CSSPropertyScrollTimelineAxis,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyScrollTimeline, std::span { scrollTimelineProperties });
}

StylePropertyShorthand textBoxShorthand()
{
    static const CSSPropertyID textBoxProperties[] = {
        CSSPropertyID::CSSPropertyTextBoxTrim,
        CSSPropertyID::CSSPropertyTextBoxEdge,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyTextBox, std::span { textBoxProperties });
}

StylePropertyShorthand textDecorationShorthand()
{
    static const CSSPropertyID textDecorationProperties[] = {
        CSSPropertyID::CSSPropertyTextDecorationLine,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyTextDecoration, std::span { textDecorationProperties });
}

StylePropertyShorthand textDecorationSkipShorthand()
{
    static const CSSPropertyID textDecorationSkipProperties[] = {
        CSSPropertyID::CSSPropertyTextDecorationSkipInk,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyTextDecorationSkip, std::span { textDecorationSkipProperties });
}

StylePropertyShorthand textEmphasisShorthand()
{
    static const CSSPropertyID textEmphasisProperties[] = {
        CSSPropertyID::CSSPropertyTextEmphasisStyle,
        CSSPropertyID::CSSPropertyTextEmphasisColor,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyTextEmphasis, std::span { textEmphasisProperties });
}

StylePropertyShorthand textWrapShorthand()
{
    static const CSSPropertyID textWrapProperties[] = {
        CSSPropertyID::CSSPropertyTextWrapMode,
        CSSPropertyID::CSSPropertyTextWrapStyle,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyTextWrap, std::span { textWrapProperties });
}

StylePropertyShorthand transformOriginShorthand()
{
    static const CSSPropertyID transformOriginProperties[] = {
        CSSPropertyID::CSSPropertyTransformOriginX,
        CSSPropertyID::CSSPropertyTransformOriginY,
        CSSPropertyID::CSSPropertyTransformOriginZ,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyTransformOrigin, std::span { transformOriginProperties });
}

StylePropertyShorthand transitionShorthand()
{
    static const CSSPropertyID transitionProperties[] = {
        CSSPropertyID::CSSPropertyTransitionProperty,
        CSSPropertyID::CSSPropertyTransitionDuration,
        CSSPropertyID::CSSPropertyTransitionTimingFunction,
        CSSPropertyID::CSSPropertyTransitionDelay,
        CSSPropertyID::CSSPropertyTransitionBehavior,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyTransition, std::span { transitionProperties });
}

StylePropertyShorthand viewTimelineShorthand()
{
    static const CSSPropertyID viewTimelineProperties[] = {
        CSSPropertyID::CSSPropertyViewTimelineName,
        CSSPropertyID::CSSPropertyViewTimelineAxis,
        CSSPropertyID::CSSPropertyViewTimelineInset,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyViewTimeline, std::span { viewTimelineProperties });
}

StylePropertyShorthand whiteSpaceShorthand()
{
    static const CSSPropertyID whiteSpaceProperties[] = {
        CSSPropertyID::CSSPropertyWhiteSpaceCollapse,
        CSSPropertyID::CSSPropertyTextWrapMode,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyWhiteSpace, std::span { whiteSpaceProperties });
}

StylePropertyShorthand webkitBackgroundSizeShorthand()
{
    static const CSSPropertyID webkitBackgroundSizeProperties[] = {
        CSSPropertyID::CSSPropertyBackgroundSize,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyWebkitBackgroundSize, std::span { webkitBackgroundSizeProperties });
}

StylePropertyShorthand webkitBorderImageShorthand()
{
    static const CSSPropertyID webkitBorderImageProperties[] = {
        CSSPropertyID::CSSPropertyBorderImageSource,
        CSSPropertyID::CSSPropertyBorderImageSlice,
        CSSPropertyID::CSSPropertyBorderImageWidth,
        CSSPropertyID::CSSPropertyBorderImageOutset,
        CSSPropertyID::CSSPropertyBorderImageRepeat,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyWebkitBorderImage, std::span { webkitBorderImageProperties });
}

StylePropertyShorthand webkitBorderRadiusShorthand()
{
    static const CSSPropertyID webkitBorderRadiusProperties[] = {
        CSSPropertyID::CSSPropertyBorderTopLeftRadius,
        CSSPropertyID::CSSPropertyBorderTopRightRadius,
        CSSPropertyID::CSSPropertyBorderBottomRightRadius,
        CSSPropertyID::CSSPropertyBorderBottomLeftRadius,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyWebkitBorderRadius, std::span { webkitBorderRadiusProperties });
}

StylePropertyShorthand webkitColumnBreakAfterShorthand()
{
    static const CSSPropertyID webkitColumnBreakAfterProperties[] = {
        CSSPropertyID::CSSPropertyBreakAfter,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyWebkitColumnBreakAfter, std::span { webkitColumnBreakAfterProperties });
}

StylePropertyShorthand webkitColumnBreakBeforeShorthand()
{
    static const CSSPropertyID webkitColumnBreakBeforeProperties[] = {
        CSSPropertyID::CSSPropertyBreakBefore,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyWebkitColumnBreakBefore, std::span { webkitColumnBreakBeforeProperties });
}

StylePropertyShorthand webkitColumnBreakInsideShorthand()
{
    static const CSSPropertyID webkitColumnBreakInsideProperties[] = {
        CSSPropertyID::CSSPropertyBreakInside,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyWebkitColumnBreakInside, std::span { webkitColumnBreakInsideProperties });
}

StylePropertyShorthand webkitMaskShorthand()
{
    static const CSSPropertyID webkitMaskProperties[] = {
        CSSPropertyID::CSSPropertyMaskImage,
        CSSPropertyID::CSSPropertyWebkitMaskSourceType,
        CSSPropertyID::CSSPropertyWebkitMaskPositionX,
        CSSPropertyID::CSSPropertyWebkitMaskPositionY,
        CSSPropertyID::CSSPropertyMaskSize,
        CSSPropertyID::CSSPropertyMaskRepeat,
        CSSPropertyID::CSSPropertyMaskOrigin,
        CSSPropertyID::CSSPropertyWebkitMaskClip,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyWebkitMask, std::span { webkitMaskProperties });
}

StylePropertyShorthand webkitMaskBoxImageShorthand()
{
    static const CSSPropertyID webkitMaskBoxImageProperties[] = {
        CSSPropertyID::CSSPropertyMaskBorderSource,
        CSSPropertyID::CSSPropertyMaskBorderSlice,
        CSSPropertyID::CSSPropertyMaskBorderWidth,
        CSSPropertyID::CSSPropertyMaskBorderOutset,
        CSSPropertyID::CSSPropertyMaskBorderRepeat,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyWebkitMaskBoxImage, std::span { webkitMaskBoxImageProperties });
}

StylePropertyShorthand webkitMaskPositionShorthand()
{
    static const CSSPropertyID webkitMaskPositionProperties[] = {
        CSSPropertyID::CSSPropertyWebkitMaskPositionX,
        CSSPropertyID::CSSPropertyWebkitMaskPositionY,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyWebkitMaskPosition, std::span { webkitMaskPositionProperties });
}

StylePropertyShorthand webkitPerspectiveShorthand()
{
    static const CSSPropertyID webkitPerspectiveProperties[] = {
        CSSPropertyID::CSSPropertyPerspective,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyWebkitPerspective, std::span { webkitPerspectiveProperties });
}

StylePropertyShorthand webkitTextDecorationShorthand()
{
    static const CSSPropertyID webkitTextDecorationProperties[] = {
        CSSPropertyID::CSSPropertyTextDecorationLine,
        CSSPropertyID::CSSPropertyTextDecorationStyle,
        CSSPropertyID::CSSPropertyTextDecorationColor,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyWebkitTextDecoration, std::span { webkitTextDecorationProperties });
}

StylePropertyShorthand webkitTextOrientationShorthand()
{
    static const CSSPropertyID webkitTextOrientationProperties[] = {
        CSSPropertyID::CSSPropertyTextOrientation,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyWebkitTextOrientation, std::span { webkitTextOrientationProperties });
}

StylePropertyShorthand webkitTextStrokeShorthand()
{
    static const CSSPropertyID webkitTextStrokeProperties[] = {
        CSSPropertyID::CSSPropertyWebkitTextStrokeWidth,
        CSSPropertyID::CSSPropertyWebkitTextStrokeColor,
    };
    return StylePropertyShorthand(CSSPropertyID::CSSPropertyWebkitTextStroke, std::span { webkitTextStrokeProperties });
}

StylePropertyShorthand shorthandForProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyAll:
        return allShorthand();
    case CSSPropertyID::CSSPropertyAnimation:
        return animationShorthand();
    case CSSPropertyID::CSSPropertyAnimationRange:
        return animationRangeShorthand();
    case CSSPropertyID::CSSPropertyBackground:
        return backgroundShorthand();
    case CSSPropertyID::CSSPropertyBackgroundPosition:
        return backgroundPositionShorthand();
    case CSSPropertyID::CSSPropertyBlockStep:
        return blockStepShorthand();
    case CSSPropertyID::CSSPropertyBorder:
        return borderShorthand();
    case CSSPropertyID::CSSPropertyBorderBlock:
        return borderBlockShorthand();
    case CSSPropertyID::CSSPropertyBorderBlockColor:
        return borderBlockColorShorthand();
    case CSSPropertyID::CSSPropertyBorderBlockEnd:
        return borderBlockEndShorthand();
    case CSSPropertyID::CSSPropertyBorderBlockStart:
        return borderBlockStartShorthand();
    case CSSPropertyID::CSSPropertyBorderBlockStyle:
        return borderBlockStyleShorthand();
    case CSSPropertyID::CSSPropertyBorderBlockWidth:
        return borderBlockWidthShorthand();
    case CSSPropertyID::CSSPropertyBorderBottom:
        return borderBottomShorthand();
    case CSSPropertyID::CSSPropertyBorderColor:
        return borderColorShorthand();
    case CSSPropertyID::CSSPropertyBorderImage:
        return borderImageShorthand();
    case CSSPropertyID::CSSPropertyBorderInline:
        return borderInlineShorthand();
    case CSSPropertyID::CSSPropertyBorderInlineColor:
        return borderInlineColorShorthand();
    case CSSPropertyID::CSSPropertyBorderInlineEnd:
        return borderInlineEndShorthand();
    case CSSPropertyID::CSSPropertyBorderInlineStart:
        return borderInlineStartShorthand();
    case CSSPropertyID::CSSPropertyBorderInlineStyle:
        return borderInlineStyleShorthand();
    case CSSPropertyID::CSSPropertyBorderInlineWidth:
        return borderInlineWidthShorthand();
    case CSSPropertyID::CSSPropertyBorderLeft:
        return borderLeftShorthand();
    case CSSPropertyID::CSSPropertyBorderRadius:
        return borderRadiusShorthand();
    case CSSPropertyID::CSSPropertyBorderRight:
        return borderRightShorthand();
    case CSSPropertyID::CSSPropertyBorderSpacing:
        return borderSpacingShorthand();
    case CSSPropertyID::CSSPropertyBorderStyle:
        return borderStyleShorthand();
    case CSSPropertyID::CSSPropertyBorderTop:
        return borderTopShorthand();
    case CSSPropertyID::CSSPropertyBorderWidth:
        return borderWidthShorthand();
    case CSSPropertyID::CSSPropertyColumnRule:
        return columnRuleShorthand();
    case CSSPropertyID::CSSPropertyColumns:
        return columnsShorthand();
    case CSSPropertyID::CSSPropertyContainIntrinsicSize:
        return containIntrinsicSizeShorthand();
    case CSSPropertyID::CSSPropertyContainer:
        return containerShorthand();
    case CSSPropertyID::CSSPropertyCornerShape:
        return cornerShapeShorthand();
    case CSSPropertyID::CSSPropertyFlex:
        return flexShorthand();
    case CSSPropertyID::CSSPropertyFlexFlow:
        return flexFlowShorthand();
    case CSSPropertyID::CSSPropertyFont:
        return fontShorthand();
    case CSSPropertyID::CSSPropertyFontSynthesis:
        return fontSynthesisShorthand();
    case CSSPropertyID::CSSPropertyFontVariant:
        return fontVariantShorthand();
    case CSSPropertyID::CSSPropertyGap:
        return gapShorthand();
    case CSSPropertyID::CSSPropertyGrid:
        return gridShorthand();
    case CSSPropertyID::CSSPropertyGridArea:
        return gridAreaShorthand();
    case CSSPropertyID::CSSPropertyGridColumn:
        return gridColumnShorthand();
    case CSSPropertyID::CSSPropertyGridRow:
        return gridRowShorthand();
    case CSSPropertyID::CSSPropertyGridTemplate:
        return gridTemplateShorthand();
    case CSSPropertyID::CSSPropertyInset:
        return insetShorthand();
    case CSSPropertyID::CSSPropertyInsetBlock:
        return insetBlockShorthand();
    case CSSPropertyID::CSSPropertyInsetInline:
        return insetInlineShorthand();
    case CSSPropertyID::CSSPropertyLineClamp:
        return lineClampShorthand();
    case CSSPropertyID::CSSPropertyListStyle:
        return listStyleShorthand();
    case CSSPropertyID::CSSPropertyMargin:
        return marginShorthand();
    case CSSPropertyID::CSSPropertyMarginBlock:
        return marginBlockShorthand();
    case CSSPropertyID::CSSPropertyMarginInline:
        return marginInlineShorthand();
    case CSSPropertyID::CSSPropertyMarker:
        return markerShorthand();
    case CSSPropertyID::CSSPropertyMask:
        return maskShorthand();
    case CSSPropertyID::CSSPropertyMaskBorder:
        return maskBorderShorthand();
    case CSSPropertyID::CSSPropertyMaskPosition:
        return maskPositionShorthand();
    case CSSPropertyID::CSSPropertyOffset:
        return offsetShorthand();
    case CSSPropertyID::CSSPropertyOutline:
        return outlineShorthand();
    case CSSPropertyID::CSSPropertyOverflow:
        return overflowShorthand();
    case CSSPropertyID::CSSPropertyOverscrollBehavior:
        return overscrollBehaviorShorthand();
    case CSSPropertyID::CSSPropertyPadding:
        return paddingShorthand();
    case CSSPropertyID::CSSPropertyPaddingBlock:
        return paddingBlockShorthand();
    case CSSPropertyID::CSSPropertyPaddingInline:
        return paddingInlineShorthand();
    case CSSPropertyID::CSSPropertyPageBreakAfter:
        return pageBreakAfterShorthand();
    case CSSPropertyID::CSSPropertyPageBreakBefore:
        return pageBreakBeforeShorthand();
    case CSSPropertyID::CSSPropertyPageBreakInside:
        return pageBreakInsideShorthand();
    case CSSPropertyID::CSSPropertyPerspectiveOrigin:
        return perspectiveOriginShorthand();
    case CSSPropertyID::CSSPropertyPlaceContent:
        return placeContentShorthand();
    case CSSPropertyID::CSSPropertyPlaceItems:
        return placeItemsShorthand();
    case CSSPropertyID::CSSPropertyPlaceSelf:
        return placeSelfShorthand();
    case CSSPropertyID::CSSPropertyPositionTry:
        return positionTryShorthand();
    case CSSPropertyID::CSSPropertyScrollMargin:
        return scrollMarginShorthand();
    case CSSPropertyID::CSSPropertyScrollMarginBlock:
        return scrollMarginBlockShorthand();
    case CSSPropertyID::CSSPropertyScrollMarginInline:
        return scrollMarginInlineShorthand();
    case CSSPropertyID::CSSPropertyScrollPadding:
        return scrollPaddingShorthand();
    case CSSPropertyID::CSSPropertyScrollPaddingBlock:
        return scrollPaddingBlockShorthand();
    case CSSPropertyID::CSSPropertyScrollPaddingInline:
        return scrollPaddingInlineShorthand();
    case CSSPropertyID::CSSPropertyScrollTimeline:
        return scrollTimelineShorthand();
    case CSSPropertyID::CSSPropertyTextBox:
        return textBoxShorthand();
    case CSSPropertyID::CSSPropertyTextDecoration:
        return textDecorationShorthand();
    case CSSPropertyID::CSSPropertyTextDecorationSkip:
        return textDecorationSkipShorthand();
    case CSSPropertyID::CSSPropertyTextEmphasis:
        return textEmphasisShorthand();
    case CSSPropertyID::CSSPropertyTextWrap:
        return textWrapShorthand();
    case CSSPropertyID::CSSPropertyTransformOrigin:
        return transformOriginShorthand();
    case CSSPropertyID::CSSPropertyTransition:
        return transitionShorthand();
    case CSSPropertyID::CSSPropertyViewTimeline:
        return viewTimelineShorthand();
    case CSSPropertyID::CSSPropertyWhiteSpace:
        return whiteSpaceShorthand();
    case CSSPropertyID::CSSPropertyWebkitBackgroundSize:
        return webkitBackgroundSizeShorthand();
    case CSSPropertyID::CSSPropertyWebkitBorderImage:
        return webkitBorderImageShorthand();
    case CSSPropertyID::CSSPropertyWebkitBorderRadius:
        return webkitBorderRadiusShorthand();
    case CSSPropertyID::CSSPropertyWebkitColumnBreakAfter:
        return webkitColumnBreakAfterShorthand();
    case CSSPropertyID::CSSPropertyWebkitColumnBreakBefore:
        return webkitColumnBreakBeforeShorthand();
    case CSSPropertyID::CSSPropertyWebkitColumnBreakInside:
        return webkitColumnBreakInsideShorthand();
    case CSSPropertyID::CSSPropertyWebkitMask:
        return webkitMaskShorthand();
    case CSSPropertyID::CSSPropertyWebkitMaskBoxImage:
        return webkitMaskBoxImageShorthand();
    case CSSPropertyID::CSSPropertyWebkitMaskPosition:
        return webkitMaskPositionShorthand();
    case CSSPropertyID::CSSPropertyWebkitPerspective:
        return webkitPerspectiveShorthand();
    case CSSPropertyID::CSSPropertyWebkitTextDecoration:
        return webkitTextDecorationShorthand();
    case CSSPropertyID::CSSPropertyWebkitTextOrientation:
        return webkitTextOrientationShorthand();
    case CSSPropertyID::CSSPropertyWebkitTextStroke:
        return webkitTextStrokeShorthand();
    default:
        return { };
    }
}

StylePropertyShorthandVector matchingShorthandsForLonghand(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyAnimationRangeEnd:
    case CSSPropertyID::CSSPropertyAnimationRangeStart:
        return StylePropertyShorthandVector{allShorthand(), animationShorthand(), animationRangeShorthand()};
    case CSSPropertyID::CSSPropertyAnimationDelay:
    case CSSPropertyID::CSSPropertyAnimationDirection:
    case CSSPropertyID::CSSPropertyAnimationDuration:
    case CSSPropertyID::CSSPropertyAnimationFillMode:
    case CSSPropertyID::CSSPropertyAnimationIterationCount:
    case CSSPropertyID::CSSPropertyAnimationName:
    case CSSPropertyID::CSSPropertyAnimationPlayState:
    case CSSPropertyID::CSSPropertyAnimationTimeline:
    case CSSPropertyID::CSSPropertyAnimationTimingFunction:
        return StylePropertyShorthandVector{allShorthand(), animationShorthand()};
    case CSSPropertyID::CSSPropertyBackgroundPositionX:
    case CSSPropertyID::CSSPropertyBackgroundPositionY:
        return StylePropertyShorthandVector{allShorthand(), backgroundShorthand(), backgroundPositionShorthand()};
    case CSSPropertyID::CSSPropertyBackgroundSize:
        return StylePropertyShorthandVector{allShorthand(), backgroundShorthand(), webkitBackgroundSizeShorthand()};
    case CSSPropertyID::CSSPropertyBackgroundAttachment:
    case CSSPropertyID::CSSPropertyBackgroundClip:
    case CSSPropertyID::CSSPropertyBackgroundColor:
    case CSSPropertyID::CSSPropertyBackgroundImage:
    case CSSPropertyID::CSSPropertyBackgroundOrigin:
    case CSSPropertyID::CSSPropertyBackgroundRepeat:
        return StylePropertyShorthandVector{allShorthand(), backgroundShorthand()};
    case CSSPropertyID::CSSPropertyBlockStepAlign:
    case CSSPropertyID::CSSPropertyBlockStepInsert:
    case CSSPropertyID::CSSPropertyBlockStepRound:
    case CSSPropertyID::CSSPropertyBlockStepSize:
        return StylePropertyShorthandVector{allShorthand(), blockStepShorthand()};
    case CSSPropertyID::CSSPropertyBorderBlockEndColor:
        return StylePropertyShorthandVector{allShorthand(), borderBlockShorthand(), borderBlockEndShorthand(), borderBlockColorShorthand()};
    case CSSPropertyID::CSSPropertyBorderBlockEndStyle:
        return StylePropertyShorthandVector{allShorthand(), borderBlockShorthand(), borderBlockEndShorthand(), borderBlockStyleShorthand()};
    case CSSPropertyID::CSSPropertyBorderBlockEndWidth:
        return StylePropertyShorthandVector{allShorthand(), borderBlockShorthand(), borderBlockEndShorthand(), borderBlockWidthShorthand()};
    case CSSPropertyID::CSSPropertyBorderBlockStartColor:
        return StylePropertyShorthandVector{allShorthand(), borderBlockShorthand(), borderBlockStartShorthand(), borderBlockColorShorthand()};
    case CSSPropertyID::CSSPropertyBorderBlockStartStyle:
        return StylePropertyShorthandVector{allShorthand(), borderBlockShorthand(), borderBlockStartShorthand(), borderBlockStyleShorthand()};
    case CSSPropertyID::CSSPropertyBorderBlockStartWidth:
        return StylePropertyShorthandVector{allShorthand(), borderBlockShorthand(), borderBlockStartShorthand(), borderBlockWidthShorthand()};
    case CSSPropertyID::CSSPropertyBorderInlineEndColor:
        return StylePropertyShorthandVector{allShorthand(), borderInlineShorthand(), borderInlineEndShorthand(), borderInlineColorShorthand()};
    case CSSPropertyID::CSSPropertyBorderInlineEndStyle:
        return StylePropertyShorthandVector{allShorthand(), borderInlineShorthand(), borderInlineEndShorthand(), borderInlineStyleShorthand()};
    case CSSPropertyID::CSSPropertyBorderInlineEndWidth:
        return StylePropertyShorthandVector{allShorthand(), borderInlineShorthand(), borderInlineEndShorthand(), borderInlineWidthShorthand()};
    case CSSPropertyID::CSSPropertyBorderInlineStartColor:
        return StylePropertyShorthandVector{allShorthand(), borderInlineShorthand(), borderInlineStartShorthand(), borderInlineColorShorthand()};
    case CSSPropertyID::CSSPropertyBorderInlineStartStyle:
        return StylePropertyShorthandVector{allShorthand(), borderInlineShorthand(), borderInlineStartShorthand(), borderInlineStyleShorthand()};
    case CSSPropertyID::CSSPropertyBorderInlineStartWidth:
        return StylePropertyShorthandVector{allShorthand(), borderInlineShorthand(), borderInlineStartShorthand(), borderInlineWidthShorthand()};
    case CSSPropertyID::CSSPropertyBorderBottomLeftRadius:
    case CSSPropertyID::CSSPropertyBorderBottomRightRadius:
    case CSSPropertyID::CSSPropertyBorderTopLeftRadius:
    case CSSPropertyID::CSSPropertyBorderTopRightRadius:
        return StylePropertyShorthandVector{allShorthand(), borderRadiusShorthand(), webkitBorderRadiusShorthand()};
    case CSSPropertyID::CSSPropertyBorderBottomColor:
        return StylePropertyShorthandVector{allShorthand(), borderShorthand(), borderColorShorthand(), borderBottomShorthand()};
    case CSSPropertyID::CSSPropertyBorderLeftColor:
        return StylePropertyShorthandVector{allShorthand(), borderShorthand(), borderColorShorthand(), borderLeftShorthand()};
    case CSSPropertyID::CSSPropertyBorderRightColor:
        return StylePropertyShorthandVector{allShorthand(), borderShorthand(), borderColorShorthand(), borderRightShorthand()};
    case CSSPropertyID::CSSPropertyBorderTopColor:
        return StylePropertyShorthandVector{allShorthand(), borderShorthand(), borderColorShorthand(), borderTopShorthand()};
    case CSSPropertyID::CSSPropertyBorderImageOutset:
    case CSSPropertyID::CSSPropertyBorderImageRepeat:
    case CSSPropertyID::CSSPropertyBorderImageSlice:
    case CSSPropertyID::CSSPropertyBorderImageSource:
    case CSSPropertyID::CSSPropertyBorderImageWidth:
        return StylePropertyShorthandVector{allShorthand(), borderShorthand(), borderImageShorthand(), webkitBorderImageShorthand()};
    case CSSPropertyID::CSSPropertyBorderBottomStyle:
        return StylePropertyShorthandVector{allShorthand(), borderShorthand(), borderStyleShorthand(), borderBottomShorthand()};
    case CSSPropertyID::CSSPropertyBorderLeftStyle:
        return StylePropertyShorthandVector{allShorthand(), borderShorthand(), borderStyleShorthand(), borderLeftShorthand()};
    case CSSPropertyID::CSSPropertyBorderRightStyle:
        return StylePropertyShorthandVector{allShorthand(), borderShorthand(), borderStyleShorthand(), borderRightShorthand()};
    case CSSPropertyID::CSSPropertyBorderTopStyle:
        return StylePropertyShorthandVector{allShorthand(), borderShorthand(), borderStyleShorthand(), borderTopShorthand()};
    case CSSPropertyID::CSSPropertyBorderBottomWidth:
        return StylePropertyShorthandVector{allShorthand(), borderShorthand(), borderWidthShorthand(), borderBottomShorthand()};
    case CSSPropertyID::CSSPropertyBorderLeftWidth:
        return StylePropertyShorthandVector{allShorthand(), borderShorthand(), borderWidthShorthand(), borderLeftShorthand()};
    case CSSPropertyID::CSSPropertyBorderRightWidth:
        return StylePropertyShorthandVector{allShorthand(), borderShorthand(), borderWidthShorthand(), borderRightShorthand()};
    case CSSPropertyID::CSSPropertyBorderTopWidth:
        return StylePropertyShorthandVector{allShorthand(), borderShorthand(), borderWidthShorthand(), borderTopShorthand()};
    case CSSPropertyID::CSSPropertyWebkitBorderHorizontalSpacing:
    case CSSPropertyID::CSSPropertyWebkitBorderVerticalSpacing:
        return StylePropertyShorthandVector{allShorthand(), borderSpacingShorthand()};
    case CSSPropertyID::CSSPropertyColumnRuleColor:
    case CSSPropertyID::CSSPropertyColumnRuleStyle:
    case CSSPropertyID::CSSPropertyColumnRuleWidth:
        return StylePropertyShorthandVector{allShorthand(), columnRuleShorthand()};
    case CSSPropertyID::CSSPropertyColumnCount:
    case CSSPropertyID::CSSPropertyColumnWidth:
        return StylePropertyShorthandVector{allShorthand(), columnsShorthand()};
    case CSSPropertyID::CSSPropertyContainIntrinsicHeight:
    case CSSPropertyID::CSSPropertyContainIntrinsicWidth:
        return StylePropertyShorthandVector{allShorthand(), containIntrinsicSizeShorthand()};
    case CSSPropertyID::CSSPropertyContainerName:
    case CSSPropertyID::CSSPropertyContainerType:
        return StylePropertyShorthandVector{allShorthand(), containerShorthand()};
    case CSSPropertyID::CSSPropertyCornerBottomLeftShape:
    case CSSPropertyID::CSSPropertyCornerBottomRightShape:
    case CSSPropertyID::CSSPropertyCornerTopLeftShape:
    case CSSPropertyID::CSSPropertyCornerTopRightShape:
        return StylePropertyShorthandVector{allShorthand(), cornerShapeShorthand()};
    case CSSPropertyID::CSSPropertyFlexDirection:
    case CSSPropertyID::CSSPropertyFlexWrap:
        return StylePropertyShorthandVector{allShorthand(), flexFlowShorthand()};
    case CSSPropertyID::CSSPropertyFlexBasis:
    case CSSPropertyID::CSSPropertyFlexGrow:
    case CSSPropertyID::CSSPropertyFlexShrink:
        return StylePropertyShorthandVector{allShorthand(), flexShorthand()};
    case CSSPropertyID::CSSPropertyFontVariantAlternates:
    case CSSPropertyID::CSSPropertyFontVariantCaps:
    case CSSPropertyID::CSSPropertyFontVariantEastAsian:
    case CSSPropertyID::CSSPropertyFontVariantEmoji:
    case CSSPropertyID::CSSPropertyFontVariantLigatures:
    case CSSPropertyID::CSSPropertyFontVariantNumeric:
    case CSSPropertyID::CSSPropertyFontVariantPosition:
        return StylePropertyShorthandVector{allShorthand(), fontShorthand(), fontVariantShorthand()};
    case CSSPropertyID::CSSPropertyFontFamily:
    case CSSPropertyID::CSSPropertyFontFeatureSettings:
    case CSSPropertyID::CSSPropertyFontKerning:
    case CSSPropertyID::CSSPropertyFontOpticalSizing:
    case CSSPropertyID::CSSPropertyFontSize:
    case CSSPropertyID::CSSPropertyFontSizeAdjust:
    case CSSPropertyID::CSSPropertyFontStyle:
    case CSSPropertyID::CSSPropertyFontVariationSettings:
    case CSSPropertyID::CSSPropertyFontWeight:
    case CSSPropertyID::CSSPropertyFontWidth:
    case CSSPropertyID::CSSPropertyLineHeight:
        return StylePropertyShorthandVector{allShorthand(), fontShorthand()};
    case CSSPropertyID::CSSPropertyFontSynthesisSmallCaps:
    case CSSPropertyID::CSSPropertyFontSynthesisStyle:
    case CSSPropertyID::CSSPropertyFontSynthesisWeight:
        return StylePropertyShorthandVector{allShorthand(), fontSynthesisShorthand()};
    case CSSPropertyID::CSSPropertyColumnGap:
    case CSSPropertyID::CSSPropertyRowGap:
        return StylePropertyShorthandVector{allShorthand(), gapShorthand()};
    case CSSPropertyID::CSSPropertyGridColumnEnd:
    case CSSPropertyID::CSSPropertyGridColumnStart:
        return StylePropertyShorthandVector{allShorthand(), gridAreaShorthand(), gridColumnShorthand()};
    case CSSPropertyID::CSSPropertyGridRowEnd:
    case CSSPropertyID::CSSPropertyGridRowStart:
        return StylePropertyShorthandVector{allShorthand(), gridAreaShorthand(), gridRowShorthand()};
    case CSSPropertyID::CSSPropertyGridTemplateAreas:
    case CSSPropertyID::CSSPropertyGridTemplateColumns:
    case CSSPropertyID::CSSPropertyGridTemplateRows:
        return StylePropertyShorthandVector{allShorthand(), gridShorthand(), gridTemplateShorthand()};
    case CSSPropertyID::CSSPropertyGridAutoColumns:
    case CSSPropertyID::CSSPropertyGridAutoFlow:
    case CSSPropertyID::CSSPropertyGridAutoRows:
        return StylePropertyShorthandVector{allShorthand(), gridShorthand()};
    case CSSPropertyID::CSSPropertyInsetBlockEnd:
    case CSSPropertyID::CSSPropertyInsetBlockStart:
        return StylePropertyShorthandVector{allShorthand(), insetBlockShorthand()};
    case CSSPropertyID::CSSPropertyInsetInlineEnd:
    case CSSPropertyID::CSSPropertyInsetInlineStart:
        return StylePropertyShorthandVector{allShorthand(), insetInlineShorthand()};
    case CSSPropertyID::CSSPropertyBottom:
    case CSSPropertyID::CSSPropertyLeft:
    case CSSPropertyID::CSSPropertyRight:
    case CSSPropertyID::CSSPropertyTop:
        return StylePropertyShorthandVector{allShorthand(), insetShorthand()};
    case CSSPropertyID::CSSPropertyBlockEllipsis:
    case CSSPropertyID::CSSPropertyContinue:
    case CSSPropertyID::CSSPropertyMaxLines:
        return StylePropertyShorthandVector{allShorthand(), lineClampShorthand()};
    case CSSPropertyID::CSSPropertyListStyleImage:
    case CSSPropertyID::CSSPropertyListStylePosition:
    case CSSPropertyID::CSSPropertyListStyleType:
        return StylePropertyShorthandVector{allShorthand(), listStyleShorthand()};
    case CSSPropertyID::CSSPropertyMarginBlockEnd:
    case CSSPropertyID::CSSPropertyMarginBlockStart:
        return StylePropertyShorthandVector{allShorthand(), marginBlockShorthand()};
    case CSSPropertyID::CSSPropertyMarginInlineEnd:
    case CSSPropertyID::CSSPropertyMarginInlineStart:
        return StylePropertyShorthandVector{allShorthand(), marginInlineShorthand()};
    case CSSPropertyID::CSSPropertyMarginBottom:
    case CSSPropertyID::CSSPropertyMarginLeft:
    case CSSPropertyID::CSSPropertyMarginRight:
    case CSSPropertyID::CSSPropertyMarginTop:
        return StylePropertyShorthandVector{allShorthand(), marginShorthand()};
    case CSSPropertyID::CSSPropertyMarkerEnd:
    case CSSPropertyID::CSSPropertyMarkerMid:
    case CSSPropertyID::CSSPropertyMarkerStart:
        return StylePropertyShorthandVector{allShorthand(), markerShorthand()};
    case CSSPropertyID::CSSPropertyMaskBorderOutset:
    case CSSPropertyID::CSSPropertyMaskBorderRepeat:
    case CSSPropertyID::CSSPropertyMaskBorderSlice:
    case CSSPropertyID::CSSPropertyMaskBorderSource:
    case CSSPropertyID::CSSPropertyMaskBorderWidth:
        return StylePropertyShorthandVector{allShorthand(), maskShorthand(), maskBorderShorthand(), webkitMaskBoxImageShorthand()};
    case CSSPropertyID::CSSPropertyWebkitMaskPositionX:
    case CSSPropertyID::CSSPropertyWebkitMaskPositionY:
        return StylePropertyShorthandVector{allShorthand(), maskShorthand(), webkitMaskShorthand(), maskPositionShorthand(), webkitMaskPositionShorthand()};
    case CSSPropertyID::CSSPropertyMaskImage:
    case CSSPropertyID::CSSPropertyMaskOrigin:
    case CSSPropertyID::CSSPropertyMaskRepeat:
    case CSSPropertyID::CSSPropertyMaskSize:
        return StylePropertyShorthandVector{allShorthand(), maskShorthand(), webkitMaskShorthand()};
    case CSSPropertyID::CSSPropertyMaskClip:
    case CSSPropertyID::CSSPropertyMaskComposite:
    case CSSPropertyID::CSSPropertyMaskMode:
        return StylePropertyShorthandVector{allShorthand(), maskShorthand()};
    case CSSPropertyID::CSSPropertyOffsetAnchor:
    case CSSPropertyID::CSSPropertyOffsetDistance:
    case CSSPropertyID::CSSPropertyOffsetPath:
    case CSSPropertyID::CSSPropertyOffsetPosition:
    case CSSPropertyID::CSSPropertyOffsetRotate:
        return StylePropertyShorthandVector{allShorthand(), offsetShorthand()};
    case CSSPropertyID::CSSPropertyOutlineColor:
    case CSSPropertyID::CSSPropertyOutlineStyle:
    case CSSPropertyID::CSSPropertyOutlineWidth:
        return StylePropertyShorthandVector{allShorthand(), outlineShorthand()};
    case CSSPropertyID::CSSPropertyOverflowX:
    case CSSPropertyID::CSSPropertyOverflowY:
        return StylePropertyShorthandVector{allShorthand(), overflowShorthand()};
    case CSSPropertyID::CSSPropertyOverscrollBehaviorX:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorY:
        return StylePropertyShorthandVector{allShorthand(), overscrollBehaviorShorthand()};
    case CSSPropertyID::CSSPropertyPaddingBlockEnd:
    case CSSPropertyID::CSSPropertyPaddingBlockStart:
        return StylePropertyShorthandVector{allShorthand(), paddingBlockShorthand()};
    case CSSPropertyID::CSSPropertyPaddingInlineEnd:
    case CSSPropertyID::CSSPropertyPaddingInlineStart:
        return StylePropertyShorthandVector{allShorthand(), paddingInlineShorthand()};
    case CSSPropertyID::CSSPropertyPaddingBottom:
    case CSSPropertyID::CSSPropertyPaddingLeft:
    case CSSPropertyID::CSSPropertyPaddingRight:
    case CSSPropertyID::CSSPropertyPaddingTop:
        return StylePropertyShorthandVector{allShorthand(), paddingShorthand()};
    case CSSPropertyID::CSSPropertyBreakAfter:
        return StylePropertyShorthandVector{allShorthand(), pageBreakAfterShorthand(), webkitColumnBreakAfterShorthand()};
    case CSSPropertyID::CSSPropertyBreakBefore:
        return StylePropertyShorthandVector{allShorthand(), pageBreakBeforeShorthand(), webkitColumnBreakBeforeShorthand()};
    case CSSPropertyID::CSSPropertyBreakInside:
        return StylePropertyShorthandVector{allShorthand(), pageBreakInsideShorthand(), webkitColumnBreakInsideShorthand()};
    case CSSPropertyID::CSSPropertyPerspectiveOriginX:
    case CSSPropertyID::CSSPropertyPerspectiveOriginY:
        return StylePropertyShorthandVector{allShorthand(), perspectiveOriginShorthand()};
    case CSSPropertyID::CSSPropertyAlignContent:
    case CSSPropertyID::CSSPropertyJustifyContent:
        return StylePropertyShorthandVector{allShorthand(), placeContentShorthand()};
    case CSSPropertyID::CSSPropertyAlignItems:
    case CSSPropertyID::CSSPropertyJustifyItems:
        return StylePropertyShorthandVector{allShorthand(), placeItemsShorthand()};
    case CSSPropertyID::CSSPropertyAlignSelf:
    case CSSPropertyID::CSSPropertyJustifySelf:
        return StylePropertyShorthandVector{allShorthand(), placeSelfShorthand()};
    case CSSPropertyID::CSSPropertyPositionTryFallbacks:
    case CSSPropertyID::CSSPropertyPositionTryOrder:
        return StylePropertyShorthandVector{allShorthand(), positionTryShorthand()};
    case CSSPropertyID::CSSPropertyScrollMarginBlockEnd:
    case CSSPropertyID::CSSPropertyScrollMarginBlockStart:
        return StylePropertyShorthandVector{allShorthand(), scrollMarginBlockShorthand()};
    case CSSPropertyID::CSSPropertyScrollMarginInlineEnd:
    case CSSPropertyID::CSSPropertyScrollMarginInlineStart:
        return StylePropertyShorthandVector{allShorthand(), scrollMarginInlineShorthand()};
    case CSSPropertyID::CSSPropertyScrollMarginBottom:
    case CSSPropertyID::CSSPropertyScrollMarginLeft:
    case CSSPropertyID::CSSPropertyScrollMarginRight:
    case CSSPropertyID::CSSPropertyScrollMarginTop:
        return StylePropertyShorthandVector{allShorthand(), scrollMarginShorthand()};
    case CSSPropertyID::CSSPropertyScrollPaddingBlockEnd:
    case CSSPropertyID::CSSPropertyScrollPaddingBlockStart:
        return StylePropertyShorthandVector{allShorthand(), scrollPaddingBlockShorthand()};
    case CSSPropertyID::CSSPropertyScrollPaddingInlineEnd:
    case CSSPropertyID::CSSPropertyScrollPaddingInlineStart:
        return StylePropertyShorthandVector{allShorthand(), scrollPaddingInlineShorthand()};
    case CSSPropertyID::CSSPropertyScrollPaddingBottom:
    case CSSPropertyID::CSSPropertyScrollPaddingLeft:
    case CSSPropertyID::CSSPropertyScrollPaddingRight:
    case CSSPropertyID::CSSPropertyScrollPaddingTop:
        return StylePropertyShorthandVector{allShorthand(), scrollPaddingShorthand()};
    case CSSPropertyID::CSSPropertyScrollTimelineAxis:
    case CSSPropertyID::CSSPropertyScrollTimelineName:
        return StylePropertyShorthandVector{allShorthand(), scrollTimelineShorthand()};
    case CSSPropertyID::CSSPropertyTextBoxEdge:
    case CSSPropertyID::CSSPropertyTextBoxTrim:
        return StylePropertyShorthandVector{allShorthand(), textBoxShorthand()};
    case CSSPropertyID::CSSPropertyTextDecorationSkipInk:
        return StylePropertyShorthandVector{allShorthand(), textDecorationSkipShorthand()};
    case CSSPropertyID::CSSPropertyTextEmphasisColor:
    case CSSPropertyID::CSSPropertyTextEmphasisStyle:
        return StylePropertyShorthandVector{allShorthand(), textEmphasisShorthand()};
    case CSSPropertyID::CSSPropertyTextWrapMode:
        return StylePropertyShorthandVector{allShorthand(), textWrapShorthand(), whiteSpaceShorthand()};
    case CSSPropertyID::CSSPropertyTextWrapStyle:
        return StylePropertyShorthandVector{allShorthand(), textWrapShorthand()};
    case CSSPropertyID::CSSPropertyTransformOriginX:
    case CSSPropertyID::CSSPropertyTransformOriginY:
    case CSSPropertyID::CSSPropertyTransformOriginZ:
        return StylePropertyShorthandVector{allShorthand(), transformOriginShorthand()};
    case CSSPropertyID::CSSPropertyTransitionBehavior:
    case CSSPropertyID::CSSPropertyTransitionDelay:
    case CSSPropertyID::CSSPropertyTransitionDuration:
    case CSSPropertyID::CSSPropertyTransitionProperty:
    case CSSPropertyID::CSSPropertyTransitionTimingFunction:
        return StylePropertyShorthandVector{allShorthand(), transitionShorthand()};
    case CSSPropertyID::CSSPropertyViewTimelineAxis:
    case CSSPropertyID::CSSPropertyViewTimelineInset:
    case CSSPropertyID::CSSPropertyViewTimelineName:
        return StylePropertyShorthandVector{allShorthand(), viewTimelineShorthand()};
    case CSSPropertyID::CSSPropertyWebkitMaskClip:
    case CSSPropertyID::CSSPropertyWebkitMaskSourceType:
        return StylePropertyShorthandVector{allShorthand(), webkitMaskShorthand()};
    case CSSPropertyID::CSSPropertyPerspective:
        return StylePropertyShorthandVector{allShorthand(), webkitPerspectiveShorthand()};
    case CSSPropertyID::CSSPropertyTextDecorationLine:
        return StylePropertyShorthandVector{allShorthand(), webkitTextDecorationShorthand(), textDecorationShorthand()};
    case CSSPropertyID::CSSPropertyTextDecorationColor:
    case CSSPropertyID::CSSPropertyTextDecorationStyle:
        return StylePropertyShorthandVector{allShorthand(), webkitTextDecorationShorthand()};
    case CSSPropertyID::CSSPropertyTextOrientation:
        return StylePropertyShorthandVector{allShorthand(), webkitTextOrientationShorthand()};
    case CSSPropertyID::CSSPropertyWebkitTextStrokeColor:
    case CSSPropertyID::CSSPropertyWebkitTextStrokeWidth:
        return StylePropertyShorthandVector{allShorthand(), webkitTextStrokeShorthand()};
    case CSSPropertyID::CSSPropertyWhiteSpaceCollapse:
        return StylePropertyShorthandVector{allShorthand(), whiteSpaceShorthand()};
    case CSSPropertyID::CSSPropertyAppleColorFilter:
    case CSSPropertyID::CSSPropertyWebkitBackdropFilter:
    case CSSPropertyID::CSSPropertyWebkitBackgroundClip:
    case CSSPropertyID::CSSPropertyWebkitBackgroundOrigin:
    case CSSPropertyID::CSSPropertyWebkitBoxAlign:
    case CSSPropertyID::CSSPropertyWebkitBoxDecorationBreak:
    case CSSPropertyID::CSSPropertyWebkitBoxDirection:
    case CSSPropertyID::CSSPropertyWebkitBoxFlex:
    case CSSPropertyID::CSSPropertyWebkitBoxFlexGroup:
    case CSSPropertyID::CSSPropertyWebkitBoxLines:
    case CSSPropertyID::CSSPropertyWebkitBoxOrdinalGroup:
    case CSSPropertyID::CSSPropertyWebkitBoxOrient:
    case CSSPropertyID::CSSPropertyWebkitBoxPack:
    case CSSPropertyID::CSSPropertyWebkitBoxReflect:
    case CSSPropertyID::CSSPropertyWebkitBoxShadow:
    case CSSPropertyID::CSSPropertyWebkitColumnAxis:
    case CSSPropertyID::CSSPropertyWebkitColumnProgression:
    case CSSPropertyID::CSSPropertyWebkitCursorVisibility:
    case CSSPropertyID::CSSPropertyWebkitFontSizeDelta:
    case CSSPropertyID::CSSPropertyWebkitFontSmoothing:
    case CSSPropertyID::CSSPropertyWebkitHyphenateLimitAfter:
    case CSSPropertyID::CSSPropertyWebkitHyphenateLimitBefore:
    case CSSPropertyID::CSSPropertyWebkitHyphenateLimitLines:
    case CSSPropertyID::CSSPropertyWebkitInitialLetter:
    case CSSPropertyID::CSSPropertyWebkitLineAlign:
    case CSSPropertyID::CSSPropertyWebkitLineBoxContain:
    case CSSPropertyID::CSSPropertyWebkitLineClamp:
    case CSSPropertyID::CSSPropertyWebkitLineGrid:
    case CSSPropertyID::CSSPropertyWebkitLineSnap:
    case CSSPropertyID::CSSPropertyWebkitLocale:
    case CSSPropertyID::CSSPropertyWebkitMarqueeDirection:
    case CSSPropertyID::CSSPropertyWebkitMarqueeIncrement:
    case CSSPropertyID::CSSPropertyWebkitMarqueeRepetition:
    case CSSPropertyID::CSSPropertyWebkitMarqueeSpeed:
    case CSSPropertyID::CSSPropertyWebkitMarqueeStyle:
    case CSSPropertyID::CSSPropertyWebkitMaskComposite:
    case CSSPropertyID::CSSPropertyWebkitNbspMode:
    case CSSPropertyID::CSSPropertyWebkitRtlOrdering:
    case CSSPropertyID::CSSPropertyWebkitRubyPosition:
    case CSSPropertyID::CSSPropertyWebkitTextCombine:
    case CSSPropertyID::CSSPropertyWebkitTextDecorationsInEffect:
    case CSSPropertyID::CSSPropertyWebkitTextFillColor:
    case CSSPropertyID::CSSPropertyWebkitTextSecurity:
    case CSSPropertyID::CSSPropertyWebkitTextZoom:
    case CSSPropertyID::CSSPropertyWebkitUserDrag:
    case CSSPropertyID::CSSPropertyWebkitUserModify:
    case CSSPropertyID::CSSPropertyWebkitUserSelect:
    case CSSPropertyID::CSSPropertyAccentColor:
    case CSSPropertyID::CSSPropertyAlignmentBaseline:
    case CSSPropertyID::CSSPropertyAnchorName:
    case CSSPropertyID::CSSPropertyAnchorScope:
    case CSSPropertyID::CSSPropertyAnimationComposition:
    case CSSPropertyID::CSSPropertyAppearance:
    case CSSPropertyID::CSSPropertyAspectRatio:
    case CSSPropertyID::CSSPropertyBackdropFilter:
    case CSSPropertyID::CSSPropertyBackfaceVisibility:
    case CSSPropertyID::CSSPropertyBackgroundBlendMode:
    case CSSPropertyID::CSSPropertyBaselineShift:
    case CSSPropertyID::CSSPropertyBlockSize:
    case CSSPropertyID::CSSPropertyBorderCollapse:
    case CSSPropertyID::CSSPropertyBorderEndEndRadius:
    case CSSPropertyID::CSSPropertyBorderEndStartRadius:
    case CSSPropertyID::CSSPropertyBorderStartEndRadius:
    case CSSPropertyID::CSSPropertyBorderStartStartRadius:
    case CSSPropertyID::CSSPropertyBoxShadow:
    case CSSPropertyID::CSSPropertyBoxSizing:
    case CSSPropertyID::CSSPropertyBufferedRendering:
    case CSSPropertyID::CSSPropertyCaptionSide:
    case CSSPropertyID::CSSPropertyCaretColor:
    case CSSPropertyID::CSSPropertyClear:
    case CSSPropertyID::CSSPropertyClip:
    case CSSPropertyID::CSSPropertyClipPath:
    case CSSPropertyID::CSSPropertyClipRule:
    case CSSPropertyID::CSSPropertyColor:
    case CSSPropertyID::CSSPropertyColorInterpolation:
    case CSSPropertyID::CSSPropertyColorInterpolationFilters:
    case CSSPropertyID::CSSPropertyColorScheme:
    case CSSPropertyID::CSSPropertyColumnFill:
    case CSSPropertyID::CSSPropertyColumnSpan:
    case CSSPropertyID::CSSPropertyContain:
    case CSSPropertyID::CSSPropertyContainIntrinsicBlockSize:
    case CSSPropertyID::CSSPropertyContainIntrinsicInlineSize:
    case CSSPropertyID::CSSPropertyContent:
    case CSSPropertyID::CSSPropertyContentVisibility:
    case CSSPropertyID::CSSPropertyCornerEndEndShape:
    case CSSPropertyID::CSSPropertyCornerEndStartShape:
    case CSSPropertyID::CSSPropertyCornerStartEndShape:
    case CSSPropertyID::CSSPropertyCornerStartStartShape:
    case CSSPropertyID::CSSPropertyCounterIncrement:
    case CSSPropertyID::CSSPropertyCounterReset:
    case CSSPropertyID::CSSPropertyCounterSet:
    case CSSPropertyID::CSSPropertyCursor:
    case CSSPropertyID::CSSPropertyCx:
    case CSSPropertyID::CSSPropertyCy:
    case CSSPropertyID::CSSPropertyD:
    case CSSPropertyID::CSSPropertyDisplay:
    case CSSPropertyID::CSSPropertyDominantBaseline:
    case CSSPropertyID::CSSPropertyDynamicRangeLimit:
    case CSSPropertyID::CSSPropertyEmptyCells:
    case CSSPropertyID::CSSPropertyFieldSizing:
    case CSSPropertyID::CSSPropertyFill:
    case CSSPropertyID::CSSPropertyFillOpacity:
    case CSSPropertyID::CSSPropertyFillRule:
    case CSSPropertyID::CSSPropertyFilter:
    case CSSPropertyID::CSSPropertyFloat:
    case CSSPropertyID::CSSPropertyFloodColor:
    case CSSPropertyID::CSSPropertyFloodOpacity:
    case CSSPropertyID::CSSPropertyFontPalette:
    case CSSPropertyID::CSSPropertyGlyphOrientationHorizontal:
    case CSSPropertyID::CSSPropertyGlyphOrientationVertical:
    case CSSPropertyID::CSSPropertyHangingPunctuation:
    case CSSPropertyID::CSSPropertyHeight:
    case CSSPropertyID::CSSPropertyHyphenateCharacter:
    case CSSPropertyID::CSSPropertyHyphens:
    case CSSPropertyID::CSSPropertyImageOrientation:
    case CSSPropertyID::CSSPropertyImageRendering:
    case CSSPropertyID::CSSPropertyInlineSize:
    case CSSPropertyID::CSSPropertyInputSecurity:
    case CSSPropertyID::CSSPropertyIsolation:
    case CSSPropertyID::CSSPropertyLetterSpacing:
    case CSSPropertyID::CSSPropertyLightingColor:
    case CSSPropertyID::CSSPropertyLineBreak:
    case CSSPropertyID::CSSPropertyLineFitEdge:
    case CSSPropertyID::CSSPropertyMarginTrim:
    case CSSPropertyID::CSSPropertyMaskType:
    case CSSPropertyID::CSSPropertyMathStyle:
    case CSSPropertyID::CSSPropertyMaxBlockSize:
    case CSSPropertyID::CSSPropertyMaxHeight:
    case CSSPropertyID::CSSPropertyMaxInlineSize:
    case CSSPropertyID::CSSPropertyMaxWidth:
    case CSSPropertyID::CSSPropertyMinBlockSize:
    case CSSPropertyID::CSSPropertyMinHeight:
    case CSSPropertyID::CSSPropertyMinInlineSize:
    case CSSPropertyID::CSSPropertyMinWidth:
    case CSSPropertyID::CSSPropertyMixBlendMode:
    case CSSPropertyID::CSSPropertyObjectFit:
    case CSSPropertyID::CSSPropertyObjectPosition:
    case CSSPropertyID::CSSPropertyOpacity:
    case CSSPropertyID::CSSPropertyOrder:
    case CSSPropertyID::CSSPropertyOrphans:
    case CSSPropertyID::CSSPropertyOutlineOffset:
    case CSSPropertyID::CSSPropertyOverflowAnchor:
    case CSSPropertyID::CSSPropertyOverflowBlock:
    case CSSPropertyID::CSSPropertyOverflowInline:
    case CSSPropertyID::CSSPropertyOverflowWrap:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorBlock:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorInline:
    case CSSPropertyID::CSSPropertyPage:
    case CSSPropertyID::CSSPropertyPaintOrder:
    case CSSPropertyID::CSSPropertyPointerEvents:
    case CSSPropertyID::CSSPropertyPosition:
    case CSSPropertyID::CSSPropertyPositionAnchor:
    case CSSPropertyID::CSSPropertyPositionArea:
    case CSSPropertyID::CSSPropertyPositionVisibility:
    case CSSPropertyID::CSSPropertyPrintColorAdjust:
    case CSSPropertyID::CSSPropertyQuotes:
    case CSSPropertyID::CSSPropertyR:
    case CSSPropertyID::CSSPropertyResize:
    case CSSPropertyID::CSSPropertyRotate:
    case CSSPropertyID::CSSPropertyRubyAlign:
    case CSSPropertyID::CSSPropertyRubyOverhang:
    case CSSPropertyID::CSSPropertyRubyPosition:
    case CSSPropertyID::CSSPropertyRx:
    case CSSPropertyID::CSSPropertyRy:
    case CSSPropertyID::CSSPropertyScale:
    case CSSPropertyID::CSSPropertyScrollBehavior:
    case CSSPropertyID::CSSPropertyScrollSnapAlign:
    case CSSPropertyID::CSSPropertyScrollSnapStop:
    case CSSPropertyID::CSSPropertyScrollSnapType:
    case CSSPropertyID::CSSPropertyScrollbarColor:
    case CSSPropertyID::CSSPropertyScrollbarGutter:
    case CSSPropertyID::CSSPropertyScrollbarWidth:
    case CSSPropertyID::CSSPropertyShapeImageThreshold:
    case CSSPropertyID::CSSPropertyShapeMargin:
    case CSSPropertyID::CSSPropertyShapeOutside:
    case CSSPropertyID::CSSPropertyShapeRendering:
    case CSSPropertyID::CSSPropertySpeakAs:
    case CSSPropertyID::CSSPropertyStopColor:
    case CSSPropertyID::CSSPropertyStopOpacity:
    case CSSPropertyID::CSSPropertyStroke:
    case CSSPropertyID::CSSPropertyStrokeColor:
    case CSSPropertyID::CSSPropertyStrokeDasharray:
    case CSSPropertyID::CSSPropertyStrokeDashoffset:
    case CSSPropertyID::CSSPropertyStrokeLinecap:
    case CSSPropertyID::CSSPropertyStrokeLinejoin:
    case CSSPropertyID::CSSPropertyStrokeMiterlimit:
    case CSSPropertyID::CSSPropertyStrokeOpacity:
    case CSSPropertyID::CSSPropertyStrokeWidth:
    case CSSPropertyID::CSSPropertyTabSize:
    case CSSPropertyID::CSSPropertyTableLayout:
    case CSSPropertyID::CSSPropertyTextAlign:
    case CSSPropertyID::CSSPropertyTextAlignLast:
    case CSSPropertyID::CSSPropertyTextAnchor:
    case CSSPropertyID::CSSPropertyTextAutospace:
    case CSSPropertyID::CSSPropertyTextCombineUpright:
    case CSSPropertyID::CSSPropertyTextDecorationThickness:
    case CSSPropertyID::CSSPropertyTextEmphasisPosition:
    case CSSPropertyID::CSSPropertyTextGroupAlign:
    case CSSPropertyID::CSSPropertyTextIndent:
    case CSSPropertyID::CSSPropertyTextJustify:
    case CSSPropertyID::CSSPropertyTextOverflow:
    case CSSPropertyID::CSSPropertyTextRendering:
    case CSSPropertyID::CSSPropertyTextShadow:
    case CSSPropertyID::CSSPropertyTextSpacingTrim:
    case CSSPropertyID::CSSPropertyTextTransform:
    case CSSPropertyID::CSSPropertyTextUnderlineOffset:
    case CSSPropertyID::CSSPropertyTextUnderlinePosition:
    case CSSPropertyID::CSSPropertyTimelineScope:
    case CSSPropertyID::CSSPropertyTouchAction:
    case CSSPropertyID::CSSPropertyTransform:
    case CSSPropertyID::CSSPropertyTransformBox:
    case CSSPropertyID::CSSPropertyTransformStyle:
    case CSSPropertyID::CSSPropertyTranslate:
    case CSSPropertyID::CSSPropertyVectorEffect:
    case CSSPropertyID::CSSPropertyVerticalAlign:
    case CSSPropertyID::CSSPropertyViewTransitionClass:
    case CSSPropertyID::CSSPropertyViewTransitionName:
    case CSSPropertyID::CSSPropertyVisibility:
    case CSSPropertyID::CSSPropertyWidows:
    case CSSPropertyID::CSSPropertyWidth:
    case CSSPropertyID::CSSPropertyWillChange:
    case CSSPropertyID::CSSPropertyWordBreak:
    case CSSPropertyID::CSSPropertyWordSpacing:
    case CSSPropertyID::CSSPropertyWritingMode:
    case CSSPropertyID::CSSPropertyX:
    case CSSPropertyID::CSSPropertyY:
    case CSSPropertyID::CSSPropertyZIndex:
    case CSSPropertyID::CSSPropertyZoom:
        return StylePropertyShorthandVector{allShorthand()};
    default:
        return { };
    }
}

} // namespace WebCore

