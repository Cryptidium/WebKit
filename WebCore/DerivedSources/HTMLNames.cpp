/*
 * THIS FILE WAS AUTOMATICALLY GENERATED, DO NOT EDIT.
 *
 * This file was generated by the dom/make_names.pl script.
 *
 * Copyright (C) 2005, 2006, 2007, 2008, 2009, 2013 Apple Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include "config.h"

#include "HTMLNames.h"

#include "Namespace.h"
#include "NodeName.h"
#include <array>

namespace WebCore {

namespace HTMLNames {

using namespace WebCore;

MainThreadLazyNeverDestroyed<const AtomString> xhtmlNamespaceURI;

static constexpr StringImpl::StaticStringImpl aData("a");
static constexpr StringImpl::StaticStringImpl abbrData("abbr");
static constexpr StringImpl::StaticStringImpl acceptData("accept");
static constexpr StringImpl::StaticStringImpl accept_charsetData("accept-charset");
static constexpr StringImpl::StaticStringImpl accesskeyData("accesskey");
static constexpr StringImpl::StaticStringImpl acronymData("acronym");
static constexpr StringImpl::StaticStringImpl actionData("action");
static constexpr StringImpl::StaticStringImpl addressData("address");
static constexpr StringImpl::StaticStringImpl alignData("align");
static constexpr StringImpl::StaticStringImpl alinkData("alink");
static constexpr StringImpl::StaticStringImpl allowData("allow");
static constexpr StringImpl::StaticStringImpl allowfullscreenData("allowfullscreen");
static constexpr StringImpl::StaticStringImpl alphaData("alpha");
static constexpr StringImpl::StaticStringImpl altData("alt");
static constexpr StringImpl::StaticStringImpl annotation_xmlData("annotation-xml");
static constexpr StringImpl::StaticStringImpl appletData("applet");
static constexpr StringImpl::StaticStringImpl archiveData("archive");
static constexpr StringImpl::StaticStringImpl areaData("area");
static constexpr StringImpl::StaticStringImpl aria_activedescendantData("aria-activedescendant");
static constexpr StringImpl::StaticStringImpl aria_atomicData("aria-atomic");
static constexpr StringImpl::StaticStringImpl aria_autocompleteData("aria-autocomplete");
static constexpr StringImpl::StaticStringImpl aria_braillelabelData("aria-braillelabel");
static constexpr StringImpl::StaticStringImpl aria_brailleroledescriptionData("aria-brailleroledescription");
static constexpr StringImpl::StaticStringImpl aria_busyData("aria-busy");
static constexpr StringImpl::StaticStringImpl aria_checkedData("aria-checked");
static constexpr StringImpl::StaticStringImpl aria_colcountData("aria-colcount");
static constexpr StringImpl::StaticStringImpl aria_colindexData("aria-colindex");
static constexpr StringImpl::StaticStringImpl aria_colspanData("aria-colspan");
static constexpr StringImpl::StaticStringImpl aria_controlsData("aria-controls");
static constexpr StringImpl::StaticStringImpl aria_currentData("aria-current");
static constexpr StringImpl::StaticStringImpl aria_describedbyData("aria-describedby");
static constexpr StringImpl::StaticStringImpl aria_descriptionData("aria-description");
static constexpr StringImpl::StaticStringImpl aria_detailsData("aria-details");
static constexpr StringImpl::StaticStringImpl aria_disabledData("aria-disabled");
static constexpr StringImpl::StaticStringImpl aria_dropeffectData("aria-dropeffect");
static constexpr StringImpl::StaticStringImpl aria_errormessageData("aria-errormessage");
static constexpr StringImpl::StaticStringImpl aria_expandedData("aria-expanded");
static constexpr StringImpl::StaticStringImpl aria_flowtoData("aria-flowto");
static constexpr StringImpl::StaticStringImpl aria_grabbedData("aria-grabbed");
static constexpr StringImpl::StaticStringImpl aria_haspopupData("aria-haspopup");
static constexpr StringImpl::StaticStringImpl aria_helpData("aria-help");
static constexpr StringImpl::StaticStringImpl aria_hiddenData("aria-hidden");
static constexpr StringImpl::StaticStringImpl aria_invalidData("aria-invalid");
static constexpr StringImpl::StaticStringImpl aria_keyshortcutsData("aria-keyshortcuts");
static constexpr StringImpl::StaticStringImpl aria_labelData("aria-label");
static constexpr StringImpl::StaticStringImpl aria_labeledbyData("aria-labeledby");
static constexpr StringImpl::StaticStringImpl aria_labelledbyData("aria-labelledby");
static constexpr StringImpl::StaticStringImpl aria_levelData("aria-level");
static constexpr StringImpl::StaticStringImpl aria_liveData("aria-live");
static constexpr StringImpl::StaticStringImpl aria_modalData("aria-modal");
static constexpr StringImpl::StaticStringImpl aria_multilineData("aria-multiline");
static constexpr StringImpl::StaticStringImpl aria_multiselectableData("aria-multiselectable");
static constexpr StringImpl::StaticStringImpl aria_orientationData("aria-orientation");
static constexpr StringImpl::StaticStringImpl aria_ownsData("aria-owns");
static constexpr StringImpl::StaticStringImpl aria_placeholderData("aria-placeholder");
static constexpr StringImpl::StaticStringImpl aria_posinsetData("aria-posinset");
static constexpr StringImpl::StaticStringImpl aria_pressedData("aria-pressed");
static constexpr StringImpl::StaticStringImpl aria_readonlyData("aria-readonly");
static constexpr StringImpl::StaticStringImpl aria_relevantData("aria-relevant");
static constexpr StringImpl::StaticStringImpl aria_requiredData("aria-required");
static constexpr StringImpl::StaticStringImpl aria_roledescriptionData("aria-roledescription");
static constexpr StringImpl::StaticStringImpl aria_rowcountData("aria-rowcount");
static constexpr StringImpl::StaticStringImpl aria_rowindexData("aria-rowindex");
static constexpr StringImpl::StaticStringImpl aria_rowspanData("aria-rowspan");
static constexpr StringImpl::StaticStringImpl aria_selectedData("aria-selected");
static constexpr StringImpl::StaticStringImpl aria_setsizeData("aria-setsize");
static constexpr StringImpl::StaticStringImpl aria_sortData("aria-sort");
static constexpr StringImpl::StaticStringImpl aria_valuemaxData("aria-valuemax");
static constexpr StringImpl::StaticStringImpl aria_valueminData("aria-valuemin");
static constexpr StringImpl::StaticStringImpl aria_valuenowData("aria-valuenow");
static constexpr StringImpl::StaticStringImpl aria_valuetextData("aria-valuetext");
static constexpr StringImpl::StaticStringImpl articleData("article");
static constexpr StringImpl::StaticStringImpl asData("as");
static constexpr StringImpl::StaticStringImpl asideData("aside");
static constexpr StringImpl::StaticStringImpl asyncData("async");
static constexpr StringImpl::StaticStringImpl attachmentData("attachment");
static constexpr StringImpl::StaticStringImpl attributiondestinationData("attributiondestination");
static constexpr StringImpl::StaticStringImpl attributionsourceidData("attributionsourceid");
static constexpr StringImpl::StaticStringImpl attributionsourcenonceData("attributionsourcenonce");
static constexpr StringImpl::StaticStringImpl audioData("audio");
static constexpr StringImpl::StaticStringImpl autocapitalizeData("autocapitalize");
static constexpr StringImpl::StaticStringImpl autocompleteData("autocomplete");
static constexpr StringImpl::StaticStringImpl autocorrectData("autocorrect");
static constexpr StringImpl::StaticStringImpl autofocusData("autofocus");
static constexpr StringImpl::StaticStringImpl autopictureinpictureData("autopictureinpicture");
static constexpr StringImpl::StaticStringImpl autoplayData("autoplay");
static constexpr StringImpl::StaticStringImpl autosaveData("autosave");
static constexpr StringImpl::StaticStringImpl axisData("axis");
static constexpr StringImpl::StaticStringImpl bData("b");
static constexpr StringImpl::StaticStringImpl backgroundData("background");
static constexpr StringImpl::StaticStringImpl baseData("base");
static constexpr StringImpl::StaticStringImpl basefontData("basefont");
static constexpr StringImpl::StaticStringImpl bdiData("bdi");
static constexpr StringImpl::StaticStringImpl bdoData("bdo");
static constexpr StringImpl::StaticStringImpl behaviorData("behavior");
static constexpr StringImpl::StaticStringImpl bgcolorData("bgcolor");
static constexpr StringImpl::StaticStringImpl bgsoundData("bgsound");
static constexpr StringImpl::StaticStringImpl bigData("big");
static constexpr StringImpl::StaticStringImpl blockingData("blocking");
static constexpr StringImpl::StaticStringImpl blockquoteData("blockquote");
static constexpr StringImpl::StaticStringImpl bodyData("body");
static constexpr StringImpl::StaticStringImpl borderData("border");
static constexpr StringImpl::StaticStringImpl bordercolorData("bordercolor");
static constexpr StringImpl::StaticStringImpl brData("br");
static constexpr StringImpl::StaticStringImpl buttonData("button");
static constexpr StringImpl::StaticStringImpl canvasData("canvas");
static constexpr StringImpl::StaticStringImpl captionData("caption");
static constexpr StringImpl::StaticStringImpl captureData("capture");
static constexpr StringImpl::StaticStringImpl cellborderData("cellborder");
static constexpr StringImpl::StaticStringImpl cellpaddingData("cellpadding");
static constexpr StringImpl::StaticStringImpl cellspacingData("cellspacing");
static constexpr StringImpl::StaticStringImpl centerData("center");
static constexpr StringImpl::StaticStringImpl challengeData("challenge");
static constexpr StringImpl::StaticStringImpl charData("char");
static constexpr StringImpl::StaticStringImpl charoffData("charoff");
static constexpr StringImpl::StaticStringImpl charsetData("charset");
static constexpr StringImpl::StaticStringImpl checkedData("checked");
static constexpr StringImpl::StaticStringImpl citeData("cite");
static constexpr StringImpl::StaticStringImpl classData("class");
static constexpr StringImpl::StaticStringImpl classidData("classid");
static constexpr StringImpl::StaticStringImpl clearData("clear");
static constexpr StringImpl::StaticStringImpl codeData("code");
static constexpr StringImpl::StaticStringImpl codebaseData("codebase");
static constexpr StringImpl::StaticStringImpl codetypeData("codetype");
static constexpr StringImpl::StaticStringImpl colData("col");
static constexpr StringImpl::StaticStringImpl colgroupData("colgroup");
static constexpr StringImpl::StaticStringImpl colorData("color");
static constexpr StringImpl::StaticStringImpl color_profileData("color-profile");
static constexpr StringImpl::StaticStringImpl colorspaceData("colorspace");
static constexpr StringImpl::StaticStringImpl colsData("cols");
static constexpr StringImpl::StaticStringImpl colspanData("colspan");
static constexpr StringImpl::StaticStringImpl commandData("command");
static constexpr StringImpl::StaticStringImpl commandforData("commandfor");
static constexpr StringImpl::StaticStringImpl compactData("compact");
static constexpr StringImpl::StaticStringImpl contentData("content");
static constexpr StringImpl::StaticStringImpl contenteditableData("contenteditable");
static constexpr StringImpl::StaticStringImpl controlsData("controls");
static constexpr StringImpl::StaticStringImpl coordsData("coords");
static constexpr StringImpl::StaticStringImpl crossoriginData("crossorigin");
static constexpr StringImpl::StaticStringImpl cueData("cue");
static constexpr StringImpl::StaticStringImpl cuebackgroundData("cuebackground");
static constexpr StringImpl::StaticStringImpl dataData("data");
static constexpr StringImpl::StaticStringImpl datalistData("datalist");
static constexpr StringImpl::StaticStringImpl datetimeData("datetime");
static constexpr StringImpl::StaticStringImpl ddData("dd");
static constexpr StringImpl::StaticStringImpl declareData("declare");
static constexpr StringImpl::StaticStringImpl decodingData("decoding");
static constexpr StringImpl::StaticStringImpl defaultData("default");
static constexpr StringImpl::StaticStringImpl deferData("defer");
static constexpr StringImpl::StaticStringImpl delData("del");
static constexpr StringImpl::StaticStringImpl detailsData("details");
static constexpr StringImpl::StaticStringImpl dfnData("dfn");
static constexpr StringImpl::StaticStringImpl dialogData("dialog");
static constexpr StringImpl::StaticStringImpl dirData("dir");
static constexpr StringImpl::StaticStringImpl directionData("direction");
static constexpr StringImpl::StaticStringImpl dirnameData("dirname");
static constexpr StringImpl::StaticStringImpl disabledData("disabled");
static constexpr StringImpl::StaticStringImpl disablepictureinpictureData("disablepictureinpicture");
static constexpr StringImpl::StaticStringImpl disableremoteplaybackData("disableremoteplayback");
static constexpr StringImpl::StaticStringImpl divData("div");
static constexpr StringImpl::StaticStringImpl dlData("dl");
static constexpr StringImpl::StaticStringImpl downloadData("download");
static constexpr StringImpl::StaticStringImpl draggableData("draggable");
static constexpr StringImpl::StaticStringImpl dropzoneData("dropzone");
static constexpr StringImpl::StaticStringImpl dtData("dt");
static constexpr StringImpl::StaticStringImpl emData("em");
static constexpr StringImpl::StaticStringImpl embedData("embed");
static constexpr StringImpl::StaticStringImpl enctypeData("enctype");
static constexpr StringImpl::StaticStringImpl endData("end");
static constexpr StringImpl::StaticStringImpl enterkeyhintData("enterkeyhint");
static constexpr StringImpl::StaticStringImpl environmentmapData("environmentmap");
static constexpr StringImpl::StaticStringImpl eventData("event");
static constexpr StringImpl::StaticStringImpl expandedData("expanded");
static constexpr StringImpl::StaticStringImpl exportpartsData("exportparts");
static constexpr StringImpl::StaticStringImpl faceData("face");
static constexpr StringImpl::StaticStringImpl fetchpriorityData("fetchpriority");
static constexpr StringImpl::StaticStringImpl fieldsetData("fieldset");
static constexpr StringImpl::StaticStringImpl figcaptionData("figcaption");
static constexpr StringImpl::StaticStringImpl figureData("figure");
static constexpr StringImpl::StaticStringImpl filenameData("filename");
static constexpr StringImpl::StaticStringImpl focusedData("focused");
static constexpr StringImpl::StaticStringImpl fontData("font");
static constexpr StringImpl::StaticStringImpl font_faceData("font-face");
static constexpr StringImpl::StaticStringImpl font_face_formatData("font-face-format");
static constexpr StringImpl::StaticStringImpl font_face_nameData("font-face-name");
static constexpr StringImpl::StaticStringImpl font_face_srcData("font-face-src");
static constexpr StringImpl::StaticStringImpl font_face_uriData("font-face-uri");
static constexpr StringImpl::StaticStringImpl footerData("footer");
static constexpr StringImpl::StaticStringImpl forData("for");
static constexpr StringImpl::StaticStringImpl formData("form");
static constexpr StringImpl::StaticStringImpl formactionData("formaction");
static constexpr StringImpl::StaticStringImpl formenctypeData("formenctype");
static constexpr StringImpl::StaticStringImpl formmethodData("formmethod");
static constexpr StringImpl::StaticStringImpl formnovalidateData("formnovalidate");
static constexpr StringImpl::StaticStringImpl formtargetData("formtarget");
static constexpr StringImpl::StaticStringImpl frameData("frame");
static constexpr StringImpl::StaticStringImpl frameborderData("frameborder");
static constexpr StringImpl::StaticStringImpl framesetData("frameset");
static constexpr StringImpl::StaticStringImpl h1Data("h1");
static constexpr StringImpl::StaticStringImpl h2Data("h2");
static constexpr StringImpl::StaticStringImpl h3Data("h3");
static constexpr StringImpl::StaticStringImpl h4Data("h4");
static constexpr StringImpl::StaticStringImpl h5Data("h5");
static constexpr StringImpl::StaticStringImpl h6Data("h6");
static constexpr StringImpl::StaticStringImpl headData("head");
static constexpr StringImpl::StaticStringImpl headerData("header");
static constexpr StringImpl::StaticStringImpl headersData("headers");
static constexpr StringImpl::StaticStringImpl heightData("height");
static constexpr StringImpl::StaticStringImpl hgroupData("hgroup");
static constexpr StringImpl::StaticStringImpl hiddenData("hidden");
static constexpr StringImpl::StaticStringImpl highData("high");
static constexpr StringImpl::StaticStringImpl hrData("hr");
static constexpr StringImpl::StaticStringImpl hrefData("href");
static constexpr StringImpl::StaticStringImpl hreflangData("hreflang");
static constexpr StringImpl::StaticStringImpl hspaceData("hspace");
static constexpr StringImpl::StaticStringImpl htmlData("html");
static constexpr StringImpl::StaticStringImpl http_equivData("http-equiv");
static constexpr StringImpl::StaticStringImpl iData("i");
static constexpr StringImpl::StaticStringImpl idData("id");
static constexpr StringImpl::StaticStringImpl iframeData("iframe");
static constexpr StringImpl::StaticStringImpl imageData("image");
static constexpr StringImpl::StaticStringImpl imagesizesData("imagesizes");
static constexpr StringImpl::StaticStringImpl imagesrcsetData("imagesrcset");
static constexpr StringImpl::StaticStringImpl imgData("img");
static constexpr StringImpl::StaticStringImpl inertData("inert");
static constexpr StringImpl::StaticStringImpl inputData("input");
static constexpr StringImpl::StaticStringImpl inputmodeData("inputmode");
static constexpr StringImpl::StaticStringImpl insData("ins");
static constexpr StringImpl::StaticStringImpl integrityData("integrity");
static constexpr StringImpl::StaticStringImpl interactiveData("interactive");
static constexpr StringImpl::StaticStringImpl isData("is");
static constexpr StringImpl::StaticStringImpl ismapData("ismap");
static constexpr StringImpl::StaticStringImpl kbdData("kbd");
static constexpr StringImpl::StaticStringImpl keygenData("keygen");
static constexpr StringImpl::StaticStringImpl keytypeData("keytype");
static constexpr StringImpl::StaticStringImpl kindData("kind");
static constexpr StringImpl::StaticStringImpl labelData("label");
static constexpr StringImpl::StaticStringImpl langData("lang");
static constexpr StringImpl::StaticStringImpl languageData("language");
static constexpr StringImpl::StaticStringImpl leftmarginData("leftmargin");
static constexpr StringImpl::StaticStringImpl legendData("legend");
static constexpr StringImpl::StaticStringImpl liData("li");
static constexpr StringImpl::StaticStringImpl linkData("link");
static constexpr StringImpl::StaticStringImpl listData("list");
static constexpr StringImpl::StaticStringImpl listingData("listing");
static constexpr StringImpl::StaticStringImpl loadingData("loading");
static constexpr StringImpl::StaticStringImpl longdescData("longdesc");
static constexpr StringImpl::StaticStringImpl loopData("loop");
static constexpr StringImpl::StaticStringImpl loopendData("loopend");
static constexpr StringImpl::StaticStringImpl loopstartData("loopstart");
static constexpr StringImpl::StaticStringImpl lowData("low");
static constexpr StringImpl::StaticStringImpl lowsrcData("lowsrc");
static constexpr StringImpl::StaticStringImpl mainData("main");
static constexpr StringImpl::StaticStringImpl mapData("map");
static constexpr StringImpl::StaticStringImpl marginheightData("marginheight");
static constexpr StringImpl::StaticStringImpl marginwidthData("marginwidth");
static constexpr StringImpl::StaticStringImpl markData("mark");
static constexpr StringImpl::StaticStringImpl marqueeData("marquee");
static constexpr StringImpl::StaticStringImpl maxData("max");
static constexpr StringImpl::StaticStringImpl maxlengthData("maxlength");
static constexpr StringImpl::StaticStringImpl mayscriptData("mayscript");
static constexpr StringImpl::StaticStringImpl mediaData("media");
static constexpr StringImpl::StaticStringImpl mediagroupData("mediagroup");
static constexpr StringImpl::StaticStringImpl menuData("menu");
static constexpr StringImpl::StaticStringImpl metaData("meta");
static constexpr StringImpl::StaticStringImpl meterData("meter");
static constexpr StringImpl::StaticStringImpl methodData("method");
static constexpr StringImpl::StaticStringImpl minData("min");
static constexpr StringImpl::StaticStringImpl minlengthData("minlength");
static constexpr StringImpl::StaticStringImpl missing_glyphData("missing-glyph");
static constexpr StringImpl::StaticStringImpl modelData("model");
static constexpr StringImpl::StaticStringImpl multipleData("multiple");
static constexpr StringImpl::StaticStringImpl mutedData("muted");
static constexpr StringImpl::StaticStringImpl nameData("name");
static constexpr StringImpl::StaticStringImpl navData("nav");
static constexpr StringImpl::StaticStringImpl nobrData("nobr");
static constexpr StringImpl::StaticStringImpl noembedData("noembed");
static constexpr StringImpl::StaticStringImpl noframesData("noframes");
static constexpr StringImpl::StaticStringImpl nohrefData("nohref");
static constexpr StringImpl::StaticStringImpl nomoduleData("nomodule");
static constexpr StringImpl::StaticStringImpl nonceData("nonce");
static constexpr StringImpl::StaticStringImpl noportalData("noportal");
static constexpr StringImpl::StaticStringImpl noresizeData("noresize");
static constexpr StringImpl::StaticStringImpl noscriptData("noscript");
static constexpr StringImpl::StaticStringImpl noshadeData("noshade");
static constexpr StringImpl::StaticStringImpl novalidateData("novalidate");
static constexpr StringImpl::StaticStringImpl nowrapData("nowrap");
static constexpr StringImpl::StaticStringImpl objectData("object");
static constexpr StringImpl::StaticStringImpl olData("ol");
static constexpr StringImpl::StaticStringImpl onabortData("onabort");
static constexpr StringImpl::StaticStringImpl onafterprintData("onafterprint");
static constexpr StringImpl::StaticStringImpl onanimationcancelData("onanimationcancel");
static constexpr StringImpl::StaticStringImpl onanimationendData("onanimationend");
static constexpr StringImpl::StaticStringImpl onanimationiterationData("onanimationiteration");
static constexpr StringImpl::StaticStringImpl onanimationstartData("onanimationstart");
static constexpr StringImpl::StaticStringImpl onautocompleteData("onautocomplete");
static constexpr StringImpl::StaticStringImpl onautocompleteerrorData("onautocompleteerror");
static constexpr StringImpl::StaticStringImpl onauxclickData("onauxclick");
static constexpr StringImpl::StaticStringImpl onbeforecopyData("onbeforecopy");
static constexpr StringImpl::StaticStringImpl onbeforecutData("onbeforecut");
static constexpr StringImpl::StaticStringImpl onbeforeinputData("onbeforeinput");
static constexpr StringImpl::StaticStringImpl onbeforeloadData("onbeforeload");
static constexpr StringImpl::StaticStringImpl onbeforematchData("onbeforematch");
static constexpr StringImpl::StaticStringImpl onbeforepasteData("onbeforepaste");
static constexpr StringImpl::StaticStringImpl onbeforeprintData("onbeforeprint");
static constexpr StringImpl::StaticStringImpl onbeforetoggleData("onbeforetoggle");
static constexpr StringImpl::StaticStringImpl onbeforeunloadData("onbeforeunload");
static constexpr StringImpl::StaticStringImpl onblurData("onblur");
static constexpr StringImpl::StaticStringImpl oncancelData("oncancel");
static constexpr StringImpl::StaticStringImpl oncanplayData("oncanplay");
static constexpr StringImpl::StaticStringImpl oncanplaythroughData("oncanplaythrough");
static constexpr StringImpl::StaticStringImpl onchangeData("onchange");
static constexpr StringImpl::StaticStringImpl onclickData("onclick");
static constexpr StringImpl::StaticStringImpl oncloseData("onclose");
static constexpr StringImpl::StaticStringImpl oncommandData("oncommand");
static constexpr StringImpl::StaticStringImpl oncontentvisibilityautostatechangeData("oncontentvisibilityautostatechange");
static constexpr StringImpl::StaticStringImpl oncontextmenuData("oncontextmenu");
static constexpr StringImpl::StaticStringImpl oncopyData("oncopy");
static constexpr StringImpl::StaticStringImpl oncuechangeData("oncuechange");
static constexpr StringImpl::StaticStringImpl oncutData("oncut");
static constexpr StringImpl::StaticStringImpl ondblclickData("ondblclick");
static constexpr StringImpl::StaticStringImpl ondevicechangeData("ondevicechange");
static constexpr StringImpl::StaticStringImpl ondragData("ondrag");
static constexpr StringImpl::StaticStringImpl ondragendData("ondragend");
static constexpr StringImpl::StaticStringImpl ondragenterData("ondragenter");
static constexpr StringImpl::StaticStringImpl ondragleaveData("ondragleave");
static constexpr StringImpl::StaticStringImpl ondragoverData("ondragover");
static constexpr StringImpl::StaticStringImpl ondragstartData("ondragstart");
static constexpr StringImpl::StaticStringImpl ondropData("ondrop");
static constexpr StringImpl::StaticStringImpl ondurationchangeData("ondurationchange");
static constexpr StringImpl::StaticStringImpl onemptiedData("onemptied");
static constexpr StringImpl::StaticStringImpl onendedData("onended");
static constexpr StringImpl::StaticStringImpl onerrorData("onerror");
static constexpr StringImpl::StaticStringImpl onfocusData("onfocus");
static constexpr StringImpl::StaticStringImpl onfocusinData("onfocusin");
static constexpr StringImpl::StaticStringImpl onfocusoutData("onfocusout");
static constexpr StringImpl::StaticStringImpl onformdataData("onformdata");
static constexpr StringImpl::StaticStringImpl onfullscreenchangeData("onfullscreenchange");
static constexpr StringImpl::StaticStringImpl onfullscreenerrorData("onfullscreenerror");
static constexpr StringImpl::StaticStringImpl ongamepadconnectedData("ongamepadconnected");
static constexpr StringImpl::StaticStringImpl ongamepaddisconnectedData("ongamepaddisconnected");
static constexpr StringImpl::StaticStringImpl ongesturechangeData("ongesturechange");
static constexpr StringImpl::StaticStringImpl ongestureendData("ongestureend");
static constexpr StringImpl::StaticStringImpl ongesturestartData("ongesturestart");
static constexpr StringImpl::StaticStringImpl ongotpointercaptureData("ongotpointercapture");
static constexpr StringImpl::StaticStringImpl onhashchangeData("onhashchange");
static constexpr StringImpl::StaticStringImpl oninputData("oninput");
static constexpr StringImpl::StaticStringImpl oninvalidData("oninvalid");
static constexpr StringImpl::StaticStringImpl onkeydownData("onkeydown");
static constexpr StringImpl::StaticStringImpl onkeypressData("onkeypress");
static constexpr StringImpl::StaticStringImpl onkeyupData("onkeyup");
static constexpr StringImpl::StaticStringImpl onlanguagechangeData("onlanguagechange");
static constexpr StringImpl::StaticStringImpl onloadData("onload");
static constexpr StringImpl::StaticStringImpl onloadeddataData("onloadeddata");
static constexpr StringImpl::StaticStringImpl onloadedmetadataData("onloadedmetadata");
static constexpr StringImpl::StaticStringImpl onloadstartData("onloadstart");
static constexpr StringImpl::StaticStringImpl onlostpointercaptureData("onlostpointercapture");
static constexpr StringImpl::StaticStringImpl onmessageData("onmessage");
static constexpr StringImpl::StaticStringImpl onmessageerrorData("onmessageerror");
static constexpr StringImpl::StaticStringImpl onmousedownData("onmousedown");
static constexpr StringImpl::StaticStringImpl onmouseenterData("onmouseenter");
static constexpr StringImpl::StaticStringImpl onmouseleaveData("onmouseleave");
static constexpr StringImpl::StaticStringImpl onmousemoveData("onmousemove");
static constexpr StringImpl::StaticStringImpl onmouseoutData("onmouseout");
static constexpr StringImpl::StaticStringImpl onmouseoverData("onmouseover");
static constexpr StringImpl::StaticStringImpl onmouseupData("onmouseup");
static constexpr StringImpl::StaticStringImpl onmousewheelData("onmousewheel");
static constexpr StringImpl::StaticStringImpl onofflineData("onoffline");
static constexpr StringImpl::StaticStringImpl ononlineData("ononline");
static constexpr StringImpl::StaticStringImpl onorientationchangeData("onorientationchange");
static constexpr StringImpl::StaticStringImpl onpagehideData("onpagehide");
static constexpr StringImpl::StaticStringImpl onpagerevealData("onpagereveal");
static constexpr StringImpl::StaticStringImpl onpageshowData("onpageshow");
static constexpr StringImpl::StaticStringImpl onpageswapData("onpageswap");
static constexpr StringImpl::StaticStringImpl onpasteData("onpaste");
static constexpr StringImpl::StaticStringImpl onpauseData("onpause");
static constexpr StringImpl::StaticStringImpl onplayData("onplay");
static constexpr StringImpl::StaticStringImpl onplayingData("onplaying");
static constexpr StringImpl::StaticStringImpl onpointercancelData("onpointercancel");
static constexpr StringImpl::StaticStringImpl onpointerdownData("onpointerdown");
static constexpr StringImpl::StaticStringImpl onpointerenterData("onpointerenter");
static constexpr StringImpl::StaticStringImpl onpointerleaveData("onpointerleave");
static constexpr StringImpl::StaticStringImpl onpointermoveData("onpointermove");
static constexpr StringImpl::StaticStringImpl onpointeroutData("onpointerout");
static constexpr StringImpl::StaticStringImpl onpointeroverData("onpointerover");
static constexpr StringImpl::StaticStringImpl onpointerupData("onpointerup");
static constexpr StringImpl::StaticStringImpl onpopstateData("onpopstate");
static constexpr StringImpl::StaticStringImpl onprogressData("onprogress");
static constexpr StringImpl::StaticStringImpl onratechangeData("onratechange");
static constexpr StringImpl::StaticStringImpl onredrawData("onredraw");
static constexpr StringImpl::StaticStringImpl onrejectionhandledData("onrejectionhandled");
static constexpr StringImpl::StaticStringImpl onresetData("onreset");
static constexpr StringImpl::StaticStringImpl onresizeData("onresize");
static constexpr StringImpl::StaticStringImpl onscrollData("onscroll");
static constexpr StringImpl::StaticStringImpl onscrollendData("onscrollend");
static constexpr StringImpl::StaticStringImpl onsecuritypolicyviolationData("onsecuritypolicyviolation");
static constexpr StringImpl::StaticStringImpl onseekedData("onseeked");
static constexpr StringImpl::StaticStringImpl onseekingData("onseeking");
static constexpr StringImpl::StaticStringImpl onselectData("onselect");
static constexpr StringImpl::StaticStringImpl onselectionchangeData("onselectionchange");
static constexpr StringImpl::StaticStringImpl onselectstartData("onselectstart");
static constexpr StringImpl::StaticStringImpl onslotchangeData("onslotchange");
static constexpr StringImpl::StaticStringImpl onstalledData("onstalled");
static constexpr StringImpl::StaticStringImpl onstorageData("onstorage");
static constexpr StringImpl::StaticStringImpl onsubmitData("onsubmit");
static constexpr StringImpl::StaticStringImpl onsuspendData("onsuspend");
static constexpr StringImpl::StaticStringImpl ontimeupdateData("ontimeupdate");
static constexpr StringImpl::StaticStringImpl ontoggleData("ontoggle");
static constexpr StringImpl::StaticStringImpl ontouchcancelData("ontouchcancel");
static constexpr StringImpl::StaticStringImpl ontouchendData("ontouchend");
static constexpr StringImpl::StaticStringImpl ontouchforcechangeData("ontouchforcechange");
static constexpr StringImpl::StaticStringImpl ontouchmoveData("ontouchmove");
static constexpr StringImpl::StaticStringImpl ontouchstartData("ontouchstart");
static constexpr StringImpl::StaticStringImpl ontransitioncancelData("ontransitioncancel");
static constexpr StringImpl::StaticStringImpl ontransitionendData("ontransitionend");
static constexpr StringImpl::StaticStringImpl ontransitionrunData("ontransitionrun");
static constexpr StringImpl::StaticStringImpl ontransitionstartData("ontransitionstart");
static constexpr StringImpl::StaticStringImpl onuncapturederrorData("onuncapturederror");
static constexpr StringImpl::StaticStringImpl onunhandledrejectionData("onunhandledrejection");
static constexpr StringImpl::StaticStringImpl onunloadData("onunload");
static constexpr StringImpl::StaticStringImpl onvolumechangeData("onvolumechange");
static constexpr StringImpl::StaticStringImpl onwaitingData("onwaiting");
static constexpr StringImpl::StaticStringImpl onwebkitanimationendData("onwebkitanimationend");
static constexpr StringImpl::StaticStringImpl onwebkitanimationiterationData("onwebkitanimationiteration");
static constexpr StringImpl::StaticStringImpl onwebkitanimationstartData("onwebkitanimationstart");
static constexpr StringImpl::StaticStringImpl onwebkitbeginfullscreenData("onwebkitbeginfullscreen");
static constexpr StringImpl::StaticStringImpl onwebkitcurrentplaybacktargetiswirelesschangedData("onwebkitcurrentplaybacktargetiswirelesschanged");
static constexpr StringImpl::StaticStringImpl onwebkitendfullscreenData("onwebkitendfullscreen");
static constexpr StringImpl::StaticStringImpl onwebkitfullscreenchangeData("onwebkitfullscreenchange");
static constexpr StringImpl::StaticStringImpl onwebkitfullscreenerrorData("onwebkitfullscreenerror");
static constexpr StringImpl::StaticStringImpl onwebkitkeyaddedData("onwebkitkeyadded");
static constexpr StringImpl::StaticStringImpl onwebkitkeyerrorData("onwebkitkeyerror");
static constexpr StringImpl::StaticStringImpl onwebkitkeymessageData("onwebkitkeymessage");
static constexpr StringImpl::StaticStringImpl onwebkitmouseforcechangedData("onwebkitmouseforcechanged");
static constexpr StringImpl::StaticStringImpl onwebkitmouseforcedownData("onwebkitmouseforcedown");
static constexpr StringImpl::StaticStringImpl onwebkitmouseforceupData("onwebkitmouseforceup");
static constexpr StringImpl::StaticStringImpl onwebkitmouseforcewillbeginData("onwebkitmouseforcewillbegin");
static constexpr StringImpl::StaticStringImpl onwebkitneedkeyData("onwebkitneedkey");
static constexpr StringImpl::StaticStringImpl onwebkitplaybacktargetavailabilitychangedData("onwebkitplaybacktargetavailabilitychanged");
static constexpr StringImpl::StaticStringImpl onwebkitpresentationmodechangedData("onwebkitpresentationmodechanged");
static constexpr StringImpl::StaticStringImpl onwebkittransitionendData("onwebkittransitionend");
static constexpr StringImpl::StaticStringImpl onwheelData("onwheel");
static constexpr StringImpl::StaticStringImpl openData("open");
static constexpr StringImpl::StaticStringImpl optgroupData("optgroup");
static constexpr StringImpl::StaticStringImpl optimumData("optimum");
static constexpr StringImpl::StaticStringImpl optionData("option");
static constexpr StringImpl::StaticStringImpl outputData("output");
static constexpr StringImpl::StaticStringImpl pData("p");
static constexpr StringImpl::StaticStringImpl paramData("param");
static constexpr StringImpl::StaticStringImpl partData("part");
static constexpr StringImpl::StaticStringImpl patternData("pattern");
static constexpr StringImpl::StaticStringImpl pictureData("picture");
static constexpr StringImpl::StaticStringImpl pingData("ping");
static constexpr StringImpl::StaticStringImpl placeholderData("placeholder");
static constexpr StringImpl::StaticStringImpl plaintextData("plaintext");
static constexpr StringImpl::StaticStringImpl playcountData("playcount");
static constexpr StringImpl::StaticStringImpl playsinlineData("playsinline");
static constexpr StringImpl::StaticStringImpl popoverData("popover");
static constexpr StringImpl::StaticStringImpl popovertargetData("popovertarget");
static constexpr StringImpl::StaticStringImpl popovertargetactionData("popovertargetaction");
static constexpr StringImpl::StaticStringImpl posterData("poster");
static constexpr StringImpl::StaticStringImpl preData("pre");
static constexpr StringImpl::StaticStringImpl preloadData("preload");
static constexpr StringImpl::StaticStringImpl progressData("progress");
static constexpr StringImpl::StaticStringImpl qData("q");
static constexpr StringImpl::StaticStringImpl rbData("rb");
static constexpr StringImpl::StaticStringImpl readonlyData("readonly");
static constexpr StringImpl::StaticStringImpl referrerpolicyData("referrerpolicy");
static constexpr StringImpl::StaticStringImpl relData("rel");
static constexpr StringImpl::StaticStringImpl requiredData("required");
static constexpr StringImpl::StaticStringImpl resultsData("results");
static constexpr StringImpl::StaticStringImpl revData("rev");
static constexpr StringImpl::StaticStringImpl reversedData("reversed");
static constexpr StringImpl::StaticStringImpl roleData("role");
static constexpr StringImpl::StaticStringImpl rowsData("rows");
static constexpr StringImpl::StaticStringImpl rowspanData("rowspan");
static constexpr StringImpl::StaticStringImpl rpData("rp");
static constexpr StringImpl::StaticStringImpl rtData("rt");
static constexpr StringImpl::StaticStringImpl rtcData("rtc");
static constexpr StringImpl::StaticStringImpl rubyData("ruby");
static constexpr StringImpl::StaticStringImpl rulesData("rules");
static constexpr StringImpl::StaticStringImpl sData("s");
static constexpr StringImpl::StaticStringImpl sampData("samp");
static constexpr StringImpl::StaticStringImpl sandboxData("sandbox");
static constexpr StringImpl::StaticStringImpl saveData("save");
static constexpr StringImpl::StaticStringImpl schemeData("scheme");
static constexpr StringImpl::StaticStringImpl scopeData("scope");
static constexpr StringImpl::StaticStringImpl scriptData("script");
static constexpr StringImpl::StaticStringImpl scrollamountData("scrollamount");
static constexpr StringImpl::StaticStringImpl scrolldelayData("scrolldelay");
static constexpr StringImpl::StaticStringImpl scrollingData("scrolling");
static constexpr StringImpl::StaticStringImpl searchData("search");
static constexpr StringImpl::StaticStringImpl sectionData("section");
static constexpr StringImpl::StaticStringImpl selectData("select");
static constexpr StringImpl::StaticStringImpl selectedData("selected");
static constexpr StringImpl::StaticStringImpl shadowrootclonableData("shadowrootclonable");
static constexpr StringImpl::StaticStringImpl shadowrootcustomelementregistryData("shadowrootcustomelementregistry");
static constexpr StringImpl::StaticStringImpl shadowrootdelegatesfocusData("shadowrootdelegatesfocus");
static constexpr StringImpl::StaticStringImpl shadowrootmodeData("shadowrootmode");
static constexpr StringImpl::StaticStringImpl shadowrootreferencetargetData("shadowrootreferencetarget");
static constexpr StringImpl::StaticStringImpl shadowrootserializableData("shadowrootserializable");
static constexpr StringImpl::StaticStringImpl shapeData("shape");
static constexpr StringImpl::StaticStringImpl sizeData("size");
static constexpr StringImpl::StaticStringImpl sizesData("sizes");
static constexpr StringImpl::StaticStringImpl slotData("slot");
static constexpr StringImpl::StaticStringImpl smallData("small");
static constexpr StringImpl::StaticStringImpl sourceData("source");
static constexpr StringImpl::StaticStringImpl spanData("span");
static constexpr StringImpl::StaticStringImpl spellcheckData("spellcheck");
static constexpr StringImpl::StaticStringImpl srcData("src");
static constexpr StringImpl::StaticStringImpl srcdocData("srcdoc");
static constexpr StringImpl::StaticStringImpl srclangData("srclang");
static constexpr StringImpl::StaticStringImpl srcsetData("srcset");
static constexpr StringImpl::StaticStringImpl stagemodeData("stagemode");
static constexpr StringImpl::StaticStringImpl standbyData("standby");
static constexpr StringImpl::StaticStringImpl startData("start");
static constexpr StringImpl::StaticStringImpl stepData("step");
static constexpr StringImpl::StaticStringImpl strikeData("strike");
static constexpr StringImpl::StaticStringImpl strongData("strong");
static constexpr StringImpl::StaticStringImpl styleData("style");
static constexpr StringImpl::StaticStringImpl subData("sub");
static constexpr StringImpl::StaticStringImpl subtitleData("subtitle");
static constexpr StringImpl::StaticStringImpl summaryData("summary");
static constexpr StringImpl::StaticStringImpl supData("sup");
static constexpr StringImpl::StaticStringImpl switchData("switch");
static constexpr StringImpl::StaticStringImpl tabindexData("tabindex");
static constexpr StringImpl::StaticStringImpl tableData("table");
static constexpr StringImpl::StaticStringImpl targetData("target");
static constexpr StringImpl::StaticStringImpl tbodyData("tbody");
static constexpr StringImpl::StaticStringImpl tdData("td");
static constexpr StringImpl::StaticStringImpl templateData("template");
static constexpr StringImpl::StaticStringImpl textData("text");
static constexpr StringImpl::StaticStringImpl textareaData("textarea");
static constexpr StringImpl::StaticStringImpl tfootData("tfoot");
static constexpr StringImpl::StaticStringImpl thData("th");
static constexpr StringImpl::StaticStringImpl theadData("thead");
static constexpr StringImpl::StaticStringImpl timeData("time");
static constexpr StringImpl::StaticStringImpl titleData("title");
static constexpr StringImpl::StaticStringImpl topmarginData("topmargin");
static constexpr StringImpl::StaticStringImpl trData("tr");
static constexpr StringImpl::StaticStringImpl trackData("track");
static constexpr StringImpl::StaticStringImpl translateData("translate");
static constexpr StringImpl::StaticStringImpl truespeedData("truespeed");
static constexpr StringImpl::StaticStringImpl ttData("tt");
static constexpr StringImpl::StaticStringImpl typeData("type");
static constexpr StringImpl::StaticStringImpl uData("u");
static constexpr StringImpl::StaticStringImpl uiactionsData("uiactions");
static constexpr StringImpl::StaticStringImpl ulData("ul");
static constexpr StringImpl::StaticStringImpl usemapData("usemap");
static constexpr StringImpl::StaticStringImpl useragentpartData("useragentpart");
static constexpr StringImpl::StaticStringImpl valignData("valign");
static constexpr StringImpl::StaticStringImpl valueData("value");
static constexpr StringImpl::StaticStringImpl valuetypeData("valuetype");
static constexpr StringImpl::StaticStringImpl varData("var");
static constexpr StringImpl::StaticStringImpl versionData("version");
static constexpr StringImpl::StaticStringImpl videoData("video");
static constexpr StringImpl::StaticStringImpl vlinkData("vlink");
static constexpr StringImpl::StaticStringImpl vspaceData("vspace");
static constexpr StringImpl::StaticStringImpl wbrData("wbr");
static constexpr StringImpl::StaticStringImpl webkit_playsinlineData("webkit-playsinline");
static constexpr StringImpl::StaticStringImpl webkitairplayData("x-webkit-airplay");
static constexpr StringImpl::StaticStringImpl webkitallowfullscreenData("webkitallowfullscreen");
static constexpr StringImpl::StaticStringImpl webkitattachmentbloburlData("webkitattachmentbloburl");
static constexpr StringImpl::StaticStringImpl webkitattachmentidData("webkitattachmentid");
static constexpr StringImpl::StaticStringImpl webkitattachmentpathData("webkitattachmentpath");
static constexpr StringImpl::StaticStringImpl webkitdirectoryData("webkitdirectory");
static constexpr StringImpl::StaticStringImpl webkitdropzoneData("webkitdropzone");
static constexpr StringImpl::StaticStringImpl webkitwirelessvideoplaybackdisabledData("x-webkit-wirelessvideoplaybackdisabled");
static constexpr StringImpl::StaticStringImpl widthData("width");
static constexpr StringImpl::StaticStringImpl wrapData("wrap");
static constexpr StringImpl::StaticStringImpl writingsuggestionsData("writingsuggestions");
static constexpr StringImpl::StaticStringImpl x_apple_data_detectorsData("x-apple-data-detectors");
static constexpr StringImpl::StaticStringImpl x_apple_data_detectors_resultData("x-apple-data-detectors-result");
static constexpr StringImpl::StaticStringImpl x_apple_data_detectors_typeData("x-apple-data-detectors-type");
static constexpr StringImpl::StaticStringImpl x_apple_pdf_annotationData("x-apple-pdf-annotation");
static constexpr StringImpl::StaticStringImpl x_itunes_inherit_uri_query_componentData("x-itunes-inherit-uri-query-component");
static constexpr StringImpl::StaticStringImpl xmpData("xmp");
// Tags
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> aTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> abbrTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> acronymTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> addressTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> annotation_xmlTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> appletTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> areaTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> articleTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> asideTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> attachmentTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> audioTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> bTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> baseTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> basefontTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> bdiTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> bdoTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> bgsoundTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> bigTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> blockquoteTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> bodyTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> brTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> buttonTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> canvasTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> captionTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> centerTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> citeTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> codeTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> colTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> colgroupTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> color_profileTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> dataTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> datalistTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> ddTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> delTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> detailsTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> dfnTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> dialogTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> dirTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> divTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> dlTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> dtTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> emTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> embedTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> fieldsetTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> figcaptionTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> figureTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> fontTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> font_faceTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> font_face_formatTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> font_face_nameTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> font_face_srcTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> font_face_uriTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> footerTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> formTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> frameTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> framesetTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> h1Tag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> h2Tag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> h3Tag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> h4Tag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> h5Tag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> h6Tag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> headTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> headerTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> hgroupTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> hrTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> htmlTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> iTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> iframeTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> imageTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> imgTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> inputTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> insTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> kbdTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> keygenTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> labelTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> legendTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> liTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> linkTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> listingTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> mainTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> mapTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> markTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> marqueeTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> menuTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> metaTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> meterTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> missing_glyphTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> modelTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> navTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> nobrTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> noembedTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> noframesTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> noscriptTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> objectTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> olTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> optgroupTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> optionTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> outputTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> pTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> paramTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> pictureTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> plaintextTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> preTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> progressTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> qTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> rbTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> rpTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> rtTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> rtcTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> rubyTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> sTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> sampTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> scriptTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> searchTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> sectionTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> selectTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> slotTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> smallTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> sourceTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> spanTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> strikeTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> strongTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> styleTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> subTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> summaryTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> supTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> tableTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> tbodyTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> tdTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> templateTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> textareaTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> tfootTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> thTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> theadTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> timeTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> titleTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> trTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> trackTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> ttTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> uTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> ulTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> varTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> videoTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> wbrTag;
WEBCORE_EXPORT LazyNeverDestroyed<const HTMLQualifiedName> xmpTag;


std::span<const WebCore::HTMLQualifiedName* const, HTMLTagsCount> getHTMLTags()
{
    static const std::array<const WebCore::HTMLQualifiedName*, HTMLTagsCount> HTMLTags {
        &aTag.get(),
        &abbrTag.get(),
        &acronymTag.get(),
        &addressTag.get(),
        &annotation_xmlTag.get(),
        &appletTag.get(),
        &areaTag.get(),
        &articleTag.get(),
        &asideTag.get(),
        &attachmentTag.get(),
        &audioTag.get(),
        &bTag.get(),
        &baseTag.get(),
        &basefontTag.get(),
        &bdiTag.get(),
        &bdoTag.get(),
        &bgsoundTag.get(),
        &bigTag.get(),
        &blockquoteTag.get(),
        &bodyTag.get(),
        &brTag.get(),
        &buttonTag.get(),
        &canvasTag.get(),
        &captionTag.get(),
        &centerTag.get(),
        &citeTag.get(),
        &codeTag.get(),
        &colTag.get(),
        &colgroupTag.get(),
        &color_profileTag.get(),
        &dataTag.get(),
        &datalistTag.get(),
        &ddTag.get(),
        &delTag.get(),
        &detailsTag.get(),
        &dfnTag.get(),
        &dialogTag.get(),
        &dirTag.get(),
        &divTag.get(),
        &dlTag.get(),
        &dtTag.get(),
        &emTag.get(),
        &embedTag.get(),
        &fieldsetTag.get(),
        &figcaptionTag.get(),
        &figureTag.get(),
        &fontTag.get(),
        &font_faceTag.get(),
        &font_face_formatTag.get(),
        &font_face_nameTag.get(),
        &font_face_srcTag.get(),
        &font_face_uriTag.get(),
        &footerTag.get(),
        &formTag.get(),
        &frameTag.get(),
        &framesetTag.get(),
        &h1Tag.get(),
        &h2Tag.get(),
        &h3Tag.get(),
        &h4Tag.get(),
        &h5Tag.get(),
        &h6Tag.get(),
        &headTag.get(),
        &headerTag.get(),
        &hgroupTag.get(),
        &hrTag.get(),
        &htmlTag.get(),
        &iTag.get(),
        &iframeTag.get(),
        &imageTag.get(),
        &imgTag.get(),
        &inputTag.get(),
        &insTag.get(),
        &kbdTag.get(),
        &keygenTag.get(),
        &labelTag.get(),
        &legendTag.get(),
        &liTag.get(),
        &linkTag.get(),
        &listingTag.get(),
        &mainTag.get(),
        &mapTag.get(),
        &markTag.get(),
        &marqueeTag.get(),
        &menuTag.get(),
        &metaTag.get(),
        &meterTag.get(),
        &missing_glyphTag.get(),
        &modelTag.get(),
        &navTag.get(),
        &nobrTag.get(),
        &noembedTag.get(),
        &noframesTag.get(),
        &noscriptTag.get(),
        &objectTag.get(),
        &olTag.get(),
        &optgroupTag.get(),
        &optionTag.get(),
        &outputTag.get(),
        &pTag.get(),
        &paramTag.get(),
        &pictureTag.get(),
        &plaintextTag.get(),
        &preTag.get(),
        &progressTag.get(),
        &qTag.get(),
        &rbTag.get(),
        &rpTag.get(),
        &rtTag.get(),
        &rtcTag.get(),
        &rubyTag.get(),
        &sTag.get(),
        &sampTag.get(),
        &scriptTag.get(),
        &searchTag.get(),
        &sectionTag.get(),
        &selectTag.get(),
        &slotTag.get(),
        &smallTag.get(),
        &sourceTag.get(),
        &spanTag.get(),
        &strikeTag.get(),
        &strongTag.get(),
        &styleTag.get(),
        &subTag.get(),
        &summaryTag.get(),
        &supTag.get(),
        &tableTag.get(),
        &tbodyTag.get(),
        &tdTag.get(),
        &templateTag.get(),
        &textareaTag.get(),
        &tfootTag.get(),
        &thTag.get(),
        &theadTag.get(),
        &timeTag.get(),
        &titleTag.get(),
        &trTag.get(),
        &trackTag.get(),
        &ttTag.get(),
        &uTag.get(),
        &ulTag.get(),
        &varTag.get(),
        &videoTag.get(),
        &wbrTag.get(),
        &xmpTag.get(),
    };
    return HTMLTags;
}

// Attributes
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> abbrAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> acceptAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> accept_charsetAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> accesskeyAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> actionAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> alignAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> alinkAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> allowAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> allowfullscreenAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> alphaAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> altAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> archiveAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_activedescendantAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_atomicAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_autocompleteAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_braillelabelAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_brailleroledescriptionAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_busyAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_checkedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_colcountAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_colindexAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_colspanAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_controlsAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_currentAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_describedbyAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_descriptionAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_detailsAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_disabledAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_dropeffectAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_errormessageAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_expandedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_flowtoAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_grabbedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_haspopupAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_helpAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_hiddenAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_invalidAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_keyshortcutsAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_labelAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_labeledbyAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_labelledbyAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_levelAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_liveAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_modalAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_multilineAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_multiselectableAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_orientationAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_ownsAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_placeholderAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_posinsetAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_pressedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_readonlyAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_relevantAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_requiredAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_roledescriptionAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_rowcountAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_rowindexAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_rowspanAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_selectedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_setsizeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_sortAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_valuemaxAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_valueminAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_valuenowAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> aria_valuetextAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> asAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> asyncAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> attributiondestinationAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> attributionsourceidAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> attributionsourcenonceAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> autocapitalizeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> autocompleteAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> autocorrectAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> autofocusAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> autopictureinpictureAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> autoplayAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> autosaveAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> axisAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> backgroundAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> behaviorAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> bgcolorAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> blockingAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> borderAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> bordercolorAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> captureAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> cellborderAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> cellpaddingAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> cellspacingAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> challengeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> charAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> charoffAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> charsetAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> checkedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> citeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> classAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> classidAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> clearAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> codeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> codebaseAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> codetypeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> colorAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> colorspaceAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> colsAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> colspanAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> commandAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> commandforAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> compactAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> contentAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> contenteditableAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> controlsAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> coordsAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> crossoriginAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> cueAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> cuebackgroundAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> dataAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> datetimeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> declareAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> decodingAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> defaultAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> deferAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> dirAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> directionAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> dirnameAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> disabledAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> disablepictureinpictureAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> disableremoteplaybackAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> downloadAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> draggableAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> dropzoneAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> enctypeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> endAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> enterkeyhintAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> environmentmapAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> eventAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> expandedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> exportpartsAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> faceAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> fetchpriorityAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> filenameAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> focusedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> forAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> formAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> formactionAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> formenctypeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> formmethodAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> formnovalidateAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> formtargetAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> frameAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> frameborderAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> headersAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> heightAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> hiddenAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> highAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> hrefAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> hreflangAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> hspaceAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> http_equivAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> idAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> imagesizesAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> imagesrcsetAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> inertAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> inputmodeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> integrityAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> interactiveAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> isAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ismapAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> keytypeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> kindAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> labelAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> langAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> languageAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> leftmarginAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> linkAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> listAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> loadingAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> longdescAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> loopAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> loopendAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> loopstartAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> lowAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> lowsrcAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> marginheightAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> marginwidthAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> maxAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> maxlengthAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> mayscriptAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> mediaAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> mediagroupAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> methodAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> minAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> minlengthAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> multipleAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> mutedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> nameAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> nohrefAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> nomoduleAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> nonceAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> noportalAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> noresizeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> noshadeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> novalidateAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> nowrapAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> objectAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onabortAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onafterprintAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onanimationcancelAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onanimationendAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onanimationiterationAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onanimationstartAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onautocompleteAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onautocompleteerrorAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onauxclickAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onbeforecopyAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onbeforecutAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onbeforeinputAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onbeforeloadAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onbeforematchAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onbeforepasteAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onbeforeprintAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onbeforetoggleAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onbeforeunloadAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onblurAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> oncancelAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> oncanplayAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> oncanplaythroughAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onchangeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onclickAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> oncloseAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> oncommandAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> oncontentvisibilityautostatechangeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> oncontextmenuAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> oncopyAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> oncuechangeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> oncutAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ondblclickAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ondevicechangeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ondragAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ondragendAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ondragenterAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ondragleaveAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ondragoverAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ondragstartAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ondropAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ondurationchangeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onemptiedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onendedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onerrorAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onfocusAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onfocusinAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onfocusoutAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onformdataAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onfullscreenchangeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onfullscreenerrorAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ongamepadconnectedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ongamepaddisconnectedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ongesturechangeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ongestureendAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ongesturestartAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ongotpointercaptureAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onhashchangeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> oninputAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> oninvalidAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onkeydownAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onkeypressAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onkeyupAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onlanguagechangeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onloadAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onloadeddataAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onloadedmetadataAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onloadstartAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onlostpointercaptureAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onmessageAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onmessageerrorAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onmousedownAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onmouseenterAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onmouseleaveAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onmousemoveAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onmouseoutAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onmouseoverAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onmouseupAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onmousewheelAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onofflineAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ononlineAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onorientationchangeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onpagehideAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onpagerevealAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onpageshowAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onpageswapAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onpasteAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onpauseAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onplayAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onplayingAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onpointercancelAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onpointerdownAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onpointerenterAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onpointerleaveAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onpointermoveAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onpointeroutAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onpointeroverAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onpointerupAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onpopstateAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onprogressAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onratechangeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onredrawAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onrejectionhandledAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onresetAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onresizeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onscrollAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onscrollendAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onsecuritypolicyviolationAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onseekedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onseekingAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onselectAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onselectionchangeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onselectstartAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onslotchangeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onstalledAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onstorageAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onsubmitAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onsuspendAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ontimeupdateAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ontoggleAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ontouchcancelAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ontouchendAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ontouchforcechangeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ontouchmoveAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ontouchstartAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ontransitioncancelAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ontransitionendAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ontransitionrunAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> ontransitionstartAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onuncapturederrorAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onunhandledrejectionAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onunloadAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onvolumechangeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onwaitingAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onwebkitanimationendAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onwebkitanimationiterationAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onwebkitanimationstartAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onwebkitbeginfullscreenAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onwebkitcurrentplaybacktargetiswirelesschangedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onwebkitendfullscreenAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onwebkitfullscreenchangeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onwebkitfullscreenerrorAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onwebkitkeyaddedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onwebkitkeyerrorAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onwebkitkeymessageAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onwebkitmouseforcechangedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onwebkitmouseforcedownAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onwebkitmouseforceupAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onwebkitmouseforcewillbeginAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onwebkitneedkeyAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onwebkitplaybacktargetavailabilitychangedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onwebkitpresentationmodechangedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onwebkittransitionendAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> onwheelAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> openAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> optimumAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> partAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> patternAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> pingAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> placeholderAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> playcountAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> playsinlineAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> popoverAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> popovertargetAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> popovertargetactionAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> posterAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> preloadAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> progressAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> readonlyAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> referrerpolicyAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> relAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> requiredAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> resultsAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> revAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> reversedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> roleAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> rowsAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> rowspanAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> rulesAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> sandboxAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> saveAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> schemeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> scopeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> scrollamountAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> scrolldelayAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> scrollingAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> selectAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> selectedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> shadowrootclonableAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> shadowrootcustomelementregistryAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> shadowrootdelegatesfocusAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> shadowrootmodeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> shadowrootreferencetargetAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> shadowrootserializableAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> shapeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> sizeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> sizesAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> slotAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> spanAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> spellcheckAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> srcAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> srcdocAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> srclangAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> srcsetAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> stagemodeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> standbyAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> startAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> stepAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> styleAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> subtitleAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> summaryAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> switchAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> tabindexAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> targetAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> textAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> titleAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> topmarginAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> translateAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> truespeedAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> typeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> uiactionsAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> usemapAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> useragentpartAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> valignAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> valueAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> valuetypeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> versionAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> vlinkAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> vspaceAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> webkit_playsinlineAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> webkitallowfullscreenAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> webkitattachmentbloburlAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> webkitattachmentidAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> webkitattachmentpathAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> webkitdirectoryAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> webkitdropzoneAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> widthAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> wrapAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> writingsuggestionsAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> x_apple_data_detectorsAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> x_apple_data_detectors_resultAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> x_apple_data_detectors_typeAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> x_apple_pdf_annotationAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> x_itunes_inherit_uri_query_componentAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> webkitairplayAttr;
WEBCORE_EXPORT LazyNeverDestroyed<const QualifiedName> webkitwirelessvideoplaybackdisabledAttr;

void init()
{
    static bool initialized = false;
    if (initialized)
        return;
    initialized = true;

    // Use placement new to initialize the globals.
    AtomString xhtmlNS("http://www.w3.org/1999/xhtml"_s);

    // Namespace
    xhtmlNamespaceURI.construct(xhtmlNS);

#ifndef NDEBUG
    reinterpret_cast<const StringImpl*>(&aData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&abbrData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&acceptData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&accept_charsetData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&accesskeyData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&acronymData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&actionData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&addressData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&alignData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&alinkData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&allowData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&allowfullscreenData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&alphaData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&altData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&annotation_xmlData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&appletData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&archiveData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&areaData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_activedescendantData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_atomicData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_autocompleteData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_braillelabelData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_brailleroledescriptionData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_busyData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_checkedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_colcountData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_colindexData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_colspanData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_controlsData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_currentData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_describedbyData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_descriptionData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_detailsData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_disabledData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_dropeffectData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_errormessageData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_expandedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_flowtoData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_grabbedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_haspopupData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_helpData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_hiddenData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_invalidData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_keyshortcutsData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_labelData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_labeledbyData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_labelledbyData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_levelData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_liveData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_modalData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_multilineData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_multiselectableData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_orientationData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_ownsData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_placeholderData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_posinsetData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_pressedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_readonlyData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_relevantData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_requiredData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_roledescriptionData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_rowcountData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_rowindexData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_rowspanData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_selectedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_setsizeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_sortData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_valuemaxData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_valueminData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_valuenowData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&aria_valuetextData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&articleData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&asData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&asideData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&asyncData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&attachmentData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&attributiondestinationData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&attributionsourceidData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&attributionsourcenonceData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&audioData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&autocapitalizeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&autocompleteData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&autocorrectData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&autofocusData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&autopictureinpictureData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&autoplayData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&autosaveData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&axisData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&bData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&backgroundData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&baseData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&basefontData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&bdiData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&bdoData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&behaviorData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&bgcolorData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&bgsoundData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&bigData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&blockingData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&blockquoteData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&bodyData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&borderData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&bordercolorData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&brData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&buttonData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&canvasData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&captionData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&captureData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&cellborderData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&cellpaddingData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&cellspacingData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&centerData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&challengeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&charData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&charoffData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&charsetData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&checkedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&citeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&classData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&classidData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&clearData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&codeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&codebaseData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&codetypeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&colData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&colgroupData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&colorData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&color_profileData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&colorspaceData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&colsData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&colspanData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&commandData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&commandforData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&compactData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&contentData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&contenteditableData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&controlsData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&coordsData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&crossoriginData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&cueData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&cuebackgroundData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&dataData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&datalistData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&datetimeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ddData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&declareData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&decodingData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&defaultData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&deferData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&delData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&detailsData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&dfnData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&dialogData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&dirData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&directionData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&dirnameData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&disabledData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&disablepictureinpictureData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&disableremoteplaybackData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&divData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&dlData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&downloadData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&draggableData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&dropzoneData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&dtData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&emData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&embedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&enctypeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&endData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&enterkeyhintData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&environmentmapData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&eventData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&expandedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&exportpartsData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&faceData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&fetchpriorityData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&fieldsetData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&figcaptionData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&figureData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&filenameData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&focusedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&fontData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&font_faceData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&font_face_formatData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&font_face_nameData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&font_face_srcData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&font_face_uriData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&footerData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&forData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&formData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&formactionData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&formenctypeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&formmethodData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&formnovalidateData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&formtargetData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&frameData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&frameborderData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&framesetData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&h1Data)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&h2Data)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&h3Data)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&h4Data)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&h5Data)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&h6Data)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&headData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&headerData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&headersData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&heightData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&hgroupData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&hiddenData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&highData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&hrData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&hrefData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&hreflangData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&hspaceData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&htmlData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&http_equivData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&iData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&idData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&iframeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&imageData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&imagesizesData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&imagesrcsetData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&imgData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&inertData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&inputData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&inputmodeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&insData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&integrityData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&interactiveData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&isData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ismapData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&kbdData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&keygenData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&keytypeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&kindData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&labelData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&langData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&languageData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&leftmarginData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&legendData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&liData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&linkData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&listData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&listingData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&loadingData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&longdescData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&loopData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&loopendData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&loopstartData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&lowData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&lowsrcData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&mainData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&mapData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&marginheightData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&marginwidthData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&markData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&marqueeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&maxData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&maxlengthData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&mayscriptData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&mediaData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&mediagroupData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&menuData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&metaData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&meterData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&methodData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&minData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&minlengthData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&missing_glyphData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&modelData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&multipleData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&mutedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&nameData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&navData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&nobrData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&noembedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&noframesData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&nohrefData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&nomoduleData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&nonceData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&noportalData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&noresizeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&noscriptData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&noshadeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&novalidateData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&nowrapData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&objectData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&olData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onabortData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onafterprintData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onanimationcancelData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onanimationendData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onanimationiterationData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onanimationstartData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onautocompleteData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onautocompleteerrorData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onauxclickData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onbeforecopyData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onbeforecutData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onbeforeinputData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onbeforeloadData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onbeforematchData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onbeforepasteData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onbeforeprintData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onbeforetoggleData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onbeforeunloadData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onblurData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&oncancelData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&oncanplayData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&oncanplaythroughData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onchangeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onclickData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&oncloseData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&oncommandData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&oncontentvisibilityautostatechangeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&oncontextmenuData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&oncopyData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&oncuechangeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&oncutData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ondblclickData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ondevicechangeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ondragData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ondragendData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ondragenterData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ondragleaveData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ondragoverData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ondragstartData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ondropData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ondurationchangeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onemptiedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onendedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onerrorData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onfocusData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onfocusinData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onfocusoutData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onformdataData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onfullscreenchangeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onfullscreenerrorData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ongamepadconnectedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ongamepaddisconnectedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ongesturechangeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ongestureendData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ongesturestartData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ongotpointercaptureData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onhashchangeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&oninputData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&oninvalidData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onkeydownData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onkeypressData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onkeyupData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onlanguagechangeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onloadData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onloadeddataData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onloadedmetadataData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onloadstartData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onlostpointercaptureData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onmessageData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onmessageerrorData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onmousedownData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onmouseenterData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onmouseleaveData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onmousemoveData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onmouseoutData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onmouseoverData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onmouseupData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onmousewheelData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onofflineData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ononlineData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onorientationchangeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onpagehideData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onpagerevealData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onpageshowData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onpageswapData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onpasteData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onpauseData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onplayData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onplayingData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onpointercancelData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onpointerdownData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onpointerenterData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onpointerleaveData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onpointermoveData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onpointeroutData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onpointeroverData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onpointerupData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onpopstateData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onprogressData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onratechangeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onredrawData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onrejectionhandledData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onresetData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onresizeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onscrollData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onscrollendData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onsecuritypolicyviolationData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onseekedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onseekingData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onselectData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onselectionchangeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onselectstartData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onslotchangeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onstalledData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onstorageData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onsubmitData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onsuspendData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ontimeupdateData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ontoggleData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ontouchcancelData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ontouchendData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ontouchforcechangeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ontouchmoveData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ontouchstartData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ontransitioncancelData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ontransitionendData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ontransitionrunData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ontransitionstartData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onuncapturederrorData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onunhandledrejectionData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onunloadData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onvolumechangeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onwaitingData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onwebkitanimationendData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onwebkitanimationiterationData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onwebkitanimationstartData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onwebkitbeginfullscreenData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onwebkitcurrentplaybacktargetiswirelesschangedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onwebkitendfullscreenData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onwebkitfullscreenchangeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onwebkitfullscreenerrorData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onwebkitkeyaddedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onwebkitkeyerrorData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onwebkitkeymessageData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onwebkitmouseforcechangedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onwebkitmouseforcedownData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onwebkitmouseforceupData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onwebkitmouseforcewillbeginData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onwebkitneedkeyData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onwebkitplaybacktargetavailabilitychangedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onwebkitpresentationmodechangedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onwebkittransitionendData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&onwheelData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&openData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&optgroupData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&optimumData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&optionData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&outputData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&pData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&paramData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&partData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&patternData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&pictureData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&pingData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&placeholderData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&plaintextData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&playcountData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&playsinlineData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&popoverData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&popovertargetData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&popovertargetactionData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&posterData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&preData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&preloadData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&progressData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&qData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&rbData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&readonlyData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&referrerpolicyData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&relData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&requiredData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&resultsData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&revData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&reversedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&roleData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&rowsData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&rowspanData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&rpData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&rtData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&rtcData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&rubyData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&rulesData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&sData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&sampData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&sandboxData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&saveData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&schemeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&scopeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&scriptData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&scrollamountData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&scrolldelayData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&scrollingData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&searchData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&sectionData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&selectData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&selectedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&shadowrootclonableData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&shadowrootcustomelementregistryData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&shadowrootdelegatesfocusData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&shadowrootmodeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&shadowrootreferencetargetData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&shadowrootserializableData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&shapeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&sizeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&sizesData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&slotData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&smallData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&sourceData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&spanData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&spellcheckData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&srcData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&srcdocData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&srclangData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&srcsetData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&stagemodeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&standbyData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&startData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&stepData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&strikeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&strongData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&styleData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&subData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&subtitleData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&summaryData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&supData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&switchData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&tabindexData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&tableData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&targetData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&tbodyData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&tdData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&templateData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&textData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&textareaData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&tfootData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&thData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&theadData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&timeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&titleData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&topmarginData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&trData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&trackData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&translateData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&truespeedData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ttData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&typeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&uData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&uiactionsData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&ulData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&usemapData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&useragentpartData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&valignData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&valueData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&valuetypeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&varData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&versionData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&videoData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&vlinkData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&vspaceData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&wbrData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&webkit_playsinlineData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&webkitairplayData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&webkitallowfullscreenData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&webkitattachmentbloburlData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&webkitattachmentidData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&webkitattachmentpathData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&webkitdirectoryData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&webkitdropzoneData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&webkitwirelessvideoplaybackdisabledData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&widthData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&wrapData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&writingsuggestionsData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&x_apple_data_detectorsData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&x_apple_data_detectors_resultData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&x_apple_data_detectors_typeData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&x_apple_pdf_annotationData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&x_itunes_inherit_uri_query_componentData)->assertHashIsCorrect();
    reinterpret_cast<const StringImpl*>(&xmpData)->assertHashIsCorrect();
#endif // NDEBUG


    struct TagsTableEntry {
        LazyNeverDestroyed<const QualifiedName>* targetAddress;
        const StaticStringImpl& name;
        NodeName nodeName;
    };

    static const TagsTableEntry tagsTable[] = {
        { (LazyNeverDestroyed<const QualifiedName>*)&aTag, *(&aData), NodeName::HTML_a },
        { (LazyNeverDestroyed<const QualifiedName>*)&abbrTag, *(&abbrData), NodeName::HTML_abbr },
        { (LazyNeverDestroyed<const QualifiedName>*)&acronymTag, *(&acronymData), NodeName::HTML_acronym },
        { (LazyNeverDestroyed<const QualifiedName>*)&addressTag, *(&addressData), NodeName::HTML_address },
        { (LazyNeverDestroyed<const QualifiedName>*)&annotation_xmlTag, *(&annotation_xmlData), NodeName::HTML_annotation_xml },
        { (LazyNeverDestroyed<const QualifiedName>*)&appletTag, *(&appletData), NodeName::HTML_applet },
        { (LazyNeverDestroyed<const QualifiedName>*)&areaTag, *(&areaData), NodeName::HTML_area },
        { (LazyNeverDestroyed<const QualifiedName>*)&articleTag, *(&articleData), NodeName::HTML_article },
        { (LazyNeverDestroyed<const QualifiedName>*)&asideTag, *(&asideData), NodeName::HTML_aside },
        { (LazyNeverDestroyed<const QualifiedName>*)&attachmentTag, *(&attachmentData), NodeName::HTML_attachment },
        { (LazyNeverDestroyed<const QualifiedName>*)&audioTag, *(&audioData), NodeName::HTML_audio },
        { (LazyNeverDestroyed<const QualifiedName>*)&bTag, *(&bData), NodeName::HTML_b },
        { (LazyNeverDestroyed<const QualifiedName>*)&baseTag, *(&baseData), NodeName::HTML_base },
        { (LazyNeverDestroyed<const QualifiedName>*)&basefontTag, *(&basefontData), NodeName::HTML_basefont },
        { (LazyNeverDestroyed<const QualifiedName>*)&bdiTag, *(&bdiData), NodeName::HTML_bdi },
        { (LazyNeverDestroyed<const QualifiedName>*)&bdoTag, *(&bdoData), NodeName::HTML_bdo },
        { (LazyNeverDestroyed<const QualifiedName>*)&bgsoundTag, *(&bgsoundData), NodeName::HTML_bgsound },
        { (LazyNeverDestroyed<const QualifiedName>*)&bigTag, *(&bigData), NodeName::HTML_big },
        { (LazyNeverDestroyed<const QualifiedName>*)&blockquoteTag, *(&blockquoteData), NodeName::HTML_blockquote },
        { (LazyNeverDestroyed<const QualifiedName>*)&bodyTag, *(&bodyData), NodeName::HTML_body },
        { (LazyNeverDestroyed<const QualifiedName>*)&brTag, *(&brData), NodeName::HTML_br },
        { (LazyNeverDestroyed<const QualifiedName>*)&buttonTag, *(&buttonData), NodeName::HTML_button },
        { (LazyNeverDestroyed<const QualifiedName>*)&canvasTag, *(&canvasData), NodeName::HTML_canvas },
        { (LazyNeverDestroyed<const QualifiedName>*)&captionTag, *(&captionData), NodeName::HTML_caption },
        { (LazyNeverDestroyed<const QualifiedName>*)&centerTag, *(&centerData), NodeName::HTML_center },
        { (LazyNeverDestroyed<const QualifiedName>*)&citeTag, *(&citeData), NodeName::HTML_cite },
        { (LazyNeverDestroyed<const QualifiedName>*)&codeTag, *(&codeData), NodeName::HTML_code },
        { (LazyNeverDestroyed<const QualifiedName>*)&colTag, *(&colData), NodeName::HTML_col },
        { (LazyNeverDestroyed<const QualifiedName>*)&colgroupTag, *(&colgroupData), NodeName::HTML_colgroup },
        { (LazyNeverDestroyed<const QualifiedName>*)&color_profileTag, *(&color_profileData), NodeName::HTML_color_profile },
        { (LazyNeverDestroyed<const QualifiedName>*)&dataTag, *(&dataData), NodeName::HTML_data },
        { (LazyNeverDestroyed<const QualifiedName>*)&datalistTag, *(&datalistData), NodeName::HTML_datalist },
        { (LazyNeverDestroyed<const QualifiedName>*)&ddTag, *(&ddData), NodeName::HTML_dd },
        { (LazyNeverDestroyed<const QualifiedName>*)&delTag, *(&delData), NodeName::HTML_del },
        { (LazyNeverDestroyed<const QualifiedName>*)&detailsTag, *(&detailsData), NodeName::HTML_details },
        { (LazyNeverDestroyed<const QualifiedName>*)&dfnTag, *(&dfnData), NodeName::HTML_dfn },
        { (LazyNeverDestroyed<const QualifiedName>*)&dialogTag, *(&dialogData), NodeName::HTML_dialog },
        { (LazyNeverDestroyed<const QualifiedName>*)&dirTag, *(&dirData), NodeName::HTML_dir },
        { (LazyNeverDestroyed<const QualifiedName>*)&divTag, *(&divData), NodeName::HTML_div },
        { (LazyNeverDestroyed<const QualifiedName>*)&dlTag, *(&dlData), NodeName::HTML_dl },
        { (LazyNeverDestroyed<const QualifiedName>*)&dtTag, *(&dtData), NodeName::HTML_dt },
        { (LazyNeverDestroyed<const QualifiedName>*)&emTag, *(&emData), NodeName::HTML_em },
        { (LazyNeverDestroyed<const QualifiedName>*)&embedTag, *(&embedData), NodeName::HTML_embed },
        { (LazyNeverDestroyed<const QualifiedName>*)&fieldsetTag, *(&fieldsetData), NodeName::HTML_fieldset },
        { (LazyNeverDestroyed<const QualifiedName>*)&figcaptionTag, *(&figcaptionData), NodeName::HTML_figcaption },
        { (LazyNeverDestroyed<const QualifiedName>*)&figureTag, *(&figureData), NodeName::HTML_figure },
        { (LazyNeverDestroyed<const QualifiedName>*)&fontTag, *(&fontData), NodeName::HTML_font },
        { (LazyNeverDestroyed<const QualifiedName>*)&font_faceTag, *(&font_faceData), NodeName::HTML_font_face },
        { (LazyNeverDestroyed<const QualifiedName>*)&font_face_formatTag, *(&font_face_formatData), NodeName::HTML_font_face_format },
        { (LazyNeverDestroyed<const QualifiedName>*)&font_face_nameTag, *(&font_face_nameData), NodeName::HTML_font_face_name },
        { (LazyNeverDestroyed<const QualifiedName>*)&font_face_srcTag, *(&font_face_srcData), NodeName::HTML_font_face_src },
        { (LazyNeverDestroyed<const QualifiedName>*)&font_face_uriTag, *(&font_face_uriData), NodeName::HTML_font_face_uri },
        { (LazyNeverDestroyed<const QualifiedName>*)&footerTag, *(&footerData), NodeName::HTML_footer },
        { (LazyNeverDestroyed<const QualifiedName>*)&formTag, *(&formData), NodeName::HTML_form },
        { (LazyNeverDestroyed<const QualifiedName>*)&frameTag, *(&frameData), NodeName::HTML_frame },
        { (LazyNeverDestroyed<const QualifiedName>*)&framesetTag, *(&framesetData), NodeName::HTML_frameset },
        { (LazyNeverDestroyed<const QualifiedName>*)&h1Tag, *(&h1Data), NodeName::HTML_h1 },
        { (LazyNeverDestroyed<const QualifiedName>*)&h2Tag, *(&h2Data), NodeName::HTML_h2 },
        { (LazyNeverDestroyed<const QualifiedName>*)&h3Tag, *(&h3Data), NodeName::HTML_h3 },
        { (LazyNeverDestroyed<const QualifiedName>*)&h4Tag, *(&h4Data), NodeName::HTML_h4 },
        { (LazyNeverDestroyed<const QualifiedName>*)&h5Tag, *(&h5Data), NodeName::HTML_h5 },
        { (LazyNeverDestroyed<const QualifiedName>*)&h6Tag, *(&h6Data), NodeName::HTML_h6 },
        { (LazyNeverDestroyed<const QualifiedName>*)&headTag, *(&headData), NodeName::HTML_head },
        { (LazyNeverDestroyed<const QualifiedName>*)&headerTag, *(&headerData), NodeName::HTML_header },
        { (LazyNeverDestroyed<const QualifiedName>*)&hgroupTag, *(&hgroupData), NodeName::HTML_hgroup },
        { (LazyNeverDestroyed<const QualifiedName>*)&hrTag, *(&hrData), NodeName::HTML_hr },
        { (LazyNeverDestroyed<const QualifiedName>*)&htmlTag, *(&htmlData), NodeName::HTML_html },
        { (LazyNeverDestroyed<const QualifiedName>*)&iTag, *(&iData), NodeName::HTML_i },
        { (LazyNeverDestroyed<const QualifiedName>*)&iframeTag, *(&iframeData), NodeName::HTML_iframe },
        { (LazyNeverDestroyed<const QualifiedName>*)&imageTag, *(&imageData), NodeName::HTML_image },
        { (LazyNeverDestroyed<const QualifiedName>*)&imgTag, *(&imgData), NodeName::HTML_img },
        { (LazyNeverDestroyed<const QualifiedName>*)&inputTag, *(&inputData), NodeName::HTML_input },
        { (LazyNeverDestroyed<const QualifiedName>*)&insTag, *(&insData), NodeName::HTML_ins },
        { (LazyNeverDestroyed<const QualifiedName>*)&kbdTag, *(&kbdData), NodeName::HTML_kbd },
        { (LazyNeverDestroyed<const QualifiedName>*)&keygenTag, *(&keygenData), NodeName::HTML_keygen },
        { (LazyNeverDestroyed<const QualifiedName>*)&labelTag, *(&labelData), NodeName::HTML_label },
        { (LazyNeverDestroyed<const QualifiedName>*)&legendTag, *(&legendData), NodeName::HTML_legend },
        { (LazyNeverDestroyed<const QualifiedName>*)&liTag, *(&liData), NodeName::HTML_li },
        { (LazyNeverDestroyed<const QualifiedName>*)&linkTag, *(&linkData), NodeName::HTML_link },
        { (LazyNeverDestroyed<const QualifiedName>*)&listingTag, *(&listingData), NodeName::HTML_listing },
        { (LazyNeverDestroyed<const QualifiedName>*)&mainTag, *(&mainData), NodeName::HTML_main },
        { (LazyNeverDestroyed<const QualifiedName>*)&mapTag, *(&mapData), NodeName::HTML_map },
        { (LazyNeverDestroyed<const QualifiedName>*)&markTag, *(&markData), NodeName::HTML_mark },
        { (LazyNeverDestroyed<const QualifiedName>*)&marqueeTag, *(&marqueeData), NodeName::HTML_marquee },
        { (LazyNeverDestroyed<const QualifiedName>*)&menuTag, *(&menuData), NodeName::HTML_menu },
        { (LazyNeverDestroyed<const QualifiedName>*)&metaTag, *(&metaData), NodeName::HTML_meta },
        { (LazyNeverDestroyed<const QualifiedName>*)&meterTag, *(&meterData), NodeName::HTML_meter },
        { (LazyNeverDestroyed<const QualifiedName>*)&missing_glyphTag, *(&missing_glyphData), NodeName::HTML_missing_glyph },
        { (LazyNeverDestroyed<const QualifiedName>*)&modelTag, *(&modelData), NodeName::HTML_model },
        { (LazyNeverDestroyed<const QualifiedName>*)&navTag, *(&navData), NodeName::HTML_nav },
        { (LazyNeverDestroyed<const QualifiedName>*)&nobrTag, *(&nobrData), NodeName::HTML_nobr },
        { (LazyNeverDestroyed<const QualifiedName>*)&noembedTag, *(&noembedData), NodeName::HTML_noembed },
        { (LazyNeverDestroyed<const QualifiedName>*)&noframesTag, *(&noframesData), NodeName::HTML_noframes },
        { (LazyNeverDestroyed<const QualifiedName>*)&noscriptTag, *(&noscriptData), NodeName::HTML_noscript },
        { (LazyNeverDestroyed<const QualifiedName>*)&objectTag, *(&objectData), NodeName::HTML_object },
        { (LazyNeverDestroyed<const QualifiedName>*)&olTag, *(&olData), NodeName::HTML_ol },
        { (LazyNeverDestroyed<const QualifiedName>*)&optgroupTag, *(&optgroupData), NodeName::HTML_optgroup },
        { (LazyNeverDestroyed<const QualifiedName>*)&optionTag, *(&optionData), NodeName::HTML_option },
        { (LazyNeverDestroyed<const QualifiedName>*)&outputTag, *(&outputData), NodeName::HTML_output },
        { (LazyNeverDestroyed<const QualifiedName>*)&pTag, *(&pData), NodeName::HTML_p },
        { (LazyNeverDestroyed<const QualifiedName>*)&paramTag, *(&paramData), NodeName::HTML_param },
        { (LazyNeverDestroyed<const QualifiedName>*)&pictureTag, *(&pictureData), NodeName::HTML_picture },
        { (LazyNeverDestroyed<const QualifiedName>*)&plaintextTag, *(&plaintextData), NodeName::HTML_plaintext },
        { (LazyNeverDestroyed<const QualifiedName>*)&preTag, *(&preData), NodeName::HTML_pre },
        { (LazyNeverDestroyed<const QualifiedName>*)&progressTag, *(&progressData), NodeName::HTML_progress },
        { (LazyNeverDestroyed<const QualifiedName>*)&qTag, *(&qData), NodeName::HTML_q },
        { (LazyNeverDestroyed<const QualifiedName>*)&rbTag, *(&rbData), NodeName::HTML_rb },
        { (LazyNeverDestroyed<const QualifiedName>*)&rpTag, *(&rpData), NodeName::HTML_rp },
        { (LazyNeverDestroyed<const QualifiedName>*)&rtTag, *(&rtData), NodeName::HTML_rt },
        { (LazyNeverDestroyed<const QualifiedName>*)&rtcTag, *(&rtcData), NodeName::HTML_rtc },
        { (LazyNeverDestroyed<const QualifiedName>*)&rubyTag, *(&rubyData), NodeName::HTML_ruby },
        { (LazyNeverDestroyed<const QualifiedName>*)&sTag, *(&sData), NodeName::HTML_s },
        { (LazyNeverDestroyed<const QualifiedName>*)&sampTag, *(&sampData), NodeName::HTML_samp },
        { (LazyNeverDestroyed<const QualifiedName>*)&scriptTag, *(&scriptData), NodeName::HTML_script },
        { (LazyNeverDestroyed<const QualifiedName>*)&searchTag, *(&searchData), NodeName::HTML_search },
        { (LazyNeverDestroyed<const QualifiedName>*)&sectionTag, *(&sectionData), NodeName::HTML_section },
        { (LazyNeverDestroyed<const QualifiedName>*)&selectTag, *(&selectData), NodeName::HTML_select },
        { (LazyNeverDestroyed<const QualifiedName>*)&slotTag, *(&slotData), NodeName::HTML_slot },
        { (LazyNeverDestroyed<const QualifiedName>*)&smallTag, *(&smallData), NodeName::HTML_small },
        { (LazyNeverDestroyed<const QualifiedName>*)&sourceTag, *(&sourceData), NodeName::HTML_source },
        { (LazyNeverDestroyed<const QualifiedName>*)&spanTag, *(&spanData), NodeName::HTML_span },
        { (LazyNeverDestroyed<const QualifiedName>*)&strikeTag, *(&strikeData), NodeName::HTML_strike },
        { (LazyNeverDestroyed<const QualifiedName>*)&strongTag, *(&strongData), NodeName::HTML_strong },
        { (LazyNeverDestroyed<const QualifiedName>*)&styleTag, *(&styleData), NodeName::HTML_style },
        { (LazyNeverDestroyed<const QualifiedName>*)&subTag, *(&subData), NodeName::HTML_sub },
        { (LazyNeverDestroyed<const QualifiedName>*)&summaryTag, *(&summaryData), NodeName::HTML_summary },
        { (LazyNeverDestroyed<const QualifiedName>*)&supTag, *(&supData), NodeName::HTML_sup },
        { (LazyNeverDestroyed<const QualifiedName>*)&tableTag, *(&tableData), NodeName::HTML_table },
        { (LazyNeverDestroyed<const QualifiedName>*)&tbodyTag, *(&tbodyData), NodeName::HTML_tbody },
        { (LazyNeverDestroyed<const QualifiedName>*)&tdTag, *(&tdData), NodeName::HTML_td },
        { (LazyNeverDestroyed<const QualifiedName>*)&templateTag, *(&templateData), NodeName::HTML_template },
        { (LazyNeverDestroyed<const QualifiedName>*)&textareaTag, *(&textareaData), NodeName::HTML_textarea },
        { (LazyNeverDestroyed<const QualifiedName>*)&tfootTag, *(&tfootData), NodeName::HTML_tfoot },
        { (LazyNeverDestroyed<const QualifiedName>*)&thTag, *(&thData), NodeName::HTML_th },
        { (LazyNeverDestroyed<const QualifiedName>*)&theadTag, *(&theadData), NodeName::HTML_thead },
        { (LazyNeverDestroyed<const QualifiedName>*)&timeTag, *(&timeData), NodeName::HTML_time },
        { (LazyNeverDestroyed<const QualifiedName>*)&titleTag, *(&titleData), NodeName::HTML_title },
        { (LazyNeverDestroyed<const QualifiedName>*)&trTag, *(&trData), NodeName::HTML_tr },
        { (LazyNeverDestroyed<const QualifiedName>*)&trackTag, *(&trackData), NodeName::HTML_track },
        { (LazyNeverDestroyed<const QualifiedName>*)&ttTag, *(&ttData), NodeName::HTML_tt },
        { (LazyNeverDestroyed<const QualifiedName>*)&uTag, *(&uData), NodeName::HTML_u },
        { (LazyNeverDestroyed<const QualifiedName>*)&ulTag, *(&ulData), NodeName::HTML_ul },
        { (LazyNeverDestroyed<const QualifiedName>*)&varTag, *(&varData), NodeName::HTML_var },
        { (LazyNeverDestroyed<const QualifiedName>*)&videoTag, *(&videoData), NodeName::HTML_video },
        { (LazyNeverDestroyed<const QualifiedName>*)&wbrTag, *(&wbrData), NodeName::HTML_wbr },
        { (LazyNeverDestroyed<const QualifiedName>*)&xmpTag, *(&xmpData), NodeName::HTML_xmp },
    };

    for (auto& entry : tagsTable)
        entry.targetAddress->construct(nullAtom(), AtomString(&entry.name), xhtmlNS, Namespace::HTML, entry.nodeName);

    struct AttributesTableEntry {
        LazyNeverDestroyed<const QualifiedName>* targetAddress;
        const StaticStringImpl& name;
        NodeName nodeName;
    };

    static const AttributesTableEntry attributesTable[] = {
        { &abbrAttr, *(&abbrData), NodeName::abbrAttr },
        { &acceptAttr, *(&acceptData), NodeName::acceptAttr },
        { &accept_charsetAttr, *(&accept_charsetData), NodeName::accept_charsetAttr },
        { &accesskeyAttr, *(&accesskeyData), NodeName::accesskeyAttr },
        { &actionAttr, *(&actionData), NodeName::actionAttr },
        { &alignAttr, *(&alignData), NodeName::alignAttr },
        { &alinkAttr, *(&alinkData), NodeName::alinkAttr },
        { &allowAttr, *(&allowData), NodeName::allowAttr },
        { &allowfullscreenAttr, *(&allowfullscreenData), NodeName::allowfullscreenAttr },
        { &alphaAttr, *(&alphaData), NodeName::alphaAttr },
        { &altAttr, *(&altData), NodeName::altAttr },
        { &archiveAttr, *(&archiveData), NodeName::archiveAttr },
        { &aria_activedescendantAttr, *(&aria_activedescendantData), NodeName::aria_activedescendantAttr },
        { &aria_atomicAttr, *(&aria_atomicData), NodeName::aria_atomicAttr },
        { &aria_autocompleteAttr, *(&aria_autocompleteData), NodeName::aria_autocompleteAttr },
        { &aria_braillelabelAttr, *(&aria_braillelabelData), NodeName::aria_braillelabelAttr },
        { &aria_brailleroledescriptionAttr, *(&aria_brailleroledescriptionData), NodeName::aria_brailleroledescriptionAttr },
        { &aria_busyAttr, *(&aria_busyData), NodeName::aria_busyAttr },
        { &aria_checkedAttr, *(&aria_checkedData), NodeName::aria_checkedAttr },
        { &aria_colcountAttr, *(&aria_colcountData), NodeName::aria_colcountAttr },
        { &aria_colindexAttr, *(&aria_colindexData), NodeName::aria_colindexAttr },
        { &aria_colspanAttr, *(&aria_colspanData), NodeName::aria_colspanAttr },
        { &aria_controlsAttr, *(&aria_controlsData), NodeName::aria_controlsAttr },
        { &aria_currentAttr, *(&aria_currentData), NodeName::aria_currentAttr },
        { &aria_describedbyAttr, *(&aria_describedbyData), NodeName::aria_describedbyAttr },
        { &aria_descriptionAttr, *(&aria_descriptionData), NodeName::aria_descriptionAttr },
        { &aria_detailsAttr, *(&aria_detailsData), NodeName::aria_detailsAttr },
        { &aria_disabledAttr, *(&aria_disabledData), NodeName::aria_disabledAttr },
        { &aria_dropeffectAttr, *(&aria_dropeffectData), NodeName::aria_dropeffectAttr },
        { &aria_errormessageAttr, *(&aria_errormessageData), NodeName::aria_errormessageAttr },
        { &aria_expandedAttr, *(&aria_expandedData), NodeName::aria_expandedAttr },
        { &aria_flowtoAttr, *(&aria_flowtoData), NodeName::aria_flowtoAttr },
        { &aria_grabbedAttr, *(&aria_grabbedData), NodeName::aria_grabbedAttr },
        { &aria_haspopupAttr, *(&aria_haspopupData), NodeName::aria_haspopupAttr },
        { &aria_helpAttr, *(&aria_helpData), NodeName::aria_helpAttr },
        { &aria_hiddenAttr, *(&aria_hiddenData), NodeName::aria_hiddenAttr },
        { &aria_invalidAttr, *(&aria_invalidData), NodeName::aria_invalidAttr },
        { &aria_keyshortcutsAttr, *(&aria_keyshortcutsData), NodeName::aria_keyshortcutsAttr },
        { &aria_labelAttr, *(&aria_labelData), NodeName::aria_labelAttr },
        { &aria_labeledbyAttr, *(&aria_labeledbyData), NodeName::aria_labeledbyAttr },
        { &aria_labelledbyAttr, *(&aria_labelledbyData), NodeName::aria_labelledbyAttr },
        { &aria_levelAttr, *(&aria_levelData), NodeName::aria_levelAttr },
        { &aria_liveAttr, *(&aria_liveData), NodeName::aria_liveAttr },
        { &aria_modalAttr, *(&aria_modalData), NodeName::aria_modalAttr },
        { &aria_multilineAttr, *(&aria_multilineData), NodeName::aria_multilineAttr },
        { &aria_multiselectableAttr, *(&aria_multiselectableData), NodeName::aria_multiselectableAttr },
        { &aria_orientationAttr, *(&aria_orientationData), NodeName::aria_orientationAttr },
        { &aria_ownsAttr, *(&aria_ownsData), NodeName::aria_ownsAttr },
        { &aria_placeholderAttr, *(&aria_placeholderData), NodeName::aria_placeholderAttr },
        { &aria_posinsetAttr, *(&aria_posinsetData), NodeName::aria_posinsetAttr },
        { &aria_pressedAttr, *(&aria_pressedData), NodeName::aria_pressedAttr },
        { &aria_readonlyAttr, *(&aria_readonlyData), NodeName::aria_readonlyAttr },
        { &aria_relevantAttr, *(&aria_relevantData), NodeName::aria_relevantAttr },
        { &aria_requiredAttr, *(&aria_requiredData), NodeName::aria_requiredAttr },
        { &aria_roledescriptionAttr, *(&aria_roledescriptionData), NodeName::aria_roledescriptionAttr },
        { &aria_rowcountAttr, *(&aria_rowcountData), NodeName::aria_rowcountAttr },
        { &aria_rowindexAttr, *(&aria_rowindexData), NodeName::aria_rowindexAttr },
        { &aria_rowspanAttr, *(&aria_rowspanData), NodeName::aria_rowspanAttr },
        { &aria_selectedAttr, *(&aria_selectedData), NodeName::aria_selectedAttr },
        { &aria_setsizeAttr, *(&aria_setsizeData), NodeName::aria_setsizeAttr },
        { &aria_sortAttr, *(&aria_sortData), NodeName::aria_sortAttr },
        { &aria_valuemaxAttr, *(&aria_valuemaxData), NodeName::aria_valuemaxAttr },
        { &aria_valueminAttr, *(&aria_valueminData), NodeName::aria_valueminAttr },
        { &aria_valuenowAttr, *(&aria_valuenowData), NodeName::aria_valuenowAttr },
        { &aria_valuetextAttr, *(&aria_valuetextData), NodeName::aria_valuetextAttr },
        { &asAttr, *(&asData), NodeName::asAttr },
        { &asyncAttr, *(&asyncData), NodeName::asyncAttr },
        { &attributiondestinationAttr, *(&attributiondestinationData), NodeName::attributiondestinationAttr },
        { &attributionsourceidAttr, *(&attributionsourceidData), NodeName::attributionsourceidAttr },
        { &attributionsourcenonceAttr, *(&attributionsourcenonceData), NodeName::attributionsourcenonceAttr },
        { &autocapitalizeAttr, *(&autocapitalizeData), NodeName::autocapitalizeAttr },
        { &autocompleteAttr, *(&autocompleteData), NodeName::autocompleteAttr },
        { &autocorrectAttr, *(&autocorrectData), NodeName::autocorrectAttr },
        { &autofocusAttr, *(&autofocusData), NodeName::autofocusAttr },
        { &autopictureinpictureAttr, *(&autopictureinpictureData), NodeName::autopictureinpictureAttr },
        { &autoplayAttr, *(&autoplayData), NodeName::autoplayAttr },
        { &autosaveAttr, *(&autosaveData), NodeName::autosaveAttr },
        { &axisAttr, *(&axisData), NodeName::axisAttr },
        { &backgroundAttr, *(&backgroundData), NodeName::backgroundAttr },
        { &behaviorAttr, *(&behaviorData), NodeName::behaviorAttr },
        { &bgcolorAttr, *(&bgcolorData), NodeName::bgcolorAttr },
        { &blockingAttr, *(&blockingData), NodeName::blockingAttr },
        { &borderAttr, *(&borderData), NodeName::borderAttr },
        { &bordercolorAttr, *(&bordercolorData), NodeName::bordercolorAttr },
        { &captureAttr, *(&captureData), NodeName::captureAttr },
        { &cellborderAttr, *(&cellborderData), NodeName::cellborderAttr },
        { &cellpaddingAttr, *(&cellpaddingData), NodeName::cellpaddingAttr },
        { &cellspacingAttr, *(&cellspacingData), NodeName::cellspacingAttr },
        { &challengeAttr, *(&challengeData), NodeName::challengeAttr },
        { &charAttr, *(&charData), NodeName::charAttr },
        { &charoffAttr, *(&charoffData), NodeName::charoffAttr },
        { &charsetAttr, *(&charsetData), NodeName::charsetAttr },
        { &checkedAttr, *(&checkedData), NodeName::checkedAttr },
        { &citeAttr, *(&citeData), NodeName::citeAttr },
        { &classAttr, *(&classData), NodeName::classAttr },
        { &classidAttr, *(&classidData), NodeName::classidAttr },
        { &clearAttr, *(&clearData), NodeName::clearAttr },
        { &codeAttr, *(&codeData), NodeName::codeAttr },
        { &codebaseAttr, *(&codebaseData), NodeName::codebaseAttr },
        { &codetypeAttr, *(&codetypeData), NodeName::codetypeAttr },
        { &colorAttr, *(&colorData), NodeName::colorAttr },
        { &colorspaceAttr, *(&colorspaceData), NodeName::colorspaceAttr },
        { &colsAttr, *(&colsData), NodeName::colsAttr },
        { &colspanAttr, *(&colspanData), NodeName::colspanAttr },
        { &commandAttr, *(&commandData), NodeName::commandAttr },
        { &commandforAttr, *(&commandforData), NodeName::commandforAttr },
        { &compactAttr, *(&compactData), NodeName::compactAttr },
        { &contentAttr, *(&contentData), NodeName::contentAttr },
        { &contenteditableAttr, *(&contenteditableData), NodeName::contenteditableAttr },
        { &controlsAttr, *(&controlsData), NodeName::controlsAttr },
        { &coordsAttr, *(&coordsData), NodeName::coordsAttr },
        { &crossoriginAttr, *(&crossoriginData), NodeName::crossoriginAttr },
        { &cueAttr, *(&cueData), NodeName::cueAttr },
        { &cuebackgroundAttr, *(&cuebackgroundData), NodeName::cuebackgroundAttr },
        { &dataAttr, *(&dataData), NodeName::dataAttr },
        { &datetimeAttr, *(&datetimeData), NodeName::datetimeAttr },
        { &declareAttr, *(&declareData), NodeName::declareAttr },
        { &decodingAttr, *(&decodingData), NodeName::decodingAttr },
        { &defaultAttr, *(&defaultData), NodeName::defaultAttr },
        { &deferAttr, *(&deferData), NodeName::deferAttr },
        { &dirAttr, *(&dirData), NodeName::dirAttr },
        { &directionAttr, *(&directionData), NodeName::directionAttr },
        { &dirnameAttr, *(&dirnameData), NodeName::dirnameAttr },
        { &disabledAttr, *(&disabledData), NodeName::disabledAttr },
        { &disablepictureinpictureAttr, *(&disablepictureinpictureData), NodeName::disablepictureinpictureAttr },
        { &disableremoteplaybackAttr, *(&disableremoteplaybackData), NodeName::disableremoteplaybackAttr },
        { &downloadAttr, *(&downloadData), NodeName::downloadAttr },
        { &draggableAttr, *(&draggableData), NodeName::draggableAttr },
        { &dropzoneAttr, *(&dropzoneData), NodeName::dropzoneAttr },
        { &enctypeAttr, *(&enctypeData), NodeName::enctypeAttr },
        { &endAttr, *(&endData), NodeName::endAttr },
        { &enterkeyhintAttr, *(&enterkeyhintData), NodeName::enterkeyhintAttr },
        { &environmentmapAttr, *(&environmentmapData), NodeName::environmentmapAttr },
        { &eventAttr, *(&eventData), NodeName::eventAttr },
        { &expandedAttr, *(&expandedData), NodeName::expandedAttr },
        { &exportpartsAttr, *(&exportpartsData), NodeName::exportpartsAttr },
        { &faceAttr, *(&faceData), NodeName::faceAttr },
        { &fetchpriorityAttr, *(&fetchpriorityData), NodeName::fetchpriorityAttr },
        { &filenameAttr, *(&filenameData), NodeName::filenameAttr },
        { &focusedAttr, *(&focusedData), NodeName::focusedAttr },
        { &forAttr, *(&forData), NodeName::forAttr },
        { &formAttr, *(&formData), NodeName::formAttr },
        { &formactionAttr, *(&formactionData), NodeName::formactionAttr },
        { &formenctypeAttr, *(&formenctypeData), NodeName::formenctypeAttr },
        { &formmethodAttr, *(&formmethodData), NodeName::formmethodAttr },
        { &formnovalidateAttr, *(&formnovalidateData), NodeName::formnovalidateAttr },
        { &formtargetAttr, *(&formtargetData), NodeName::formtargetAttr },
        { &frameAttr, *(&frameData), NodeName::frameAttr },
        { &frameborderAttr, *(&frameborderData), NodeName::frameborderAttr },
        { &headersAttr, *(&headersData), NodeName::headersAttr },
        { &heightAttr, *(&heightData), NodeName::heightAttr },
        { &hiddenAttr, *(&hiddenData), NodeName::hiddenAttr },
        { &highAttr, *(&highData), NodeName::highAttr },
        { &hrefAttr, *(&hrefData), NodeName::hrefAttr },
        { &hreflangAttr, *(&hreflangData), NodeName::hreflangAttr },
        { &hspaceAttr, *(&hspaceData), NodeName::hspaceAttr },
        { &http_equivAttr, *(&http_equivData), NodeName::http_equivAttr },
        { &idAttr, *(&idData), NodeName::idAttr },
        { &imagesizesAttr, *(&imagesizesData), NodeName::imagesizesAttr },
        { &imagesrcsetAttr, *(&imagesrcsetData), NodeName::imagesrcsetAttr },
        { &inertAttr, *(&inertData), NodeName::inertAttr },
        { &inputmodeAttr, *(&inputmodeData), NodeName::inputmodeAttr },
        { &integrityAttr, *(&integrityData), NodeName::integrityAttr },
        { &interactiveAttr, *(&interactiveData), NodeName::interactiveAttr },
        { &isAttr, *(&isData), NodeName::isAttr },
        { &ismapAttr, *(&ismapData), NodeName::ismapAttr },
        { &keytypeAttr, *(&keytypeData), NodeName::keytypeAttr },
        { &kindAttr, *(&kindData), NodeName::kindAttr },
        { &labelAttr, *(&labelData), NodeName::labelAttr },
        { &langAttr, *(&langData), NodeName::langAttr },
        { &languageAttr, *(&languageData), NodeName::languageAttr },
        { &leftmarginAttr, *(&leftmarginData), NodeName::leftmarginAttr },
        { &linkAttr, *(&linkData), NodeName::linkAttr },
        { &listAttr, *(&listData), NodeName::listAttr },
        { &loadingAttr, *(&loadingData), NodeName::loadingAttr },
        { &longdescAttr, *(&longdescData), NodeName::longdescAttr },
        { &loopAttr, *(&loopData), NodeName::loopAttr },
        { &loopendAttr, *(&loopendData), NodeName::loopendAttr },
        { &loopstartAttr, *(&loopstartData), NodeName::loopstartAttr },
        { &lowAttr, *(&lowData), NodeName::lowAttr },
        { &lowsrcAttr, *(&lowsrcData), NodeName::lowsrcAttr },
        { &marginheightAttr, *(&marginheightData), NodeName::marginheightAttr },
        { &marginwidthAttr, *(&marginwidthData), NodeName::marginwidthAttr },
        { &maxAttr, *(&maxData), NodeName::maxAttr },
        { &maxlengthAttr, *(&maxlengthData), NodeName::maxlengthAttr },
        { &mayscriptAttr, *(&mayscriptData), NodeName::mayscriptAttr },
        { &mediaAttr, *(&mediaData), NodeName::mediaAttr },
        { &mediagroupAttr, *(&mediagroupData), NodeName::mediagroupAttr },
        { &methodAttr, *(&methodData), NodeName::methodAttr },
        { &minAttr, *(&minData), NodeName::minAttr },
        { &minlengthAttr, *(&minlengthData), NodeName::minlengthAttr },
        { &multipleAttr, *(&multipleData), NodeName::multipleAttr },
        { &mutedAttr, *(&mutedData), NodeName::mutedAttr },
        { &nameAttr, *(&nameData), NodeName::nameAttr },
        { &nohrefAttr, *(&nohrefData), NodeName::nohrefAttr },
        { &nomoduleAttr, *(&nomoduleData), NodeName::nomoduleAttr },
        { &nonceAttr, *(&nonceData), NodeName::nonceAttr },
        { &noportalAttr, *(&noportalData), NodeName::noportalAttr },
        { &noresizeAttr, *(&noresizeData), NodeName::noresizeAttr },
        { &noshadeAttr, *(&noshadeData), NodeName::noshadeAttr },
        { &novalidateAttr, *(&novalidateData), NodeName::novalidateAttr },
        { &nowrapAttr, *(&nowrapData), NodeName::nowrapAttr },
        { &objectAttr, *(&objectData), NodeName::objectAttr },
        { &onabortAttr, *(&onabortData), NodeName::onabortAttr },
        { &onafterprintAttr, *(&onafterprintData), NodeName::onafterprintAttr },
        { &onanimationcancelAttr, *(&onanimationcancelData), NodeName::onanimationcancelAttr },
        { &onanimationendAttr, *(&onanimationendData), NodeName::onanimationendAttr },
        { &onanimationiterationAttr, *(&onanimationiterationData), NodeName::onanimationiterationAttr },
        { &onanimationstartAttr, *(&onanimationstartData), NodeName::onanimationstartAttr },
        { &onautocompleteAttr, *(&onautocompleteData), NodeName::onautocompleteAttr },
        { &onautocompleteerrorAttr, *(&onautocompleteerrorData), NodeName::onautocompleteerrorAttr },
        { &onauxclickAttr, *(&onauxclickData), NodeName::onauxclickAttr },
        { &onbeforecopyAttr, *(&onbeforecopyData), NodeName::onbeforecopyAttr },
        { &onbeforecutAttr, *(&onbeforecutData), NodeName::onbeforecutAttr },
        { &onbeforeinputAttr, *(&onbeforeinputData), NodeName::onbeforeinputAttr },
        { &onbeforeloadAttr, *(&onbeforeloadData), NodeName::onbeforeloadAttr },
        { &onbeforematchAttr, *(&onbeforematchData), NodeName::onbeforematchAttr },
        { &onbeforepasteAttr, *(&onbeforepasteData), NodeName::onbeforepasteAttr },
        { &onbeforeprintAttr, *(&onbeforeprintData), NodeName::onbeforeprintAttr },
        { &onbeforetoggleAttr, *(&onbeforetoggleData), NodeName::onbeforetoggleAttr },
        { &onbeforeunloadAttr, *(&onbeforeunloadData), NodeName::onbeforeunloadAttr },
        { &onblurAttr, *(&onblurData), NodeName::onblurAttr },
        { &oncancelAttr, *(&oncancelData), NodeName::oncancelAttr },
        { &oncanplayAttr, *(&oncanplayData), NodeName::oncanplayAttr },
        { &oncanplaythroughAttr, *(&oncanplaythroughData), NodeName::oncanplaythroughAttr },
        { &onchangeAttr, *(&onchangeData), NodeName::onchangeAttr },
        { &onclickAttr, *(&onclickData), NodeName::onclickAttr },
        { &oncloseAttr, *(&oncloseData), NodeName::oncloseAttr },
        { &oncommandAttr, *(&oncommandData), NodeName::oncommandAttr },
        { &oncontentvisibilityautostatechangeAttr, *(&oncontentvisibilityautostatechangeData), NodeName::oncontentvisibilityautostatechangeAttr },
        { &oncontextmenuAttr, *(&oncontextmenuData), NodeName::oncontextmenuAttr },
        { &oncopyAttr, *(&oncopyData), NodeName::oncopyAttr },
        { &oncuechangeAttr, *(&oncuechangeData), NodeName::oncuechangeAttr },
        { &oncutAttr, *(&oncutData), NodeName::oncutAttr },
        { &ondblclickAttr, *(&ondblclickData), NodeName::ondblclickAttr },
        { &ondevicechangeAttr, *(&ondevicechangeData), NodeName::ondevicechangeAttr },
        { &ondragAttr, *(&ondragData), NodeName::ondragAttr },
        { &ondragendAttr, *(&ondragendData), NodeName::ondragendAttr },
        { &ondragenterAttr, *(&ondragenterData), NodeName::ondragenterAttr },
        { &ondragleaveAttr, *(&ondragleaveData), NodeName::ondragleaveAttr },
        { &ondragoverAttr, *(&ondragoverData), NodeName::ondragoverAttr },
        { &ondragstartAttr, *(&ondragstartData), NodeName::ondragstartAttr },
        { &ondropAttr, *(&ondropData), NodeName::ondropAttr },
        { &ondurationchangeAttr, *(&ondurationchangeData), NodeName::ondurationchangeAttr },
        { &onemptiedAttr, *(&onemptiedData), NodeName::onemptiedAttr },
        { &onendedAttr, *(&onendedData), NodeName::onendedAttr },
        { &onerrorAttr, *(&onerrorData), NodeName::onerrorAttr },
        { &onfocusAttr, *(&onfocusData), NodeName::onfocusAttr },
        { &onfocusinAttr, *(&onfocusinData), NodeName::onfocusinAttr },
        { &onfocusoutAttr, *(&onfocusoutData), NodeName::onfocusoutAttr },
        { &onformdataAttr, *(&onformdataData), NodeName::onformdataAttr },
        { &onfullscreenchangeAttr, *(&onfullscreenchangeData), NodeName::onfullscreenchangeAttr },
        { &onfullscreenerrorAttr, *(&onfullscreenerrorData), NodeName::onfullscreenerrorAttr },
        { &ongamepadconnectedAttr, *(&ongamepadconnectedData), NodeName::ongamepadconnectedAttr },
        { &ongamepaddisconnectedAttr, *(&ongamepaddisconnectedData), NodeName::ongamepaddisconnectedAttr },
        { &ongesturechangeAttr, *(&ongesturechangeData), NodeName::ongesturechangeAttr },
        { &ongestureendAttr, *(&ongestureendData), NodeName::ongestureendAttr },
        { &ongesturestartAttr, *(&ongesturestartData), NodeName::ongesturestartAttr },
        { &ongotpointercaptureAttr, *(&ongotpointercaptureData), NodeName::ongotpointercaptureAttr },
        { &onhashchangeAttr, *(&onhashchangeData), NodeName::onhashchangeAttr },
        { &oninputAttr, *(&oninputData), NodeName::oninputAttr },
        { &oninvalidAttr, *(&oninvalidData), NodeName::oninvalidAttr },
        { &onkeydownAttr, *(&onkeydownData), NodeName::onkeydownAttr },
        { &onkeypressAttr, *(&onkeypressData), NodeName::onkeypressAttr },
        { &onkeyupAttr, *(&onkeyupData), NodeName::onkeyupAttr },
        { &onlanguagechangeAttr, *(&onlanguagechangeData), NodeName::onlanguagechangeAttr },
        { &onloadAttr, *(&onloadData), NodeName::onloadAttr },
        { &onloadeddataAttr, *(&onloadeddataData), NodeName::onloadeddataAttr },
        { &onloadedmetadataAttr, *(&onloadedmetadataData), NodeName::onloadedmetadataAttr },
        { &onloadstartAttr, *(&onloadstartData), NodeName::onloadstartAttr },
        { &onlostpointercaptureAttr, *(&onlostpointercaptureData), NodeName::onlostpointercaptureAttr },
        { &onmessageAttr, *(&onmessageData), NodeName::onmessageAttr },
        { &onmessageerrorAttr, *(&onmessageerrorData), NodeName::onmessageerrorAttr },
        { &onmousedownAttr, *(&onmousedownData), NodeName::onmousedownAttr },
        { &onmouseenterAttr, *(&onmouseenterData), NodeName::onmouseenterAttr },
        { &onmouseleaveAttr, *(&onmouseleaveData), NodeName::onmouseleaveAttr },
        { &onmousemoveAttr, *(&onmousemoveData), NodeName::onmousemoveAttr },
        { &onmouseoutAttr, *(&onmouseoutData), NodeName::onmouseoutAttr },
        { &onmouseoverAttr, *(&onmouseoverData), NodeName::onmouseoverAttr },
        { &onmouseupAttr, *(&onmouseupData), NodeName::onmouseupAttr },
        { &onmousewheelAttr, *(&onmousewheelData), NodeName::onmousewheelAttr },
        { &onofflineAttr, *(&onofflineData), NodeName::onofflineAttr },
        { &ononlineAttr, *(&ononlineData), NodeName::ononlineAttr },
        { &onorientationchangeAttr, *(&onorientationchangeData), NodeName::onorientationchangeAttr },
        { &onpagehideAttr, *(&onpagehideData), NodeName::onpagehideAttr },
        { &onpagerevealAttr, *(&onpagerevealData), NodeName::onpagerevealAttr },
        { &onpageshowAttr, *(&onpageshowData), NodeName::onpageshowAttr },
        { &onpageswapAttr, *(&onpageswapData), NodeName::onpageswapAttr },
        { &onpasteAttr, *(&onpasteData), NodeName::onpasteAttr },
        { &onpauseAttr, *(&onpauseData), NodeName::onpauseAttr },
        { &onplayAttr, *(&onplayData), NodeName::onplayAttr },
        { &onplayingAttr, *(&onplayingData), NodeName::onplayingAttr },
        { &onpointercancelAttr, *(&onpointercancelData), NodeName::onpointercancelAttr },
        { &onpointerdownAttr, *(&onpointerdownData), NodeName::onpointerdownAttr },
        { &onpointerenterAttr, *(&onpointerenterData), NodeName::onpointerenterAttr },
        { &onpointerleaveAttr, *(&onpointerleaveData), NodeName::onpointerleaveAttr },
        { &onpointermoveAttr, *(&onpointermoveData), NodeName::onpointermoveAttr },
        { &onpointeroutAttr, *(&onpointeroutData), NodeName::onpointeroutAttr },
        { &onpointeroverAttr, *(&onpointeroverData), NodeName::onpointeroverAttr },
        { &onpointerupAttr, *(&onpointerupData), NodeName::onpointerupAttr },
        { &onpopstateAttr, *(&onpopstateData), NodeName::onpopstateAttr },
        { &onprogressAttr, *(&onprogressData), NodeName::onprogressAttr },
        { &onratechangeAttr, *(&onratechangeData), NodeName::onratechangeAttr },
        { &onredrawAttr, *(&onredrawData), NodeName::onredrawAttr },
        { &onrejectionhandledAttr, *(&onrejectionhandledData), NodeName::onrejectionhandledAttr },
        { &onresetAttr, *(&onresetData), NodeName::onresetAttr },
        { &onresizeAttr, *(&onresizeData), NodeName::onresizeAttr },
        { &onscrollAttr, *(&onscrollData), NodeName::onscrollAttr },
        { &onscrollendAttr, *(&onscrollendData), NodeName::onscrollendAttr },
        { &onsecuritypolicyviolationAttr, *(&onsecuritypolicyviolationData), NodeName::onsecuritypolicyviolationAttr },
        { &onseekedAttr, *(&onseekedData), NodeName::onseekedAttr },
        { &onseekingAttr, *(&onseekingData), NodeName::onseekingAttr },
        { &onselectAttr, *(&onselectData), NodeName::onselectAttr },
        { &onselectionchangeAttr, *(&onselectionchangeData), NodeName::onselectionchangeAttr },
        { &onselectstartAttr, *(&onselectstartData), NodeName::onselectstartAttr },
        { &onslotchangeAttr, *(&onslotchangeData), NodeName::onslotchangeAttr },
        { &onstalledAttr, *(&onstalledData), NodeName::onstalledAttr },
        { &onstorageAttr, *(&onstorageData), NodeName::onstorageAttr },
        { &onsubmitAttr, *(&onsubmitData), NodeName::onsubmitAttr },
        { &onsuspendAttr, *(&onsuspendData), NodeName::onsuspendAttr },
        { &ontimeupdateAttr, *(&ontimeupdateData), NodeName::ontimeupdateAttr },
        { &ontoggleAttr, *(&ontoggleData), NodeName::ontoggleAttr },
        { &ontouchcancelAttr, *(&ontouchcancelData), NodeName::ontouchcancelAttr },
        { &ontouchendAttr, *(&ontouchendData), NodeName::ontouchendAttr },
        { &ontouchforcechangeAttr, *(&ontouchforcechangeData), NodeName::ontouchforcechangeAttr },
        { &ontouchmoveAttr, *(&ontouchmoveData), NodeName::ontouchmoveAttr },
        { &ontouchstartAttr, *(&ontouchstartData), NodeName::ontouchstartAttr },
        { &ontransitioncancelAttr, *(&ontransitioncancelData), NodeName::ontransitioncancelAttr },
        { &ontransitionendAttr, *(&ontransitionendData), NodeName::ontransitionendAttr },
        { &ontransitionrunAttr, *(&ontransitionrunData), NodeName::ontransitionrunAttr },
        { &ontransitionstartAttr, *(&ontransitionstartData), NodeName::ontransitionstartAttr },
        { &onuncapturederrorAttr, *(&onuncapturederrorData), NodeName::onuncapturederrorAttr },
        { &onunhandledrejectionAttr, *(&onunhandledrejectionData), NodeName::onunhandledrejectionAttr },
        { &onunloadAttr, *(&onunloadData), NodeName::onunloadAttr },
        { &onvolumechangeAttr, *(&onvolumechangeData), NodeName::onvolumechangeAttr },
        { &onwaitingAttr, *(&onwaitingData), NodeName::onwaitingAttr },
        { &onwebkitanimationendAttr, *(&onwebkitanimationendData), NodeName::onwebkitanimationendAttr },
        { &onwebkitanimationiterationAttr, *(&onwebkitanimationiterationData), NodeName::onwebkitanimationiterationAttr },
        { &onwebkitanimationstartAttr, *(&onwebkitanimationstartData), NodeName::onwebkitanimationstartAttr },
        { &onwebkitbeginfullscreenAttr, *(&onwebkitbeginfullscreenData), NodeName::onwebkitbeginfullscreenAttr },
        { &onwebkitcurrentplaybacktargetiswirelesschangedAttr, *(&onwebkitcurrentplaybacktargetiswirelesschangedData), NodeName::onwebkitcurrentplaybacktargetiswirelesschangedAttr },
        { &onwebkitendfullscreenAttr, *(&onwebkitendfullscreenData), NodeName::onwebkitendfullscreenAttr },
        { &onwebkitfullscreenchangeAttr, *(&onwebkitfullscreenchangeData), NodeName::onwebkitfullscreenchangeAttr },
        { &onwebkitfullscreenerrorAttr, *(&onwebkitfullscreenerrorData), NodeName::onwebkitfullscreenerrorAttr },
        { &onwebkitkeyaddedAttr, *(&onwebkitkeyaddedData), NodeName::onwebkitkeyaddedAttr },
        { &onwebkitkeyerrorAttr, *(&onwebkitkeyerrorData), NodeName::onwebkitkeyerrorAttr },
        { &onwebkitkeymessageAttr, *(&onwebkitkeymessageData), NodeName::onwebkitkeymessageAttr },
        { &onwebkitmouseforcechangedAttr, *(&onwebkitmouseforcechangedData), NodeName::onwebkitmouseforcechangedAttr },
        { &onwebkitmouseforcedownAttr, *(&onwebkitmouseforcedownData), NodeName::onwebkitmouseforcedownAttr },
        { &onwebkitmouseforceupAttr, *(&onwebkitmouseforceupData), NodeName::onwebkitmouseforceupAttr },
        { &onwebkitmouseforcewillbeginAttr, *(&onwebkitmouseforcewillbeginData), NodeName::onwebkitmouseforcewillbeginAttr },
        { &onwebkitneedkeyAttr, *(&onwebkitneedkeyData), NodeName::onwebkitneedkeyAttr },
        { &onwebkitplaybacktargetavailabilitychangedAttr, *(&onwebkitplaybacktargetavailabilitychangedData), NodeName::onwebkitplaybacktargetavailabilitychangedAttr },
        { &onwebkitpresentationmodechangedAttr, *(&onwebkitpresentationmodechangedData), NodeName::onwebkitpresentationmodechangedAttr },
        { &onwebkittransitionendAttr, *(&onwebkittransitionendData), NodeName::onwebkittransitionendAttr },
        { &onwheelAttr, *(&onwheelData), NodeName::onwheelAttr },
        { &openAttr, *(&openData), NodeName::openAttr },
        { &optimumAttr, *(&optimumData), NodeName::optimumAttr },
        { &partAttr, *(&partData), NodeName::partAttr },
        { &patternAttr, *(&patternData), NodeName::patternAttr },
        { &pingAttr, *(&pingData), NodeName::pingAttr },
        { &placeholderAttr, *(&placeholderData), NodeName::placeholderAttr },
        { &playcountAttr, *(&playcountData), NodeName::playcountAttr },
        { &playsinlineAttr, *(&playsinlineData), NodeName::playsinlineAttr },
        { &popoverAttr, *(&popoverData), NodeName::popoverAttr },
        { &popovertargetAttr, *(&popovertargetData), NodeName::popovertargetAttr },
        { &popovertargetactionAttr, *(&popovertargetactionData), NodeName::popovertargetactionAttr },
        { &posterAttr, *(&posterData), NodeName::posterAttr },
        { &preloadAttr, *(&preloadData), NodeName::preloadAttr },
        { &progressAttr, *(&progressData), NodeName::progressAttr },
        { &readonlyAttr, *(&readonlyData), NodeName::readonlyAttr },
        { &referrerpolicyAttr, *(&referrerpolicyData), NodeName::referrerpolicyAttr },
        { &relAttr, *(&relData), NodeName::relAttr },
        { &requiredAttr, *(&requiredData), NodeName::requiredAttr },
        { &resultsAttr, *(&resultsData), NodeName::resultsAttr },
        { &revAttr, *(&revData), NodeName::revAttr },
        { &reversedAttr, *(&reversedData), NodeName::reversedAttr },
        { &roleAttr, *(&roleData), NodeName::roleAttr },
        { &rowsAttr, *(&rowsData), NodeName::rowsAttr },
        { &rowspanAttr, *(&rowspanData), NodeName::rowspanAttr },
        { &rulesAttr, *(&rulesData), NodeName::rulesAttr },
        { &sandboxAttr, *(&sandboxData), NodeName::sandboxAttr },
        { &saveAttr, *(&saveData), NodeName::saveAttr },
        { &schemeAttr, *(&schemeData), NodeName::schemeAttr },
        { &scopeAttr, *(&scopeData), NodeName::scopeAttr },
        { &scrollamountAttr, *(&scrollamountData), NodeName::scrollamountAttr },
        { &scrolldelayAttr, *(&scrolldelayData), NodeName::scrolldelayAttr },
        { &scrollingAttr, *(&scrollingData), NodeName::scrollingAttr },
        { &selectAttr, *(&selectData), NodeName::selectAttr },
        { &selectedAttr, *(&selectedData), NodeName::selectedAttr },
        { &shadowrootclonableAttr, *(&shadowrootclonableData), NodeName::shadowrootclonableAttr },
        { &shadowrootcustomelementregistryAttr, *(&shadowrootcustomelementregistryData), NodeName::shadowrootcustomelementregistryAttr },
        { &shadowrootdelegatesfocusAttr, *(&shadowrootdelegatesfocusData), NodeName::shadowrootdelegatesfocusAttr },
        { &shadowrootmodeAttr, *(&shadowrootmodeData), NodeName::shadowrootmodeAttr },
        { &shadowrootreferencetargetAttr, *(&shadowrootreferencetargetData), NodeName::shadowrootreferencetargetAttr },
        { &shadowrootserializableAttr, *(&shadowrootserializableData), NodeName::shadowrootserializableAttr },
        { &shapeAttr, *(&shapeData), NodeName::shapeAttr },
        { &sizeAttr, *(&sizeData), NodeName::sizeAttr },
        { &sizesAttr, *(&sizesData), NodeName::sizesAttr },
        { &slotAttr, *(&slotData), NodeName::slotAttr },
        { &spanAttr, *(&spanData), NodeName::spanAttr },
        { &spellcheckAttr, *(&spellcheckData), NodeName::spellcheckAttr },
        { &srcAttr, *(&srcData), NodeName::srcAttr },
        { &srcdocAttr, *(&srcdocData), NodeName::srcdocAttr },
        { &srclangAttr, *(&srclangData), NodeName::srclangAttr },
        { &srcsetAttr, *(&srcsetData), NodeName::srcsetAttr },
        { &stagemodeAttr, *(&stagemodeData), NodeName::stagemodeAttr },
        { &standbyAttr, *(&standbyData), NodeName::standbyAttr },
        { &startAttr, *(&startData), NodeName::startAttr },
        { &stepAttr, *(&stepData), NodeName::stepAttr },
        { &styleAttr, *(&styleData), NodeName::styleAttr },
        { &subtitleAttr, *(&subtitleData), NodeName::subtitleAttr },
        { &summaryAttr, *(&summaryData), NodeName::summaryAttr },
        { &switchAttr, *(&switchData), NodeName::switchAttr },
        { &tabindexAttr, *(&tabindexData), NodeName::tabindexAttr },
        { &targetAttr, *(&targetData), NodeName::targetAttr },
        { &textAttr, *(&textData), NodeName::textAttr },
        { &titleAttr, *(&titleData), NodeName::titleAttr },
        { &topmarginAttr, *(&topmarginData), NodeName::topmarginAttr },
        { &translateAttr, *(&translateData), NodeName::translateAttr },
        { &truespeedAttr, *(&truespeedData), NodeName::truespeedAttr },
        { &typeAttr, *(&typeData), NodeName::typeAttr },
        { &uiactionsAttr, *(&uiactionsData), NodeName::uiactionsAttr },
        { &usemapAttr, *(&usemapData), NodeName::usemapAttr },
        { &useragentpartAttr, *(&useragentpartData), NodeName::useragentpartAttr },
        { &valignAttr, *(&valignData), NodeName::valignAttr },
        { &valueAttr, *(&valueData), NodeName::valueAttr },
        { &valuetypeAttr, *(&valuetypeData), NodeName::valuetypeAttr },
        { &versionAttr, *(&versionData), NodeName::versionAttr },
        { &vlinkAttr, *(&vlinkData), NodeName::vlinkAttr },
        { &vspaceAttr, *(&vspaceData), NodeName::vspaceAttr },
        { &webkit_playsinlineAttr, *(&webkit_playsinlineData), NodeName::webkit_playsinlineAttr },
        { &webkitallowfullscreenAttr, *(&webkitallowfullscreenData), NodeName::webkitallowfullscreenAttr },
        { &webkitattachmentbloburlAttr, *(&webkitattachmentbloburlData), NodeName::webkitattachmentbloburlAttr },
        { &webkitattachmentidAttr, *(&webkitattachmentidData), NodeName::webkitattachmentidAttr },
        { &webkitattachmentpathAttr, *(&webkitattachmentpathData), NodeName::webkitattachmentpathAttr },
        { &webkitdirectoryAttr, *(&webkitdirectoryData), NodeName::webkitdirectoryAttr },
        { &webkitdropzoneAttr, *(&webkitdropzoneData), NodeName::webkitdropzoneAttr },
        { &widthAttr, *(&widthData), NodeName::widthAttr },
        { &wrapAttr, *(&wrapData), NodeName::wrapAttr },
        { &writingsuggestionsAttr, *(&writingsuggestionsData), NodeName::writingsuggestionsAttr },
        { &x_apple_data_detectorsAttr, *(&x_apple_data_detectorsData), NodeName::x_apple_data_detectorsAttr },
        { &x_apple_data_detectors_resultAttr, *(&x_apple_data_detectors_resultData), NodeName::x_apple_data_detectors_resultAttr },
        { &x_apple_data_detectors_typeAttr, *(&x_apple_data_detectors_typeData), NodeName::x_apple_data_detectors_typeAttr },
        { &x_apple_pdf_annotationAttr, *(&x_apple_pdf_annotationData), NodeName::x_apple_pdf_annotationAttr },
        { &x_itunes_inherit_uri_query_componentAttr, *(&x_itunes_inherit_uri_query_componentData), NodeName::x_itunes_inherit_uri_query_componentAttr },
        { &webkitairplayAttr, *(&webkitairplayData), NodeName::webkitairplayAttr },
        { &webkitwirelessvideoplaybackdisabledAttr, *(&webkitwirelessvideoplaybackdisabledData), NodeName::webkitwirelessvideoplaybackdisabledAttr },
    };

    for (auto& entry : attributesTable)
        entry.targetAddress->construct(nullAtom(), AtomString(&entry.name), nullAtom(), Namespace::None, entry.nodeName);
}

} }

