partial interface DOMWindow {
    [EnabledBySetting=ShapeDetection, SecureContext] attribute BarcodeDetectorConstructor BarcodeDetector;
    [EnabledBySetting=ShapeDetection, SecureContext] attribute FaceDetectorConstructor FaceDetector;
    [EnabledBySetting=ShapeDetection, SecureContext] attribute TextDetectorConstructor TextDetector;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUConstructor GPU;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUAdapterConstructor GPUAdapter;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUAdapterInfoConstructor GPUAdapterInfo;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUBindGroupConstructor GPUBindGroup;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUBindGroupLayoutConstructor GPUBindGroupLayout;
    [SecureContext] attribute GPUBufferConstructor GPUBuffer;
    [SecureContext] attribute GPUBufferUsageConstructor GPUBufferUsage;
    [SecureContext] attribute GPUColorWriteConstructor GPUColorWrite;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUCommandBufferConstructor GPUCommandBuffer;
    [SecureContext] attribute GPUCommandEncoderConstructor GPUCommandEncoder;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUCompilationInfoConstructor GPUCompilationInfo;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUCompilationMessageConstructor GPUCompilationMessage;
    [SecureContext] attribute GPUComputePassEncoderConstructor GPUComputePassEncoder;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUComputePipelineConstructor GPUComputePipeline;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUDeviceConstructor GPUDevice;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUDeviceLostInfoConstructor GPUDeviceLostInfo;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUExternalTextureConstructor GPUExternalTexture;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUInternalErrorConstructor GPUInternalError;
    [SecureContext] attribute GPUMapModeConstructor GPUMapMode;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUOutOfMemoryErrorConstructor GPUOutOfMemoryError;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUPipelineErrorConstructor GPUPipelineError;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUPipelineLayoutConstructor GPUPipelineLayout;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUQuerySetConstructor GPUQuerySet;
    [SecureContext] attribute GPUQueueConstructor GPUQueue;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPURenderBundleConstructor GPURenderBundle;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPURenderBundleEncoderConstructor GPURenderBundleEncoder;
    [SecureContext] attribute GPURenderPassEncoderConstructor GPURenderPassEncoder;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPURenderPipelineConstructor GPURenderPipeline;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUSamplerConstructor GPUSampler;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUShaderModuleConstructor GPUShaderModule;
    [SecureContext] attribute GPUShaderStageConstructor GPUShaderStage;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUSupportedFeaturesConstructor GPUSupportedFeatures;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUSupportedLimitsConstructor GPUSupportedLimits;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUTextureConstructor GPUTexture;
    [SecureContext] attribute GPUTextureUsageConstructor GPUTextureUsage;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUTextureViewConstructor GPUTextureView;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUUncapturedErrorEventConstructor GPUUncapturedErrorEvent;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUValidationErrorConstructor GPUValidationError;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute WGSLLanguageFeaturesConstructor WGSLLanguageFeatures;
    [Conditional=WIRELESS_PLAYBACK_TARGET_AVAILABILITY_API] attribute WebKitPlaybackTargetAvailabilityEventConstructor WebKitPlaybackTargetAvailabilityEvent;
    [EnabledBySetting=AsyncClipboardAPIEnabled, SecureContext] attribute ClipboardConstructor Clipboard;
    [EnabledBySetting=AsyncClipboardAPIEnabled, SecureContext] attribute ClipboardItemConstructor ClipboardItem;
    [Conditional=DOM_AUDIO_SESSION, DisabledByQuirk=shouldDisableDOMAudioSession, EnabledBySetting=DOMAudioSessionEnabled] attribute DOMAudioSessionConstructor AudioSession;
    [EnabledBySetting=CacheAPIEnabled, SecureContext] attribute DOMCacheConstructor Cache;
    [EnabledBySetting=CacheAPIEnabled, SecureContext] attribute DOMCacheStorageConstructor CacheStorage;
    [EnabledBySetting=CompressionStreamEnabled] attribute CompressionStreamConstructor CompressionStream;
    [EnabledBySetting=CompressionStreamEnabled, PrivateIdentifier] attribute CompressionStreamEncoderConstructor CompressionStreamEncoder;
    [EnabledBySetting=CompressionStreamEnabled] attribute DecompressionStreamConstructor DecompressionStream;
    [EnabledBySetting=CompressionStreamEnabled, PrivateIdentifier] attribute DecompressionStreamDecoderConstructor DecompressionStreamDecoder;
    [EnabledBySetting=ContactPickerAPIEnabled, SecureContext] attribute ContactsManagerConstructor ContactsManager;
    [EnabledBySetting=CookieStoreAPIEnabled, SecureContext] attribute CookieChangeEventConstructor CookieChangeEvent;
    [EnabledBySetting=CookieStoreAPIEnabled, SecureContext] attribute CookieStoreConstructor CookieStore;
    [EnabledBySetting=CookieStoreAPIEnabled&CookieStoreManagerEnabled, SecureContext] attribute CookieStoreManagerConstructor CookieStoreManager;
    [Conditional=WEB_AUTHN, EnabledBySetting=WebAuthenticationEnabled, SecureContext] attribute BasicCredentialConstructor Credential;
    [Conditional=WEB_AUTHN, EnabledBySetting=WebAuthenticationEnabled, SecureContext] attribute CredentialsContainerConstructor CredentialsContainer;
    [Conditional=ENCRYPTED_MEDIA, DisabledByQuirk=hasBrokenEncryptedMediaAPISupport, EnabledBySetting=EncryptedMediaAPIEnabled] attribute MediaKeyMessageEventConstructor MediaKeyMessageEvent;
    [Conditional=ENCRYPTED_MEDIA, DisabledByQuirk=hasBrokenEncryptedMediaAPISupport, EnabledBySetting=EncryptedMediaAPIEnabled] attribute MediaKeySessionConstructor MediaKeySession;
    [Conditional=ENCRYPTED_MEDIA, DisabledByQuirk=hasBrokenEncryptedMediaAPISupport, EnabledBySetting=EncryptedMediaAPIEnabled] attribute MediaKeyStatusMapConstructor MediaKeyStatusMap;
    [Conditional=ENCRYPTED_MEDIA, DisabledByQuirk=hasBrokenEncryptedMediaAPISupport, EnabledBySetting=EncryptedMediaAPIEnabled] attribute MediaKeySystemAccessConstructor MediaKeySystemAccess;
    [Conditional=ENCRYPTED_MEDIA, DisabledByQuirk=hasBrokenEncryptedMediaAPISupport, EnabledBySetting=EncryptedMediaAPIEnabled] attribute MediaKeysConstructor MediaKeys;
    [Conditional=LEGACY_ENCRYPTED_MEDIA, EnabledBySetting=LegacyEncryptedMediaAPIEnabled] attribute WebKitMediaKeyMessageEventConstructor WebKitMediaKeyMessageEvent;
    [Conditional=LEGACY_ENCRYPTED_MEDIA, EnabledBySetting=LegacyEncryptedMediaAPIEnabled] attribute WebKitMediaKeyNeededEventConstructor WebKitMediaKeyNeededEvent;
    [Conditional=LEGACY_ENCRYPTED_MEDIA, EnabledBySetting=LegacyEncryptedMediaAPIEnabled] attribute WebKitMediaKeySessionConstructor WebKitMediaKeySession;
    [Conditional=LEGACY_ENCRYPTED_MEDIA, EnabledBySetting=LegacyEncryptedMediaAPIEnabled] attribute WebKitMediaKeysConstructor WebKitMediaKeys;
    [EnabledBySetting=DirectoryUploadEnabled] attribute DOMFileSystemConstructor FileSystem;
    [EnabledBySetting=DirectoryUploadEnabled] attribute FileSystemDirectoryEntryConstructor FileSystemDirectoryEntry;
    [EnabledBySetting=DirectoryUploadEnabled] attribute FileSystemDirectoryReaderConstructor FileSystemDirectoryReader;
    [EnabledBySetting=DirectoryUploadEnabled] attribute FileSystemEntryConstructor FileSystemEntry;
    [EnabledBySetting=DirectoryUploadEnabled] attribute FileSystemFileEntryConstructor FileSystemFileEntry;
    attribute FetchHeadersConstructor Headers;
    attribute FetchRequestConstructor Request;
    attribute FetchResponseConstructor Response;
    [EnabledBySetting=FileSystemEnabled, SecureContext] attribute FileSystemDirectoryHandleConstructor FileSystemDirectoryHandle;
    [EnabledBySetting=FileSystemEnabled, SecureContext] attribute FileSystemFileHandleConstructor FileSystemFileHandle;
    [EnabledBySetting=FileSystemEnabled, SecureContext] attribute FileSystemHandleConstructor FileSystemHandle;
    [EnabledBySetting=FileSystemWritableStreamEnabled, SecureContext] attribute FileSystemWritableFileStreamConstructor FileSystemWritableFileStream;
    [Conditional=GAMEPAD, EnabledBySetting=GamepadsEnabled] attribute GamepadConstructor Gamepad;
    [Conditional=GAMEPAD, EnabledBySetting=GamepadsEnabled] attribute GamepadButtonConstructor GamepadButton;
    [Conditional=GAMEPAD, EnabledBySetting=GamepadsEnabled] attribute GamepadEventConstructor GamepadEvent;
    [Conditional=GAMEPAD, EnabledBySetting=GamepadVibrationActuatorEnabled] attribute GamepadHapticActuatorConstructor GamepadHapticActuator;
    [Conditional=GEOLOCATION, EnabledBySetting=GeolocationAPIEnabled] attribute GeolocationConstructor Geolocation;
    [Conditional=GEOLOCATION, EnabledBySetting=GeolocationAPIEnabled] attribute GeolocationCoordinatesConstructor GeolocationCoordinates;
    [Conditional=GEOLOCATION, EnabledBySetting=GeolocationAPIEnabled] attribute GeolocationPositionConstructor GeolocationPosition;
    [Conditional=GEOLOCATION, EnabledBySetting=GeolocationAPIEnabled] attribute GeolocationPositionErrorConstructor GeolocationPositionError;
    attribute HighlightConstructor Highlight;
    attribute HighlightRegistryConstructor HighlightRegistry;
    [Conditional=WEB_AUTHN, EnabledBySetting=DigitalCredentialsEnabled, SecureContext] attribute DigitalCredentialConstructor DigitalCredential;
    [EnabledBySetting=IndexedDBAPIEnabled] attribute IDBCursorConstructor IDBCursor;
    [EnabledBySetting=IndexedDBAPIEnabled] attribute IDBCursorWithValueConstructor IDBCursorWithValue;
    [EnabledBySetting=IndexedDBAPIEnabled] attribute IDBDatabaseConstructor IDBDatabase;
    [EnabledBySetting=IndexedDBAPIEnabled] attribute IDBFactoryConstructor IDBFactory;
    [EnabledBySetting=IndexedDBAPIEnabled] attribute IDBIndexConstructor IDBIndex;
    [EnabledBySetting=IndexedDBAPIEnabled] attribute IDBKeyRangeConstructor IDBKeyRange;
    [EnabledBySetting=IndexedDBAPIEnabled] attribute IDBObjectStoreConstructor IDBObjectStore;
    [EnabledBySetting=IndexedDBAPIEnabled] attribute IDBOpenDBRequestConstructor IDBOpenDBRequest;
    [EnabledBySetting=IndexedDBAPIEnabled] attribute IDBRequestConstructor IDBRequest;
    [EnabledBySetting=IndexedDBAPIEnabled] attribute IDBTransactionConstructor IDBTransaction;
    [EnabledBySetting=IndexedDBAPIEnabled] attribute IDBVersionChangeEventConstructor IDBVersionChangeEvent;
    [EnabledBySetting=MediaCapabilitiesEnabled] attribute MediaCapabilitiesConstructor MediaCapabilities;
    [Conditional=MEDIA_RECORDER, EnabledBySetting=MediaRecorderEnabled] attribute BlobEventConstructor BlobEvent;
    [Conditional=MEDIA_RECORDER, EnabledBySetting=MediaRecorderEnabled] attribute MediaRecorderConstructor MediaRecorder;
    [Conditional=MEDIA_RECORDER, EnabledBySetting=MediaRecorderEnabled] attribute MediaRecorderErrorEventConstructor MediaRecorderErrorEvent;
    [Conditional=MEDIA_SESSION] attribute MediaMetadataConstructor MediaMetadata;
    [Conditional=MEDIA_SESSION] attribute MediaSessionConstructor MediaSession;
    [Conditional=MEDIA_SESSION_COORDINATOR, EnabledBySetting=MediaSessionCoordinatorEnabled] attribute MediaSessionCoordinatorConstructor MediaSessionCoordinator;
    [Conditional=MEDIA_SOURCE, EnabledBySetting=ManagedMediaSourceEnabled] attribute BufferedChangeEventConstructor BufferedChangeEvent;
    [Conditional=MEDIA_SOURCE, EnabledBySetting=ManagedMediaSourceEnabled, EnabledForContext] attribute ManagedMediaSourceConstructor ManagedMediaSource;
    [Conditional=MEDIA_SOURCE, EnabledBySetting=ManagedMediaSourceEnabled] attribute ManagedSourceBufferConstructor ManagedSourceBuffer;
    [Conditional=MEDIA_SOURCE, EnabledBySetting=MediaSourceEnabled, EnabledForContext] attribute MediaSourceConstructor MediaSource;
    [Conditional=MEDIA_SOURCE_IN_WORKERS, EnabledBySetting=MediaSourceInWorkerEnabled] attribute MediaSourceHandleConstructor MediaSourceHandle;
    [Conditional=MEDIA_SOURCE, EnabledBySetting=MediaSourceEnabled, EnabledForContext] attribute SourceBufferConstructor SourceBuffer;
    [Conditional=MEDIA_SOURCE, EnabledBySetting=MediaSourceEnabled|ManagedMediaSourceEnabled] attribute SourceBufferListConstructor SourceBufferList;
    [Conditional=VIDEO] attribute VideoPlaybackQualityConstructor VideoPlaybackQuality;
    [Conditional=MEDIA_STREAM] attribute CanvasCaptureMediaStreamTrackConstructor CanvasCaptureMediaStreamTrack;
    [Conditional=MEDIA_STREAM, DisabledByQuirk=shouldDisableImageCapture, EnabledBySetting=ImageCaptureEnabled, SecureContext] attribute ImageCaptureConstructor ImageCapture;
    [Conditional=MEDIA_STREAM, SecureContext] attribute InputDeviceInfoConstructor InputDeviceInfo;
    [Conditional=MEDIA_STREAM] attribute MediaDeviceInfoConstructor MediaDeviceInfo;
    [Conditional=MEDIA_STREAM, SecureContext] attribute MediaDevicesConstructor MediaDevices;
    [Conditional=MEDIA_STREAM, PrivateIdentifier, PublicIdentifier] attribute MediaStreamConstructor MediaStream;
    [Conditional=MEDIA_STREAM, PrivateIdentifier, PublicIdentifier] attribute MediaStreamTrackConstructor MediaStreamTrack;
    [Conditional=MEDIA_STREAM] attribute MediaStreamTrackEventConstructor MediaStreamTrackEvent;
    [Conditional=MEDIA_STREAM] attribute OverconstrainedErrorConstructor OverconstrainedError;
    [Conditional=MEDIA_STREAM] attribute OverconstrainedErrorEventConstructor OverconstrainedErrorEvent;
    [Conditional=WEB_RTC, EnabledBySetting=PeerConnectionEnabled] attribute RTCCertificateConstructor RTCCertificate;
    [Conditional=WEB_RTC, EnabledBySetting=PeerConnectionEnabled] attribute RTCDTMFSenderConstructor RTCDTMFSender;
    [Conditional=WEB_RTC, EnabledBySetting=PeerConnectionEnabled] attribute RTCDTMFToneChangeEventConstructor RTCDTMFToneChangeEvent;
    [Conditional=WEB_RTC, EnabledBySetting=PeerConnectionEnabled] attribute RTCDataChannelConstructor RTCDataChannel;
    [Conditional=WEB_RTC, EnabledBySetting=PeerConnectionEnabled] attribute RTCDataChannelEventConstructor RTCDataChannelEvent;
    [Conditional=WEB_RTC, EnabledBySetting=PeerConnectionEnabled] attribute RTCDtlsTransportConstructor RTCDtlsTransport;
    [Conditional=WEB_RTC, EnabledBySetting=WebRTCEncodedTransformEnabled] attribute RTCEncodedAudioFrameConstructor RTCEncodedAudioFrame;
    [Conditional=WEB_RTC, EnabledBySetting=WebRTCEncodedTransformEnabled] attribute RTCEncodedVideoFrameConstructor RTCEncodedVideoFrame;
    [Conditional=WEB_RTC, EnabledBySetting=PeerConnectionEnabled] attribute RTCErrorConstructor RTCError;
    [Conditional=WEB_RTC, EnabledBySetting=PeerConnectionEnabled] attribute RTCErrorEventConstructor RTCErrorEvent;
    [Conditional=WEB_RTC, EnabledBySetting=PeerConnectionEnabled] attribute RTCIceCandidateConstructor RTCIceCandidate;
    [Conditional=WEB_RTC, EnabledBySetting=PeerConnectionEnabled] attribute RTCIceTransportConstructor RTCIceTransport;
    [Conditional=WEB_RTC, EnabledBySetting=PeerConnectionEnabled] attribute RTCPeerConnectionConstructor RTCPeerConnection;
    [Conditional=WEB_RTC, EnabledBySetting=PeerConnectionEnabled] attribute RTCPeerConnectionIceErrorEventConstructor RTCPeerConnectionIceErrorEvent;
    [Conditional=WEB_RTC, EnabledBySetting=PeerConnectionEnabled] attribute RTCPeerConnectionIceEventConstructor RTCPeerConnectionIceEvent;
    [Conditional=WEB_RTC, EnabledBySetting=PeerConnectionEnabled] attribute RTCRtpReceiverConstructor RTCRtpReceiver;
    [Conditional=WEB_RTC, EnabledBySetting=WebRTCSFrameTransformEnabled] attribute RTCRtpSFrameTransformConstructor SFrameTransform;
    [Conditional=WEB_RTC, EnabledBySetting=WebRTCSFrameTransformEnabled] attribute RTCRtpSFrameTransformErrorEventConstructor SFrameTransformErrorEvent;
    [Conditional=WEB_RTC, EnabledBySetting=WebRTCEncodedTransformEnabled] attribute RTCRtpScriptTransformConstructor RTCRtpScriptTransform;
    [Conditional=WEB_RTC, EnabledBySetting=PeerConnectionEnabled] attribute RTCRtpSenderConstructor RTCRtpSender;
    [Conditional=WEB_RTC, EnabledBySetting=PeerConnectionEnabled] attribute RTCRtpTransceiverConstructor RTCRtpTransceiver;
    [Conditional=WEB_RTC, EnabledBySetting=PeerConnectionEnabled] attribute RTCSctpTransportConstructor RTCSctpTransport;
    [Conditional=WEB_RTC, EnabledBySetting=PeerConnectionEnabled, PrivateIdentifier, PublicIdentifier] attribute RTCSessionDescriptionConstructor RTCSessionDescription;
    [Conditional=WEB_RTC, EnabledBySetting=PeerConnectionEnabled] attribute RTCStatsReportConstructor RTCStatsReport;
    [Conditional=WEB_RTC, EnabledBySetting=PeerConnectionEnabled] attribute RTCTrackEventConstructor RTCTrackEvent;
    [Conditional=MODEL_ELEMENT, EnabledBySetting=ModelElementEnabled] attribute HTMLModelElementConstructor HTMLModelElement;
    [Conditional=NOTIFICATIONS, EnabledBySetting=NotificationsEnabled] attribute NotificationConstructor Notification;
    [Conditional=PAYMENT_REQUEST, EnabledBySetting=PaymentRequestEnabled, SecureContext] attribute MerchantValidationEventConstructor MerchantValidationEvent;
    [Conditional=PAYMENT_REQUEST, EnabledBySetting=PaymentRequestEnabled, SecureContext] attribute PaymentAddressConstructor PaymentAddress;
    [Conditional=PAYMENT_REQUEST, EnabledBySetting=PaymentRequestEnabled, SecureContext] attribute PaymentMethodChangeEventConstructor PaymentMethodChangeEvent;
    [Conditional=PAYMENT_REQUEST, EnabledBySetting=PaymentRequestEnabled, SecureContext] attribute PaymentRequestConstructor PaymentRequest;
    [Conditional=PAYMENT_REQUEST, EnabledBySetting=PaymentRequestEnabled, SecureContext] attribute PaymentRequestUpdateEventConstructor PaymentRequestUpdateEvent;
    [Conditional=PAYMENT_REQUEST, EnabledBySetting=PaymentRequestEnabled, SecureContext] attribute PaymentResponseConstructor PaymentResponse;
    [EnabledBySetting=PermissionsAPIEnabled] attribute PermissionStatusConstructor PermissionStatus;
    [EnabledBySetting=PermissionsAPIEnabled] attribute PermissionsConstructor Permissions;
    [Conditional=PICTURE_IN_PICTURE_API, EnabledBySetting=PictureInPictureAPIEnabled] attribute PictureInPictureEventConstructor PictureInPictureEvent;
    [Conditional=PICTURE_IN_PICTURE_API, EnabledBySetting=PictureInPictureAPIEnabled] attribute PictureInPictureWindowConstructor PictureInPictureWindow;
    [EnabledBySetting=PushAPIEnabled, SecureContext] attribute PushManagerConstructor PushManager;
    [EnabledBySetting=PushAPIEnabled, SecureContext] attribute PushSubscriptionConstructor PushSubscription;
    [EnabledBySetting=PushAPIEnabled, SecureContext] attribute PushSubscriptionOptionsConstructor PushSubscriptionOptions;
    [Conditional=WIRELESS_PLAYBACK_TARGET, EnabledBySetting=RemotePlaybackEnabled] attribute RemotePlaybackConstructor RemotePlayback;
    [EnabledBySetting=DeprecationReportingEnabled] attribute DeprecationReportBodyConstructor DeprecationReportBody;
    attribute ReportConstructor Report;
    attribute ReportBodyConstructor ReportBody;
    attribute ReportingObserverConstructor ReportingObserver;
    [EnabledBySetting=ScreenWakeLockAPIEnabled, SecureContext] attribute WakeLockConstructor WakeLock;
    [EnabledBySetting=ScreenWakeLockAPIEnabled, SecureContext] attribute WakeLockSentinelConstructor WakeLockSentinel;
    [EnabledBySetting=SpeechRecognitionEnabled, SecureContext] attribute SpeechRecognitionConstructor webkitSpeechRecognition;
    [EnabledBySetting=SpeechRecognitionEnabled, SecureContext] attribute SpeechRecognitionAlternativeConstructor SpeechRecognitionAlternative;
    [EnabledBySetting=SpeechRecognitionEnabled, SecureContext] attribute SpeechRecognitionErrorEventConstructor SpeechRecognitionErrorEvent;
    [EnabledBySetting=SpeechRecognitionEnabled, SecureContext] attribute SpeechRecognitionEventConstructor SpeechRecognitionEvent;
    [EnabledBySetting=SpeechRecognitionEnabled, SecureContext] attribute SpeechRecognitionResultConstructor SpeechRecognitionResult;
    [EnabledBySetting=SpeechRecognitionEnabled] attribute SpeechRecognitionResultListConstructor SpeechRecognitionResultList;
    [Conditional=SPEECH_SYNTHESIS, EnabledBySetting=SpeechSynthesisAPIEnabled] attribute SpeechSynthesisConstructor SpeechSynthesis;
    [Conditional=SPEECH_SYNTHESIS, EnabledBySetting=SpeechSynthesisAPIEnabled] attribute SpeechSynthesisErrorEventConstructor SpeechSynthesisErrorEvent;
    [Conditional=SPEECH_SYNTHESIS, EnabledBySetting=SpeechSynthesisAPIEnabled] attribute SpeechSynthesisEventConstructor SpeechSynthesisEvent;
    [Conditional=SPEECH_SYNTHESIS, EnabledBySetting=SpeechSynthesisAPIEnabled] attribute SpeechSynthesisUtteranceConstructor SpeechSynthesisUtterance;
    [Conditional=SPEECH_SYNTHESIS, EnabledBySetting=SpeechSynthesisAPIEnabled] attribute SpeechSynthesisVoiceConstructor SpeechSynthesisVoice;
    [EnabledBySetting=StorageAPIEnabled, SecureContext] attribute StorageManagerConstructor StorageManager;
    attribute ByteLengthQueuingStrategyConstructor ByteLengthQueuingStrategy;
    attribute CountQueuingStrategyConstructor CountQueuingStrategy;
    [PrivateIdentifier] attribute ReadableByteStreamControllerConstructor ReadableByteStreamController;
    [PrivateIdentifier, PublicIdentifier] attribute ReadableStreamConstructor ReadableStream;
    [PrivateIdentifier] attribute ReadableStreamBYOBReaderConstructor ReadableStreamBYOBReader;
    [PrivateIdentifier] attribute ReadableStreamBYOBRequestConstructor ReadableStreamBYOBRequest;
    [PrivateIdentifier, PublicIdentifier] attribute ReadableStreamDefaultControllerConstructor ReadableStreamDefaultController;
    [PrivateIdentifier, PublicIdentifier] attribute ReadableStreamDefaultReaderConstructor ReadableStreamDefaultReader;
    [PrivateIdentifier, PublicIdentifier] attribute TransformStreamConstructor TransformStream;
    [PrivateIdentifier, PublicIdentifier] attribute TransformStreamDefaultControllerConstructor TransformStreamDefaultController;
    [PrivateIdentifier, PublicIdentifier] attribute WritableStreamConstructor WritableStream;
    [PrivateIdentifier, PublicIdentifier] attribute WritableStreamDefaultControllerConstructor WritableStreamDefaultController;
    [PrivateIdentifier, PublicIdentifier] attribute WritableStreamDefaultWriterConstructor WritableStreamDefaultWriter;
    [EnabledBySetting=URLPatternAPIEnabled] attribute URLPatternConstructor URLPattern;
    [EnabledBySetting=WebLocksAPIEnabled, SecureContext] attribute WebLockConstructor Lock;
    [EnabledBySetting=WebLocksAPIEnabled, SecureContext] attribute WebLockManagerConstructor LockManager;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute AnalyserNodeConstructor AnalyserNode;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute AudioBufferConstructor AudioBuffer;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute AudioBufferSourceNodeConstructor AudioBufferSourceNode;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute AudioContextConstructor AudioContext;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute AudioDestinationNodeConstructor AudioDestinationNode;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute AudioListenerConstructor AudioListener;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute AudioNodeConstructor AudioNode;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute AudioParamConstructor AudioParam;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute AudioParamMapConstructor AudioParamMap;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute AudioProcessingEventConstructor AudioProcessingEvent;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute AudioScheduledSourceNodeConstructor AudioScheduledSourceNode;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled, SecureContext] attribute AudioWorkletConstructor AudioWorklet;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled, SecureContext] attribute AudioWorkletNodeConstructor AudioWorkletNode;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute BaseAudioContextConstructor BaseAudioContext;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute BiquadFilterNodeConstructor BiquadFilterNode;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute ChannelMergerNodeConstructor ChannelMergerNode;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute ChannelSplitterNodeConstructor ChannelSplitterNode;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute ConstantSourceNodeConstructor ConstantSourceNode;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute ConvolverNodeConstructor ConvolverNode;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute DelayNodeConstructor DelayNode;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute DynamicsCompressorNodeConstructor DynamicsCompressorNode;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute GainNodeConstructor GainNode;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute IIRFilterNodeConstructor IIRFilterNode;
    [Conditional=WEB_AUDIO&VIDEO, EnabledBySetting=WebAudioEnabled] attribute MediaElementAudioSourceNodeConstructor MediaElementAudioSourceNode;
    [Conditional=WEB_AUDIO&MEDIA_STREAM, EnabledBySetting=WebAudioEnabled] attribute MediaStreamAudioDestinationNodeConstructor MediaStreamAudioDestinationNode;
    [Conditional=WEB_AUDIO&MEDIA_STREAM, EnabledBySetting=WebAudioEnabled] attribute MediaStreamAudioSourceNodeConstructor MediaStreamAudioSourceNode;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute OfflineAudioCompletionEventConstructor OfflineAudioCompletionEvent;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute OfflineAudioContextConstructor OfflineAudioContext;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute OscillatorNodeConstructor OscillatorNode;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute PannerNodeConstructor PannerNode;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute PeriodicWaveConstructor PeriodicWave;
    [Conditional=WEB_AUDIO] attribute ScriptProcessorNodeConstructor ScriptProcessorNode;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute StereoPannerNodeConstructor StereoPannerNode;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudioEnabled] attribute WaveShaperNodeConstructor WaveShaperNode;
    [Conditional=WEB_AUTHN, EnabledBySetting=WebAuthenticationEnabled, SecureContext] attribute AuthenticatorAssertionResponseConstructor AuthenticatorAssertionResponse;
    [Conditional=WEB_AUTHN, EnabledBySetting=WebAuthenticationEnabled, SecureContext] attribute AuthenticatorAttestationResponseConstructor AuthenticatorAttestationResponse;
    [Conditional=WEB_AUTHN, EnabledBySetting=WebAuthenticationEnabled, SecureContext] attribute AuthenticatorResponseConstructor AuthenticatorResponse;
    [Conditional=WEB_AUTHN, EnabledBySetting=WebAuthenticationEnabled, SecureContext] attribute PublicKeyCredentialConstructor PublicKeyCredential;
    [Conditional=VIDEO] attribute VideoColorSpaceConstructor VideoColorSpace;
    [Conditional=WEB_CODECS, EnabledBySetting=WebCodecsAudioEnabled] attribute WebCodecsAudioDataConstructor AudioData;
    [Conditional=WEB_CODECS, EnabledBySetting=WebCodecsAudioEnabled] attribute WebCodecsAudioDecoderConstructor AudioDecoder;
    [Conditional=WEB_CODECS, EnabledBySetting=WebCodecsAudioEnabled] attribute WebCodecsAudioEncoderConstructor AudioEncoder;
    [Conditional=WEB_CODECS, EnabledBySetting=WebCodecsAudioEnabled] attribute WebCodecsEncodedAudioChunkConstructor EncodedAudioChunk;
    [Conditional=WEB_CODECS, EnabledBySetting=WebCodecsVideoEnabled] attribute WebCodecsEncodedVideoChunkConstructor EncodedVideoChunk;
    [Conditional=WEB_CODECS, EnabledBySetting=WebCodecsVideoEnabled] attribute WebCodecsVideoDecoderConstructor VideoDecoder;
    [Conditional=WEB_CODECS, EnabledBySetting=WebCodecsVideoEnabled] attribute WebCodecsVideoEncoderConstructor VideoEncoder;
    [Conditional=WEB_CODECS, EnabledBySetting=WebCodecsVideoEnabled] attribute WebCodecsVideoFrameConstructor VideoFrame;
    [EnabledByDeprecatedGlobalSetting=WebSQLEnabled] attribute DatabaseConstructor Database;
    [EnabledByDeprecatedGlobalSetting=WebSQLEnabled] attribute SQLErrorConstructor SQLError;
    [EnabledByDeprecatedGlobalSetting=WebSQLEnabled] attribute SQLResultSetConstructor SQLResultSet;
    [EnabledByDeprecatedGlobalSetting=WebSQLEnabled] attribute SQLResultSetRowListConstructor SQLResultSetRowList;
    attribute SQLTransactionConstructor SQLTransaction;
    attribute CloseEventConstructor CloseEvent;
    [EnabledBySetting=WebSocketEnabled] attribute WebSocketConstructor WebSocket;
    [EnabledBySetting=WebTransportEnabled, SecureContext] attribute WebTransportConstructor WebTransport;
    [EnabledBySetting=WebTransportEnabled, SecureContext] attribute WebTransportBidirectionalStreamConstructor WebTransportBidirectionalStream;
    [EnabledBySetting=WebTransportEnabled, SecureContext] attribute WebTransportDatagramDuplexStreamConstructor WebTransportDatagramDuplexStream;
    [EnabledBySetting=WebTransportEnabled, SecureContext] attribute WebTransportErrorConstructor WebTransportError;
    [EnabledBySetting=WebTransportEnabled, SecureContext] attribute WebTransportReceiveStreamConstructor WebTransportReceiveStream;
    [EnabledBySetting=WebTransportEnabled, SecureContext] attribute WebTransportSendStreamConstructor WebTransportSendStream;
    [Conditional=WEBXR, EnabledBySetting=WebXREnabled, SecureContext] attribute WebXRBoundedReferenceSpaceConstructor XRBoundedReferenceSpace;
    [Conditional=WEBXR, EnabledBySetting=WebXREnabled, SecureContext] attribute WebXRFrameConstructor XRFrame;
    [Conditional=WEBXR_HANDS, EnabledBySetting=WebXREnabled&WebXRHandInputModuleEnabled, SecureContext] attribute WebXRHandConstructor XRHand;
    [Conditional=WEBXR, EnabledBySetting=WebXREnabled, SecureContext] attribute WebXRInputSourceConstructor XRInputSource;
    [Conditional=WEBXR, EnabledBySetting=WebXREnabled, SecureContext] attribute WebXRInputSourceArrayConstructor XRInputSourceArray;
    [Conditional=WEBXR_HANDS, EnabledBySetting=WebXREnabled&WebXRHandInputModuleEnabled, SecureContext] attribute WebXRJointPoseConstructor XRJointPose;
    [Conditional=WEBXR_HANDS, EnabledBySetting=WebXREnabled&WebXRHandInputModuleEnabled, SecureContext] attribute WebXRJointSpaceConstructor XRJointSpace;
    [Conditional=WEBXR, EnabledBySetting=WebXREnabled, SecureContext] attribute WebXRLayerConstructor XRLayer;
    [Conditional=WEBXR, EnabledBySetting=WebXREnabled, SecureContext] attribute WebXRPoseConstructor XRPose;
    [Conditional=WEBXR, EnabledBySetting=WebXREnabled, SecureContext] attribute WebXRReferenceSpaceConstructor XRReferenceSpace;
    [Conditional=WEBXR, EnabledBySetting=WebXREnabled, SecureContext] attribute WebXRRenderStateConstructor XRRenderState;
    [Conditional=WEBXR, EnabledBySetting=WebXREnabled, SecureContext] attribute WebXRRigidTransformConstructor XRRigidTransform;
    [Conditional=WEBXR, EnabledBySetting=WebXREnabled, SecureContext] attribute WebXRSessionConstructor XRSession;
    [Conditional=WEBXR, EnabledBySetting=WebXREnabled, SecureContext] attribute WebXRSpaceConstructor XRSpace;
    [Conditional=WEBXR, EnabledBySetting=WebXREnabled, SecureContext] attribute WebXRSystemConstructor XRSystem;
    [Conditional=WEBXR, EnabledBySetting=WebXREnabled, SecureContext] attribute WebXRViewConstructor XRView;
    [Conditional=WEBXR, EnabledBySetting=WebXREnabled, SecureContext] attribute WebXRViewerPoseConstructor XRViewerPose;
    [Conditional=WEBXR, EnabledBySetting=WebXREnabled, SecureContext] attribute WebXRViewportConstructor XRViewport;
    [Conditional=WEBXR, EnabledBySetting=WebXREnabled, SecureContext] attribute WebXRWebGLLayerConstructor XRWebGLLayer;
    [Conditional=WEBXR_LAYERS, EnabledBySetting=WebXRLayersAPIEnabled] attribute XRCompositionLayerConstructor XRCompositionLayer;
    [Conditional=WEBXR_LAYERS, EnabledBySetting=WebXRLayersAPIEnabled] attribute XRCubeLayerConstructor XRCubeLayer;
    [Conditional=WEBXR_LAYERS, EnabledBySetting=WebXRLayersAPIEnabled] attribute XRCylinderLayerConstructor XRCylinderLayer;
    [Conditional=WEBXR_LAYERS, EnabledBySetting=WebXRLayersAPIEnabled] attribute XREquirectLayerConstructor XREquirectLayer;
    [Conditional=WEBXR_LAYERS, EnabledBySetting=WebXRWebGPUBindingsEnabled] attribute XRGPUBindingConstructor XRGPUBinding;
    [Conditional=WEBXR_LAYERS, EnabledBySetting=WebXRWebGPUBindingsEnabled] attribute XRGPUSubImageConstructor XRGPUSubImage;
    [Conditional=WEBXR, EnabledBySetting=WebXREnabled, SecureContext] attribute XRInputSourceEventConstructor XRInputSourceEvent;
    [Conditional=WEBXR, EnabledBySetting=WebXREnabled, SecureContext] attribute XRInputSourcesChangeEventConstructor XRInputSourcesChangeEvent;
    [Conditional=WEBXR_LAYERS, EnabledBySetting=WebXRLayersAPIEnabled, SecureContext] attribute XRLayerEventConstructor XRLayerEvent;
    [Conditional=WEBXR_LAYERS, EnabledBySetting=WebXRLayersAPIEnabled] attribute XRProjectionLayerConstructor XRProjectionLayer;
    [Conditional=WEBXR_LAYERS, EnabledBySetting=WebXRLayersAPIEnabled] attribute XRQuadLayerConstructor XRQuadLayer;
    [Conditional=WEBXR, EnabledBySetting=WebXREnabled, SecureContext] attribute XRReferenceSpaceEventConstructor XRReferenceSpaceEvent;
    [Conditional=WEBXR, EnabledBySetting=WebXREnabled, SecureContext] attribute XRSessionEventConstructor XRSessionEvent;
    [Conditional=WEBXR_LAYERS, EnabledBySetting=WebXRLayersAPIEnabled] attribute XRSubImageConstructor XRSubImage;
    [Conditional=WEBXR_LAYERS, EnabledBySetting=WebXRLayersAPIEnabled] attribute XRWebGLBindingConstructor XRWebGLBinding;
    [Conditional=WEBXR_LAYERS, EnabledBySetting=WebXRLayersAPIEnabled] attribute XRWebGLSubImageConstructor XRWebGLSubImage;
    attribute AnimationEffectConstructor AnimationEffect;
    attribute AnimationPlaybackEventConstructor AnimationPlaybackEvent;
    attribute AnimationTimelineConstructor AnimationTimeline;
    attribute CSSAnimationConstructor CSSAnimation;
    attribute CSSAnimationEventConstructor AnimationEvent;
    attribute CSSTransitionConstructor CSSTransition;
    attribute CSSTransitionEventConstructor TransitionEvent;
    [EnabledBySetting=WebAnimationsCustomEffectsEnabled] attribute CustomEffectConstructor CustomEffect;
    attribute DocumentTimelineConstructor DocumentTimeline;
    attribute KeyframeEffectConstructor KeyframeEffect;
    [EnabledBySetting=ScrollDrivenAnimationsEnabled] attribute ScrollTimelineConstructor ScrollTimeline;
    [EnabledBySetting=ScrollDrivenAnimationsEnabled] attribute ViewTimelineConstructor ViewTimeline;
    attribute WebAnimationConstructor Animation;
    [SecureContext] attribute CryptoKeyConstructor CryptoKey;
    [SecureContext] attribute SubtleCryptoConstructor SubtleCrypto;
    attribute CSSConditionRuleConstructor CSSConditionRule;
    attribute CSSContainerRuleConstructor CSSContainerRule;
    attribute CSSCounterStyleRuleConstructor CSSCounterStyleRule;
    attribute CSSFontFaceDescriptorsConstructor CSSFontFaceDescriptors;
    attribute CSSFontFaceRuleConstructor CSSFontFaceRule;
    attribute CSSFontFeatureValuesRuleConstructor CSSFontFeatureValuesRule;
    attribute CSSFontPaletteValuesRuleConstructor CSSFontPaletteValuesRule;
    attribute CSSGroupingRuleConstructor CSSGroupingRule;
    attribute CSSImportRuleConstructor CSSImportRule;
    attribute CSSKeyframeRuleConstructor CSSKeyframeRule;
    attribute CSSKeyframesRuleConstructor CSSKeyframesRule;
    attribute CSSLayerBlockRuleConstructor CSSLayerBlockRule;
    attribute CSSLayerStatementRuleConstructor CSSLayerStatementRule;
    attribute CSSMediaRuleConstructor CSSMediaRule;
    attribute CSSNamespaceRuleConstructor CSSNamespaceRule;
    attribute CSSNestedDeclarationsConstructor CSSNestedDeclarations;
    attribute CSSPageDescriptorsConstructor CSSPageDescriptors;
    attribute CSSPageRuleConstructor CSSPageRule;
    [EnabledBySetting=CSSAnchorPositioningEnabled] attribute CSSPositionTryDescriptorsConstructor CSSPositionTryDescriptors;
    [EnabledBySetting=CSSAnchorPositioningEnabled] attribute CSSPositionTryRuleConstructor CSSPositionTryRule;
    attribute CSSPropertyRuleConstructor CSSPropertyRule;
    attribute CSSRuleConstructor CSSRule;
    attribute CSSRuleListConstructor CSSRuleList;
    attribute CSSScopeRuleConstructor CSSScopeRule;
    attribute CSSStartingStyleRuleConstructor CSSStartingStyleRule;
    attribute CSSStyleDeclarationConstructor CSSStyleDeclaration;
    attribute CSSStylePropertiesConstructor CSSStyleProperties;
    attribute CSSStyleRuleConstructor CSSStyleRule;
    attribute CSSStyleSheetConstructor CSSStyleSheet;
    attribute CSSSupportsRuleConstructor CSSSupportsRule;
    [EnabledBySetting=CrossDocumentViewTransitionsEnabled] attribute CSSViewTransitionRuleConstructor CSSViewTransitionRule;
    attribute DOMCSSNamespaceConstructor CSS;
    attribute DOMMatrixConstructor DOMMatrix;
    attribute DOMMatrixConstructor WebKitCSSMatrix; // Legacy Window alias.
    attribute DOMMatrixReadOnlyConstructor DOMMatrixReadOnly;
    attribute DeprecatedCSSOMCounterConstructor Counter;
    attribute DeprecatedCSSOMPrimitiveValueConstructor CSSPrimitiveValue;
    attribute DeprecatedCSSOMRGBColorConstructor RGBColor;
    attribute DeprecatedCSSOMRectConstructor Rect;
    attribute DeprecatedCSSOMValueConstructor CSSValue;
    attribute DeprecatedCSSOMValueListConstructor CSSValueList;
    attribute FontFaceConstructor FontFace;
    attribute FontFaceSetConstructor FontFaceSet;
    attribute MediaListConstructor MediaList;
    attribute MediaQueryListConstructor MediaQueryList;
    attribute MediaQueryListEventConstructor MediaQueryListEvent;
    attribute StyleSheetConstructor StyleSheet;
    attribute StyleSheetListConstructor StyleSheetList;
    attribute CSSKeywordValueConstructor CSSKeywordValue;
    attribute CSSNumericValueConstructor CSSNumericValue;
    attribute CSSOMVariableReferenceValueConstructor CSSVariableReferenceValue;
    attribute CSSStyleImageValueConstructor CSSImageValue;
    attribute CSSStyleValueConstructor CSSStyleValue;
    attribute CSSUnitValueConstructor CSSUnitValue;
    attribute CSSUnparsedValueConstructor CSSUnparsedValue;
    attribute StylePropertyMapConstructor StylePropertyMap;
    attribute StylePropertyMapReadOnlyConstructor StylePropertyMapReadOnly;
    [EnabledBySetting=CSSTypedOMColorEnabled] attribute CSSHSLConstructor CSSHSL;
    [EnabledBySetting=CSSTypedOMColorEnabled] attribute CSSHWBConstructor CSSHWB;
    [EnabledBySetting=CSSTypedOMColorEnabled] attribute CSSLCHConstructor CSSLCH;
    [EnabledBySetting=CSSTypedOMColorEnabled] attribute CSSLabConstructor CSSLab;
    [EnabledBySetting=CSSTypedOMColorEnabled] attribute CSSOKLCHConstructor CSSOKLCH;
    [EnabledBySetting=CSSTypedOMColorEnabled] attribute CSSOKLabConstructor CSSOKLab;
    [EnabledBySetting=CSSTypedOMColorEnabled] attribute CSSOMColorConstructor CSSColor;
    [EnabledBySetting=CSSTypedOMColorEnabled] attribute CSSOMColorValueConstructor CSSColorValue;
    [EnabledBySetting=CSSTypedOMColorEnabled] attribute CSSRGBConstructor CSSRGB;
    attribute CSSMathClampConstructor CSSMathClamp;
    attribute CSSMathInvertConstructor CSSMathInvert;
    attribute CSSMathMaxConstructor CSSMathMax;
    attribute CSSMathMinConstructor CSSMathMin;
    attribute CSSMathNegateConstructor CSSMathNegate;
    attribute CSSMathProductConstructor CSSMathProduct;
    attribute CSSMathSumConstructor CSSMathSum;
    attribute CSSMathValueConstructor CSSMathValue;
    attribute CSSNumericArrayConstructor CSSNumericArray;
    attribute CSSMatrixComponentConstructor CSSMatrixComponent;
    attribute CSSPerspectiveConstructor CSSPerspective;
    attribute CSSRotateConstructor CSSRotate;
    attribute CSSScaleConstructor CSSScale;
    attribute CSSSkewConstructor CSSSkew;
    attribute CSSSkewXConstructor CSSSkewX;
    attribute CSSSkewYConstructor CSSSkewY;
    attribute CSSTransformComponentConstructor CSSTransformComponent;
    attribute CSSTransformValueConstructor CSSTransformValue;
    attribute CSSTranslateConstructor CSSTranslate;
    attribute AbortControllerConstructor AbortController;
    [PrivateIdentifier, PublicIdentifier] attribute AbortSignalConstructor AbortSignal;
    attribute AbstractRangeConstructor AbstractRange;
    attribute AttrConstructor Attr;
    attribute BeforeUnloadEventConstructor BeforeUnloadEvent;
    [EnabledBySetting=BroadcastChannelEnabled] attribute BroadcastChannelConstructor BroadcastChannel;
    attribute CDATASectionConstructor CDATASection;
    [EnabledBySetting=CaretPositionFromPointEnabled] attribute CaretPositionConstructor CaretPosition;
    attribute CharacterDataConstructor CharacterData;
    attribute ClipboardEventConstructor ClipboardEvent;
    [EnabledBySetting=CommandAttributesEnabled] attribute CommandEventConstructor CommandEvent;
    attribute CommentConstructor Comment;
    attribute CompositionEventConstructor CompositionEvent;
    attribute ContentVisibilityAutoStateChangeEventConstructor ContentVisibilityAutoStateChangeEvent;
    attribute CustomElementRegistryConstructor CustomElementRegistry;
    attribute CustomEventConstructor CustomEvent;
    attribute CustomStateSetConstructor CustomStateSet;
    attribute DOMExceptionConstructor DOMException;
    attribute DOMImplementationConstructor DOMImplementation;
    attribute DOMPointConstructor DOMPoint;
    attribute DOMPointReadOnlyConstructor DOMPointReadOnly;
    attribute DOMQuadConstructor DOMQuad;
    attribute DOMRectConstructor DOMRect;
    attribute DOMRectListConstructor DOMRectList;
    attribute DOMRectReadOnlyConstructor DOMRectReadOnly;
    attribute DOMStringListConstructor DOMStringList;
    attribute DOMStringMapConstructor DOMStringMap;
    attribute DataTransferConstructor DataTransfer;
    [EnabledBySetting=DataTransferItemsEnabled] attribute DataTransferItemConstructor DataTransferItem;
    [EnabledBySetting=DataTransferItemsEnabled] attribute DataTransferItemListConstructor DataTransferItemList;
    [Conditional=DEVICE_ORIENTATION] attribute DeviceMotionEventConstructor DeviceMotionEvent;
    [Conditional=DEVICE_ORIENTATION] attribute DeviceOrientationEventConstructor DeviceOrientationEvent;
    attribute DocumentConstructor Document;
    attribute DocumentFragmentConstructor DocumentFragment;
    attribute DocumentTypeConstructor DocumentType;
    attribute DragEventConstructor DragEvent;
    attribute ElementConstructor Element;
    attribute ElementInternalsConstructor ElementInternals;
    attribute ErrorEventConstructor ErrorEvent;
    attribute EventConstructor Event;
    attribute EventTargetConstructor EventTarget;
    attribute FocusEventConstructor FocusEvent;
    attribute FormDataEventConstructor FormDataEvent;
    attribute HashChangeEventConstructor HashChangeEvent;
    [EnabledBySetting=requestIdleCallbackEnabled] attribute IdleDeadlineConstructor IdleDeadline;
    attribute InputEventConstructor InputEvent;
    attribute KeyboardEventConstructor KeyboardEvent;
    attribute MessageChannelConstructor MessageChannel;
    attribute MessageEventConstructor MessageEvent;
    attribute MessagePortConstructor MessagePort;
    attribute MouseEventConstructor MouseEvent;
    [EnabledBySetting=MutationEventsEnabled] attribute MutationEventConstructor MutationEvent;
    attribute MutationObserverConstructor MutationObserver;
    attribute MutationObserverConstructor WebKitMutationObserver; // Legacy Window alias.
    attribute MutationRecordConstructor MutationRecord;
    attribute NamedNodeMapConstructor NamedNodeMap;
    attribute NodeConstructor Node;
    attribute NodeFilterConstructor NodeFilter;
    attribute NodeIteratorConstructor NodeIterator;
    attribute NodeListConstructor NodeList;
    [EnabledBySetting=ObservableEnabled] attribute ObservableConstructor Observable;
    attribute OverflowEventConstructor OverflowEvent;
    attribute PageRevealEventConstructor PageRevealEvent;
    attribute PageSwapEventConstructor PageSwapEvent;
    attribute PageTransitionEventConstructor PageTransitionEvent;
    [DisabledByQuirk=shouldDisablePointerEvents] attribute PointerEventConstructor PointerEvent;
    attribute PopStateEventConstructor PopStateEvent;
    attribute ProcessingInstructionConstructor ProcessingInstruction;
    attribute ProgressEventConstructor ProgressEvent;
    attribute PromiseRejectionEventConstructor PromiseRejectionEvent;
    attribute RangeConstructor Range;
    attribute SecurityPolicyViolationEventConstructor SecurityPolicyViolationEvent;
    attribute ShadowRootConstructor ShadowRoot;
    attribute StaticRangeConstructor StaticRange;
    [EnabledBySetting=ObservableEnabled] attribute SubscriberConstructor Subscriber;
    attribute TextConstructor Text;
    attribute TextDecoderConstructor TextDecoder;
    attribute TextDecoderStreamConstructor TextDecoderStream;
    [PrivateIdentifier] attribute TextDecoderStreamDecoderConstructor TextDecoderStreamDecoder;
    attribute TextEncoderConstructor TextEncoder;
    attribute TextEncoderStreamConstructor TextEncoderStream;
    [PrivateIdentifier] attribute TextEncoderStreamEncoderConstructor TextEncoderStreamEncoder;
    attribute TextEventConstructor TextEvent;
    attribute ToggleEventConstructor ToggleEvent;
    [Conditional=TOUCH_EVENTS] attribute TouchConstructor Touch;
    [Conditional=TOUCH_EVENTS] attribute TouchEventConstructor TouchEvent;
    [Conditional=TOUCH_EVENTS] attribute TouchListConstructor TouchList;
    attribute TreeWalkerConstructor TreeWalker;
    [EnabledBySetting=TrustedTypesEnabled] attribute TrustedHTMLConstructor TrustedHTML;
    [EnabledBySetting=TrustedTypesEnabled] attribute TrustedScriptConstructor TrustedScript;
    [EnabledBySetting=TrustedTypesEnabled] attribute TrustedScriptURLConstructor TrustedScriptURL;
    [EnabledBySetting=TrustedTypesEnabled] attribute TrustedTypePolicyConstructor TrustedTypePolicy;
    [EnabledBySetting=TrustedTypesEnabled] attribute TrustedTypePolicyFactoryConstructor TrustedTypePolicyFactory;
    attribute UIEventConstructor UIEvent;
    [EnabledBySetting=ViewTransitionsEnabled] attribute ViewTransitionConstructor ViewTransition;
    [EnabledBySetting=ViewTransitionTypesEnabled] attribute ViewTransitionTypeSetConstructor ViewTransitionTypeSet;
    attribute WheelEventConstructor WheelEvent;
    attribute XMLDocumentConstructor XMLDocument;
    attribute BlobConstructor Blob;
    attribute FileConstructor File;
    attribute FileListConstructor FileList;
    [EnabledBySetting=FileReaderAPIEnabled] attribute FileReaderConstructor FileReader;
    attribute DOMFormDataConstructor FormData;
    attribute DOMTokenListConstructor DOMTokenList;
    attribute DOMURLConstructor URL;
    attribute DOMURLConstructor webkitURL; // Legacy Window alias.
    attribute HTMLAllCollectionConstructor HTMLAllCollection;
    attribute HTMLAnchorElementConstructor HTMLAnchorElement;
    attribute HTMLAreaElementConstructor HTMLAreaElement;
    [Conditional=ATTACHMENT_ELEMENT, EnabledByDeprecatedGlobalSetting=AttachmentElementEnabled] attribute HTMLAttachmentElementConstructor HTMLAttachmentElement;
    [Conditional=VIDEO] attribute HTMLAudioElementConstructor HTMLAudioElement;
    [Conditional=VIDEO] attribute HTMLAudioElementLegacyFactoryFunctionConstructor Audio;
    attribute HTMLBRElementConstructor HTMLBRElement;
    attribute HTMLBaseElementConstructor HTMLBaseElement;
    attribute HTMLBodyElementConstructor HTMLBodyElement;
    attribute HTMLButtonElementConstructor HTMLButtonElement;
    attribute HTMLCanvasElementConstructor HTMLCanvasElement;
    attribute HTMLCollectionConstructor HTMLCollection;
    attribute HTMLDListElementConstructor HTMLDListElement;
    attribute HTMLDataElementConstructor HTMLDataElement;
    [EnabledBySetting=DataListElementEnabled] attribute HTMLDataListElementConstructor HTMLDataListElement;
    attribute HTMLDetailsElementConstructor HTMLDetailsElement;
    attribute HTMLDialogElementConstructor HTMLDialogElement;
    attribute HTMLDirectoryElementConstructor HTMLDirectoryElement;
    attribute HTMLDivElementConstructor HTMLDivElement;
    attribute HTMLDocumentConstructor HTMLDocument;
    attribute HTMLElementConstructor HTMLElement;
    [EnabledBySetting=EmbedElementEnabled] attribute HTMLEmbedElementConstructor HTMLEmbedElement;
    attribute HTMLFieldSetElementConstructor HTMLFieldSetElement;
    attribute HTMLFontElementConstructor HTMLFontElement;
    attribute HTMLFormControlsCollectionConstructor HTMLFormControlsCollection;
    attribute HTMLFormElementConstructor HTMLFormElement;
    attribute HTMLFrameElementConstructor HTMLFrameElement;
    attribute HTMLFrameSetElementConstructor HTMLFrameSetElement;
    attribute HTMLHRElementConstructor HTMLHRElement;
    attribute HTMLHeadElementConstructor HTMLHeadElement;
    attribute HTMLHeadingElementConstructor HTMLHeadingElement;
    attribute HTMLHtmlElementConstructor HTMLHtmlElement;
    attribute HTMLIFrameElementConstructor HTMLIFrameElement;
    attribute HTMLImageElementConstructor HTMLImageElement;
    attribute HTMLImageElementLegacyFactoryFunctionConstructor Image;
    attribute HTMLInputElementConstructor HTMLInputElement;
    attribute HTMLLIElementConstructor HTMLLIElement;
    attribute HTMLLabelElementConstructor HTMLLabelElement;
    attribute HTMLLegendElementConstructor HTMLLegendElement;
    attribute HTMLLinkElementConstructor HTMLLinkElement;
    attribute HTMLMapElementConstructor HTMLMapElement;
    attribute HTMLMarqueeElementConstructor HTMLMarqueeElement;
    [Conditional=VIDEO] attribute HTMLMediaElementConstructor HTMLMediaElement;
    attribute HTMLMenuElementConstructor HTMLMenuElement;
    attribute HTMLMetaElementConstructor HTMLMetaElement;
    attribute HTMLMeterElementConstructor HTMLMeterElement;
    attribute HTMLModElementConstructor HTMLModElement;
    attribute HTMLOListElementConstructor HTMLOListElement;
    attribute HTMLObjectElementConstructor HTMLObjectElement;
    attribute HTMLOptGroupElementConstructor HTMLOptGroupElement;
    attribute HTMLOptionElementConstructor HTMLOptionElement;
    attribute HTMLOptionElementLegacyFactoryFunctionConstructor Option;
    attribute HTMLOptionsCollectionConstructor HTMLOptionsCollection;
    attribute HTMLOutputElementConstructor HTMLOutputElement;
    attribute HTMLParagraphElementConstructor HTMLParagraphElement;
    attribute HTMLParamElementConstructor HTMLParamElement;
    attribute HTMLPictureElementConstructor HTMLPictureElement;
    attribute HTMLPreElementConstructor HTMLPreElement;
    attribute HTMLProgressElementConstructor HTMLProgressElement;
    attribute HTMLQuoteElementConstructor HTMLQuoteElement;
    attribute HTMLScriptElementConstructor HTMLScriptElement;
    attribute HTMLSelectElementConstructor HTMLSelectElement;
    attribute HTMLSlotElementConstructor HTMLSlotElement;
    attribute HTMLSourceElementConstructor HTMLSourceElement;
    attribute HTMLSpanElementConstructor HTMLSpanElement;
    attribute HTMLStyleElementConstructor HTMLStyleElement;
    attribute HTMLTableCaptionElementConstructor HTMLTableCaptionElement;
    attribute HTMLTableCellElementConstructor HTMLTableCellElement;
    attribute HTMLTableColElementConstructor HTMLTableColElement;
    attribute HTMLTableElementConstructor HTMLTableElement;
    attribute HTMLTableRowElementConstructor HTMLTableRowElement;
    attribute HTMLTableSectionElementConstructor HTMLTableSectionElement;
    attribute HTMLTemplateElementConstructor HTMLTemplateElement;
    attribute HTMLTextAreaElementConstructor HTMLTextAreaElement;
    attribute HTMLTimeElementConstructor HTMLTimeElement;
    attribute HTMLTitleElementConstructor HTMLTitleElement;
    [Conditional=VIDEO] attribute HTMLTrackElementConstructor HTMLTrackElement;
    attribute HTMLUListElementConstructor HTMLUListElement;
    attribute HTMLUnknownElementConstructor HTMLUnknownElement;
    [Conditional=VIDEO] attribute HTMLVideoElementConstructor HTMLVideoElement;
    attribute ImageBitmapConstructor ImageBitmap;
    attribute ImageDataConstructor ImageData;
    [Conditional=VIDEO] attribute MediaControllerConstructor MediaController;
    [Conditional=ENCRYPTED_MEDIA, DisabledByQuirk=hasBrokenEncryptedMediaAPISupport, EnabledBySetting=EncryptedMediaAPIEnabled] attribute MediaEncryptedEventConstructor MediaEncryptedEvent;
    [Conditional=VIDEO] attribute MediaErrorConstructor MediaError;
    [Conditional=OFFSCREEN_CANVAS, EnabledBySetting=OffscreenCanvasEnabled, EnabledForContext] attribute OffscreenCanvasConstructor OffscreenCanvas;
    attribute RadioNodeListConstructor RadioNodeList;
    attribute SubmitEventConstructor SubmitEvent;
    attribute TextMetricsConstructor TextMetrics;
    [Conditional=VIDEO] attribute TimeRangesConstructor TimeRanges;
    attribute URLSearchParamsConstructor URLSearchParams;
    attribute UserActivationConstructor UserActivation;
    attribute ValidityStateConstructor ValidityState;
    [Conditional=LEGACY_ENCRYPTED_MEDIA, EnabledBySetting=LegacyEncryptedMediaAPIEnabled] attribute WebKitMediaKeyErrorConstructor WebKitMediaKeyError;
    attribute CanvasGradientConstructor CanvasGradient;
    attribute CanvasPatternConstructor CanvasPattern;
    attribute CanvasRenderingContext2DConstructor CanvasRenderingContext2D;
    [EnabledBySetting=WebGPUEnabled, SecureContext] attribute GPUCanvasContextConstructor GPUCanvasContext;
    attribute ImageBitmapRenderingContextConstructor ImageBitmapRenderingContext;
    [Conditional=OFFSCREEN_CANVAS, EnabledBySetting=OffscreenCanvasEnabled, EnabledForContext] attribute OffscreenCanvasRenderingContext2DConstructor OffscreenCanvasRenderingContext2D;
    attribute Path2DConstructor Path2D;
    [Conditional=WEBGL, EnabledBySetting=WebGLEnabled] attribute WebGL2RenderingContextConstructor WebGL2RenderingContext;
    [Conditional=WEBGL, EnabledBySetting=WebGLEnabled] attribute WebGLActiveInfoConstructor WebGLActiveInfo;
    [Conditional=WEBGL, EnabledBySetting=WebGLEnabled] attribute WebGLBufferConstructor WebGLBuffer;
    [Conditional=WEBGL, EnabledBySetting=WebGLEnabled] attribute WebGLContextEventConstructor WebGLContextEvent;
    [Conditional=WEBGL, EnabledBySetting=WebGLEnabled] attribute WebGLFramebufferConstructor WebGLFramebuffer;
    [Conditional=WEBGL, EnabledBySetting=WebGLEnabled] attribute WebGLProgramConstructor WebGLProgram;
    [Conditional=WEBGL, EnabledBySetting=WebGLEnabled] attribute WebGLQueryConstructor WebGLQuery;
    [Conditional=WEBGL, EnabledBySetting=WebGLEnabled] attribute WebGLRenderbufferConstructor WebGLRenderbuffer;
    [Conditional=WEBGL, EnabledBySetting=WebGLEnabled] attribute WebGLRenderingContextConstructor WebGLRenderingContext;
    [Conditional=WEBGL, EnabledBySetting=WebGLEnabled] attribute WebGLSamplerConstructor WebGLSampler;
    [Conditional=WEBGL, EnabledBySetting=WebGLEnabled] attribute WebGLShaderConstructor WebGLShader;
    [Conditional=WEBGL, EnabledBySetting=WebGLEnabled] attribute WebGLShaderPrecisionFormatConstructor WebGLShaderPrecisionFormat;
    [Conditional=WEBGL, EnabledBySetting=WebGLEnabled] attribute WebGLSyncConstructor WebGLSync;
    [Conditional=WEBGL, EnabledBySetting=WebGLEnabled] attribute WebGLTextureConstructor WebGLTexture;
    [Conditional=WEBGL, EnabledBySetting=WebGLEnabled] attribute WebGLTransformFeedbackConstructor WebGLTransformFeedback;
    [Conditional=WEBGL, EnabledBySetting=WebGLEnabled] attribute WebGLUniformLocationConstructor WebGLUniformLocation;
    [Conditional=WEBGL, EnabledBySetting=WebGLEnabled] attribute WebGLVertexArrayObjectConstructor WebGLVertexArrayObject;
    [EnabledBySetting=CloseWatcherEnabled] attribute CloseWatcherConstructor CloseWatcher;
    [Conditional=VIDEO] attribute AudioTrackConstructor AudioTrack;
    [Conditional=VIDEO] attribute AudioTrackConfigurationConstructor AudioTrackConfiguration;
    [Conditional=VIDEO] attribute AudioTrackListConstructor AudioTrackList;
    [Conditional=VIDEO] attribute DataCueConstructor DataCue;
    [Conditional=VIDEO] attribute TextTrackConstructor TextTrack;
    [Conditional=VIDEO, LegacyFactoryFunctionEnabledBySetting=GenericCueAPIEnabled] attribute TextTrackCueConstructor TextTrackCue;
    [Conditional=VIDEO] attribute TextTrackCueListConstructor TextTrackCueList;
    [Conditional=VIDEO] attribute TextTrackListConstructor TextTrackList;
    [Conditional=VIDEO] attribute TrackEventConstructor TrackEvent;
    [Conditional=VIDEO] attribute VTTCueConstructor VTTCue;
    [Conditional=VIDEO] attribute VTTRegionConstructor VTTRegion;
    [Conditional=VIDEO] attribute VideoTrackConstructor VideoTrack;
    [Conditional=VIDEO] attribute VideoTrackConfigurationConstructor VideoTrackConfiguration;
    [Conditional=VIDEO] attribute VideoTrackListConstructor VideoTrackList;
    [Conditional=MATHML, EnabledBySetting=MathMLEnabled] attribute MathMLElementConstructor MathMLElement;
    [Conditional=MATHML, EnabledBySetting=MathMLEnabled] attribute MathMLMathElementConstructor MathMLMathElement;
    attribute BarPropConstructor BarProp;
    attribute CryptoConstructor Crypto;
    attribute DOMSelectionConstructor Selection;
    attribute DOMWindowConstructor Window;
    [EnabledBySetting=EventTimingEnabled] attribute EventCountsConstructor EventCounts;
    attribute EventSourceConstructor EventSource;
    [EnabledBySetting=ScrollToTextFragmentFeatureDetectionEnabled] attribute FragmentDirectiveConstructor FragmentDirective;
    attribute HistoryConstructor History;
    attribute IntersectionObserverConstructor IntersectionObserver;
    attribute IntersectionObserverEntryConstructor IntersectionObserverEntry;
    attribute LocationConstructor Location;
    [EnabledBySetting=NavigationAPIEnabled] attribute NavigateEventConstructor NavigateEvent;
    [EnabledBySetting=NavigationAPIEnabled] attribute NavigationConstructor Navigation;
    attribute NavigationActivationConstructor NavigationActivation;
    [EnabledBySetting=NavigationAPIEnabled] attribute NavigationCurrentEntryChangeEventConstructor NavigationCurrentEntryChangeEvent;
    [EnabledBySetting=NavigationAPIEnabled] attribute NavigationDestinationConstructor NavigationDestination;
    [EnabledBySetting=NavigationAPIEnabled] attribute NavigationHistoryEntryConstructor NavigationHistoryEntry;
    [EnabledBySetting=NavigationAPIEnabled] attribute NavigationTransitionConstructor NavigationTransition;
    attribute NavigatorConstructor Navigator;
    [EnabledBySetting=NavigatorUserAgentDataJavaScriptAPIEnabled] attribute NavigatorUADataConstructor NavigatorUAData;
    attribute PerformanceConstructor Performance;
    attribute PerformanceEntryConstructor PerformanceEntry;
    [EnabledBySetting=EventTimingEnabled] attribute PerformanceEventTimingConstructor PerformanceEventTiming;
    attribute PerformanceMarkConstructor PerformanceMark;
    attribute PerformanceMeasureConstructor PerformanceMeasure;
    attribute PerformanceNavigationConstructor PerformanceNavigation;
    attribute PerformanceNavigationTimingConstructor PerformanceNavigationTiming;
    attribute PerformanceObserverConstructor PerformanceObserver;
    attribute PerformanceObserverEntryListConstructor PerformanceObserverEntryList;
    attribute PerformancePaintTimingConstructor PerformancePaintTiming;
    attribute PerformanceResourceTimingConstructor PerformanceResourceTiming;
    attribute PerformanceServerTimingConstructor PerformanceServerTiming;
    attribute PerformanceTimingConstructor PerformanceTiming;
    attribute ResizeObserverConstructor ResizeObserver;
    attribute ResizeObserverEntryConstructor ResizeObserverEntry;
    attribute ResizeObserverSizeConstructor ResizeObserverSize;
    attribute ScreenConstructor Screen;
    [EnabledBySetting=ScreenOrientationAPIEnabled] attribute ScreenOrientationConstructor ScreenOrientation;
    [EnabledBySetting=UndoManagerAPIEnabled] attribute UndoItemConstructor UndoItem;
    [EnabledBySetting=UndoManagerAPIEnabled] attribute UndoManagerConstructor UndoManager;
    [Conditional=USER_MESSAGE_HANDLERS] attribute UserMessageHandlerConstructor UserMessageHandler;
    [Conditional=USER_MESSAGE_HANDLERS] attribute UserMessageHandlersNamespaceConstructor UserMessageHandlersNamespace;
    [EnabledBySetting=VisualViewportAPIEnabled] attribute VisualViewportConstructor VisualViewport;
    [Conditional=USER_MESSAGE_HANDLERS] attribute WebKitNamespaceConstructor WebKitNamespace;
    [EnabledForWorld=nodeInfoEnabled] attribute WebKitNodeInfoConstructor WebKitNodeInfo;
    attribute WebKitPointConstructor WebKitPoint;
    [EnabledForWorld=nodeInfoEnabled] attribute WebKitSerializedNodeConstructor WebKitSerializedNode;
    attribute CSPViolationReportBodyConstructor CSPViolationReportBody;
    attribute DOMMimeTypeConstructor MimeType;
    attribute DOMMimeTypeArrayConstructor MimeTypeArray;
    attribute DOMPluginConstructor Plugin;
    attribute DOMPluginArrayConstructor PluginArray;
    attribute StorageConstructor Storage;
    attribute StorageEventConstructor StorageEvent;
    attribute SVGAElementConstructor SVGAElement;
    attribute SVGAngleConstructor SVGAngle;
    attribute SVGAnimateElementConstructor SVGAnimateElement;
    attribute SVGAnimateMotionElementConstructor SVGAnimateMotionElement;
    attribute SVGAnimateTransformElementConstructor SVGAnimateTransformElement;
    attribute SVGAnimatedAngleConstructor SVGAnimatedAngle;
    attribute SVGAnimatedBooleanConstructor SVGAnimatedBoolean;
    attribute SVGAnimatedEnumerationConstructor SVGAnimatedEnumeration;
    attribute SVGAnimatedIntegerConstructor SVGAnimatedInteger;
    attribute SVGAnimatedLengthConstructor SVGAnimatedLength;
    attribute SVGAnimatedLengthListConstructor SVGAnimatedLengthList;
    attribute SVGAnimatedNumberConstructor SVGAnimatedNumber;
    attribute SVGAnimatedNumberListConstructor SVGAnimatedNumberList;
    attribute SVGAnimatedPreserveAspectRatioConstructor SVGAnimatedPreserveAspectRatio;
    attribute SVGAnimatedRectConstructor SVGAnimatedRect;
    attribute SVGAnimatedStringConstructor SVGAnimatedString;
    attribute SVGAnimatedTransformListConstructor SVGAnimatedTransformList;
    attribute SVGAnimationElementConstructor SVGAnimationElement;
    attribute SVGCircleElementConstructor SVGCircleElement;
    attribute SVGClipPathElementConstructor SVGClipPathElement;
    attribute SVGComponentTransferFunctionElementConstructor SVGComponentTransferFunctionElement;
    attribute SVGDefsElementConstructor SVGDefsElement;
    attribute SVGDescElementConstructor SVGDescElement;
    attribute SVGElementConstructor SVGElement;
    attribute SVGEllipseElementConstructor SVGEllipseElement;
    attribute SVGFEBlendElementConstructor SVGFEBlendElement;
    attribute SVGFEColorMatrixElementConstructor SVGFEColorMatrixElement;
    attribute SVGFEComponentTransferElementConstructor SVGFEComponentTransferElement;
    attribute SVGFECompositeElementConstructor SVGFECompositeElement;
    attribute SVGFEConvolveMatrixElementConstructor SVGFEConvolveMatrixElement;
    attribute SVGFEDiffuseLightingElementConstructor SVGFEDiffuseLightingElement;
    attribute SVGFEDisplacementMapElementConstructor SVGFEDisplacementMapElement;
    attribute SVGFEDistantLightElementConstructor SVGFEDistantLightElement;
    attribute SVGFEDropShadowElementConstructor SVGFEDropShadowElement;
    attribute SVGFEFloodElementConstructor SVGFEFloodElement;
    attribute SVGFEFuncAElementConstructor SVGFEFuncAElement;
    attribute SVGFEFuncBElementConstructor SVGFEFuncBElement;
    attribute SVGFEFuncGElementConstructor SVGFEFuncGElement;
    attribute SVGFEFuncRElementConstructor SVGFEFuncRElement;
    attribute SVGFEGaussianBlurElementConstructor SVGFEGaussianBlurElement;
    attribute SVGFEImageElementConstructor SVGFEImageElement;
    attribute SVGFEMergeElementConstructor SVGFEMergeElement;
    attribute SVGFEMergeNodeElementConstructor SVGFEMergeNodeElement;
    attribute SVGFEMorphologyElementConstructor SVGFEMorphologyElement;
    attribute SVGFEOffsetElementConstructor SVGFEOffsetElement;
    attribute SVGFEPointLightElementConstructor SVGFEPointLightElement;
    attribute SVGFESpecularLightingElementConstructor SVGFESpecularLightingElement;
    attribute SVGFESpotLightElementConstructor SVGFESpotLightElement;
    attribute SVGFETileElementConstructor SVGFETileElement;
    attribute SVGFETurbulenceElementConstructor SVGFETurbulenceElement;
    attribute SVGFilterElementConstructor SVGFilterElement;
    attribute SVGForeignObjectElementConstructor SVGForeignObjectElement;
    attribute SVGGElementConstructor SVGGElement;
    attribute SVGGeometryElementConstructor SVGGeometryElement;
    attribute SVGGradientElementConstructor SVGGradientElement;
    attribute SVGGraphicsElementConstructor SVGGraphicsElement;
    attribute SVGImageElementConstructor SVGImageElement;
    attribute SVGLengthConstructor SVGLength;
    attribute SVGLengthListConstructor SVGLengthList;
    attribute SVGLineElementConstructor SVGLineElement;
    attribute SVGLinearGradientElementConstructor SVGLinearGradientElement;
    attribute SVGMPathElementConstructor SVGMPathElement;
    attribute SVGMarkerElementConstructor SVGMarkerElement;
    attribute SVGMaskElementConstructor SVGMaskElement;
    attribute SVGMatrixConstructor SVGMatrix;
    attribute SVGMetadataElementConstructor SVGMetadataElement;
    attribute SVGNumberConstructor SVGNumber;
    attribute SVGNumberListConstructor SVGNumberList;
    attribute SVGPathElementConstructor SVGPathElement;
    attribute SVGPathSegConstructor SVGPathSeg;
    attribute SVGPathSegArcAbsConstructor SVGPathSegArcAbs;
    attribute SVGPathSegArcRelConstructor SVGPathSegArcRel;
    attribute SVGPathSegClosePathConstructor SVGPathSegClosePath;
    attribute SVGPathSegCurvetoCubicAbsConstructor SVGPathSegCurvetoCubicAbs;
    attribute SVGPathSegCurvetoCubicRelConstructor SVGPathSegCurvetoCubicRel;
    attribute SVGPathSegCurvetoCubicSmoothAbsConstructor SVGPathSegCurvetoCubicSmoothAbs;
    attribute SVGPathSegCurvetoCubicSmoothRelConstructor SVGPathSegCurvetoCubicSmoothRel;
    attribute SVGPathSegCurvetoQuadraticAbsConstructor SVGPathSegCurvetoQuadraticAbs;
    attribute SVGPathSegCurvetoQuadraticRelConstructor SVGPathSegCurvetoQuadraticRel;
    attribute SVGPathSegCurvetoQuadraticSmoothAbsConstructor SVGPathSegCurvetoQuadraticSmoothAbs;
    attribute SVGPathSegCurvetoQuadraticSmoothRelConstructor SVGPathSegCurvetoQuadraticSmoothRel;
    attribute SVGPathSegLinetoAbsConstructor SVGPathSegLinetoAbs;
    attribute SVGPathSegLinetoHorizontalAbsConstructor SVGPathSegLinetoHorizontalAbs;
    attribute SVGPathSegLinetoHorizontalRelConstructor SVGPathSegLinetoHorizontalRel;
    attribute SVGPathSegLinetoRelConstructor SVGPathSegLinetoRel;
    attribute SVGPathSegLinetoVerticalAbsConstructor SVGPathSegLinetoVerticalAbs;
    attribute SVGPathSegLinetoVerticalRelConstructor SVGPathSegLinetoVerticalRel;
    attribute SVGPathSegListConstructor SVGPathSegList;
    attribute SVGPathSegMovetoAbsConstructor SVGPathSegMovetoAbs;
    attribute SVGPathSegMovetoRelConstructor SVGPathSegMovetoRel;
    attribute SVGPatternElementConstructor SVGPatternElement;
    attribute SVGPointConstructor SVGPoint;
    attribute SVGPointListConstructor SVGPointList;
    attribute SVGPolygonElementConstructor SVGPolygonElement;
    attribute SVGPolylineElementConstructor SVGPolylineElement;
    attribute SVGPreserveAspectRatioConstructor SVGPreserveAspectRatio;
    attribute SVGRadialGradientElementConstructor SVGRadialGradientElement;
    attribute SVGRectConstructor SVGRect;
    attribute SVGRectElementConstructor SVGRectElement;
    attribute SVGSVGElementConstructor SVGSVGElement;
    attribute SVGScriptElementConstructor SVGScriptElement;
    attribute SVGSetElementConstructor SVGSetElement;
    attribute SVGStopElementConstructor SVGStopElement;
    attribute SVGStringListConstructor SVGStringList;
    attribute SVGStyleElementConstructor SVGStyleElement;
    attribute SVGSwitchElementConstructor SVGSwitchElement;
    attribute SVGSymbolElementConstructor SVGSymbolElement;
    attribute SVGTSpanElementConstructor SVGTSpanElement;
    attribute SVGTextContentElementConstructor SVGTextContentElement;
    attribute SVGTextElementConstructor SVGTextElement;
    attribute SVGTextPathElementConstructor SVGTextPathElement;
    attribute SVGTextPositioningElementConstructor SVGTextPositioningElement;
    attribute SVGTitleElementConstructor SVGTitleElement;
    attribute SVGTransformConstructor SVGTransform;
    attribute SVGTransformListConstructor SVGTransformList;
    attribute SVGUnitTypesConstructor SVGUnitTypes;
    attribute SVGUseElementConstructor SVGUseElement;
    attribute SVGViewElementConstructor SVGViewElement;
    attribute SVGViewSpecConstructor SVGViewSpec;
    attribute WorkerConstructor Worker;
    [EnabledBySetting=ServiceWorkerNavigationPreloadEnabled] attribute NavigationPreloadManagerConstructor NavigationPreloadManager;
    [EnabledBySetting=ServiceWorkersEnabled, SecureContext] attribute ServiceWorkerConstructor ServiceWorker;
    [EnabledBySetting=ServiceWorkersEnabled, SecureContext] attribute ServiceWorkerContainerConstructor ServiceWorkerContainer;
    [EnabledBySetting=ServiceWorkersEnabled, SecureContext] attribute ServiceWorkerRegistrationConstructor ServiceWorkerRegistration;
    [EnabledBySetting=ServiceWorkersEnabled&BackgroundFetchAPIEnabled] attribute BackgroundFetchManagerConstructor BackgroundFetchManager;
    [EnabledBySetting=ServiceWorkersEnabled&BackgroundFetchAPIEnabled] attribute BackgroundFetchRecordConstructor BackgroundFetchRecord;
    [EnabledBySetting=ServiceWorkersEnabled&BackgroundFetchAPIEnabled] attribute BackgroundFetchRegistrationConstructor BackgroundFetchRegistration;
    [EnabledBySetting=ServiceWorkersEnabled&BackgroundFetchAPIEnabled] attribute BackgroundFetchUpdateUIEventConstructor BackgroundFetchUpdateUIEvent;
    [EnabledBySetting=SharedWorkerEnabled] attribute SharedWorkerConstructor SharedWorker;
    attribute WorkletConstructor Worklet;
    attribute DOMParserConstructor DOMParser;
    attribute XMLHttpRequestConstructor XMLHttpRequest;
    attribute XMLHttpRequestEventTargetConstructor XMLHttpRequestEventTarget;
    attribute XMLHttpRequestProgressEventConstructor XMLHttpRequestProgressEvent;
    attribute XMLHttpRequestUploadConstructor XMLHttpRequestUpload;
    attribute XMLSerializerConstructor XMLSerializer;
    attribute XPathEvaluatorConstructor XPathEvaluator;
    attribute XPathExpressionConstructor XPathExpression;
    attribute XPathResultConstructor XPathResult;
    [Conditional=XSLT, EnabledBySetting=XsltEnabled] attribute XSLTProcessorConstructor XSLTProcessor;
};
