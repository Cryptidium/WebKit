/* C++ code produced by gperf version 3.1 */
/* Command-line: C:/Dev/gperf/gperf.exe --key-positions='*' -D -n -s 2 --output-file=CSSPropertyNames.cpp CSSPropertyNames.gperf  */

#if !((' ' == 32) && ('!' == 33) && ('"' == 34) && ('#' == 35) \
      && ('%' == 37) && ('&' == 38) && ('\'' == 39) && ('(' == 40) \
      && (')' == 41) && ('*' == 42) && ('+' == 43) && (',' == 44) \
      && ('-' == 45) && ('.' == 46) && ('/' == 47) && ('0' == 48) \
      && ('1' == 49) && ('2' == 50) && ('3' == 51) && ('4' == 52) \
      && ('5' == 53) && ('6' == 54) && ('7' == 55) && ('8' == 56) \
      && ('9' == 57) && (':' == 58) && (';' == 59) && ('<' == 60) \
      && ('=' == 61) && ('>' == 62) && ('?' == 63) && ('A' == 65) \
      && ('B' == 66) && ('C' == 67) && ('D' == 68) && ('E' == 69) \
      && ('F' == 70) && ('G' == 71) && ('H' == 72) && ('I' == 73) \
      && ('J' == 74) && ('K' == 75) && ('L' == 76) && ('M' == 77) \
      && ('N' == 78) && ('O' == 79) && ('P' == 80) && ('Q' == 81) \
      && ('R' == 82) && ('S' == 83) && ('T' == 84) && ('U' == 85) \
      && ('V' == 86) && ('W' == 87) && ('X' == 88) && ('Y' == 89) \
      && ('Z' == 90) && ('[' == 91) && ('\\' == 92) && (']' == 93) \
      && ('^' == 94) && ('_' == 95) && ('a' == 97) && ('b' == 98) \
      && ('c' == 99) && ('d' == 100) && ('e' == 101) && ('f' == 102) \
      && ('g' == 103) && ('h' == 104) && ('i' == 105) && ('j' == 106) \
      && ('k' == 107) && ('l' == 108) && ('m' == 109) && ('n' == 110) \
      && ('o' == 111) && ('p' == 112) && ('q' == 113) && ('r' == 114) \
      && ('s' == 115) && ('t' == 116) && ('u' == 117) && ('v' == 118) \
      && ('w' == 119) && ('x' == 120) && ('y' == 121) && ('z' == 122) \
      && ('{' == 123) && ('|' == 124) && ('}' == 125) && ('~' == 126))
/* The character set is not based on ISO-646.  */
#error "gperf generated tables don't work with this execution character set. Please report a bug to <bug-gperf@gnu.org>."
#endif

#line 1 "CSSPropertyNames.gperf"

// This file is automatically generated from CSSProperties.json by the process-css-properties.py script. Do not edit it.

#include "config.h"
#include "CSSPropertyNames.h"

#include "BoxSides.h"
#include "CSSProperty.h"
#include "Settings.h"
#include <string.h>
#include <wtf/ASCIICType.h>
#include <wtf/Hasher.h>
#include <wtf/text/AtomString.h>
#include <wtf/text/TextStream.h>


IGNORE_WARNINGS_BEGIN("implicit-fallthrough")
WTF_ALLOW_UNSAFE_BUFFER_USAGE_BEGIN

// Older versions of gperf like to use the `register` keyword.
#define register

namespace WebCore {

static_assert(cssPropertyIDEnumValueCount <= (std::numeric_limits<uint16_t>::max() + 1), "CSSPropertyID should fit into uint16_t.");

const std::array<CSSPropertyID, 447> computedPropertyIDs {
    CSSPropertyID::CSSPropertyAccentColor,
    CSSPropertyID::CSSPropertyAlignContent,
    CSSPropertyID::CSSPropertyAlignItems,
    CSSPropertyID::CSSPropertyAlignSelf,
    CSSPropertyID::CSSPropertyAlignmentBaseline,
    CSSPropertyID::CSSPropertyAnchorName,
    CSSPropertyID::CSSPropertyAnchorScope,
    CSSPropertyID::CSSPropertyAnimationComposition,
    CSSPropertyID::CSSPropertyAnimationDelay,
    CSSPropertyID::CSSPropertyAnimationDirection,
    CSSPropertyID::CSSPropertyAnimationDuration,
    CSSPropertyID::CSSPropertyAnimationFillMode,
    CSSPropertyID::CSSPropertyAnimationIterationCount,
    CSSPropertyID::CSSPropertyAnimationName,
    CSSPropertyID::CSSPropertyAnimationPlayState,
    CSSPropertyID::CSSPropertyAnimationRangeEnd,
    CSSPropertyID::CSSPropertyAnimationRangeStart,
    CSSPropertyID::CSSPropertyAnimationTimeline,
    CSSPropertyID::CSSPropertyAnimationTimingFunction,
    CSSPropertyID::CSSPropertyAppearance,
    CSSPropertyID::CSSPropertyAspectRatio,
    CSSPropertyID::CSSPropertyBackdropFilter,
    CSSPropertyID::CSSPropertyBackfaceVisibility,
    CSSPropertyID::CSSPropertyBackgroundAttachment,
    CSSPropertyID::CSSPropertyBackgroundBlendMode,
    CSSPropertyID::CSSPropertyBackgroundClip,
    CSSPropertyID::CSSPropertyBackgroundColor,
    CSSPropertyID::CSSPropertyBackgroundImage,
    CSSPropertyID::CSSPropertyBackgroundOrigin,
    CSSPropertyID::CSSPropertyBackgroundPositionX,
    CSSPropertyID::CSSPropertyBackgroundPositionY,
    CSSPropertyID::CSSPropertyBackgroundRepeat,
    CSSPropertyID::CSSPropertyBackgroundSize,
    CSSPropertyID::CSSPropertyBaselineShift,
    CSSPropertyID::CSSPropertyBlockEllipsis,
    CSSPropertyID::CSSPropertyBlockSize,
    CSSPropertyID::CSSPropertyBlockStepAlign,
    CSSPropertyID::CSSPropertyBlockStepInsert,
    CSSPropertyID::CSSPropertyBlockStepRound,
    CSSPropertyID::CSSPropertyBlockStepSize,
    CSSPropertyID::CSSPropertyBorderBlockEndColor,
    CSSPropertyID::CSSPropertyBorderBlockEndStyle,
    CSSPropertyID::CSSPropertyBorderBlockEndWidth,
    CSSPropertyID::CSSPropertyBorderBlockStartColor,
    CSSPropertyID::CSSPropertyBorderBlockStartStyle,
    CSSPropertyID::CSSPropertyBorderBlockStartWidth,
    CSSPropertyID::CSSPropertyBorderBottomColor,
    CSSPropertyID::CSSPropertyBorderBottomLeftRadius,
    CSSPropertyID::CSSPropertyBorderBottomRightRadius,
    CSSPropertyID::CSSPropertyBorderBottomStyle,
    CSSPropertyID::CSSPropertyBorderBottomWidth,
    CSSPropertyID::CSSPropertyBorderCollapse,
    CSSPropertyID::CSSPropertyBorderEndEndRadius,
    CSSPropertyID::CSSPropertyBorderEndStartRadius,
    CSSPropertyID::CSSPropertyBorderImageOutset,
    CSSPropertyID::CSSPropertyBorderImageRepeat,
    CSSPropertyID::CSSPropertyBorderImageSlice,
    CSSPropertyID::CSSPropertyBorderImageSource,
    CSSPropertyID::CSSPropertyBorderImageWidth,
    CSSPropertyID::CSSPropertyBorderInlineEndColor,
    CSSPropertyID::CSSPropertyBorderInlineEndStyle,
    CSSPropertyID::CSSPropertyBorderInlineEndWidth,
    CSSPropertyID::CSSPropertyBorderInlineStartColor,
    CSSPropertyID::CSSPropertyBorderInlineStartStyle,
    CSSPropertyID::CSSPropertyBorderInlineStartWidth,
    CSSPropertyID::CSSPropertyBorderLeftColor,
    CSSPropertyID::CSSPropertyBorderLeftStyle,
    CSSPropertyID::CSSPropertyBorderLeftWidth,
    CSSPropertyID::CSSPropertyBorderRightColor,
    CSSPropertyID::CSSPropertyBorderRightStyle,
    CSSPropertyID::CSSPropertyBorderRightWidth,
    CSSPropertyID::CSSPropertyBorderStartEndRadius,
    CSSPropertyID::CSSPropertyBorderStartStartRadius,
    CSSPropertyID::CSSPropertyBorderTopColor,
    CSSPropertyID::CSSPropertyBorderTopLeftRadius,
    CSSPropertyID::CSSPropertyBorderTopRightRadius,
    CSSPropertyID::CSSPropertyBorderTopStyle,
    CSSPropertyID::CSSPropertyBorderTopWidth,
    CSSPropertyID::CSSPropertyBottom,
    CSSPropertyID::CSSPropertyBoxShadow,
    CSSPropertyID::CSSPropertyBoxSizing,
    CSSPropertyID::CSSPropertyBreakAfter,
    CSSPropertyID::CSSPropertyBreakBefore,
    CSSPropertyID::CSSPropertyBreakInside,
    CSSPropertyID::CSSPropertyBufferedRendering,
    CSSPropertyID::CSSPropertyCaptionSide,
    CSSPropertyID::CSSPropertyCaretColor,
    CSSPropertyID::CSSPropertyClear,
    CSSPropertyID::CSSPropertyClip,
    CSSPropertyID::CSSPropertyClipPath,
    CSSPropertyID::CSSPropertyClipRule,
    CSSPropertyID::CSSPropertyColor,
    CSSPropertyID::CSSPropertyColorInterpolation,
    CSSPropertyID::CSSPropertyColorInterpolationFilters,
    CSSPropertyID::CSSPropertyColorScheme,
    CSSPropertyID::CSSPropertyColumnCount,
    CSSPropertyID::CSSPropertyColumnFill,
    CSSPropertyID::CSSPropertyColumnGap,
    CSSPropertyID::CSSPropertyColumnRuleColor,
    CSSPropertyID::CSSPropertyColumnRuleStyle,
    CSSPropertyID::CSSPropertyColumnRuleWidth,
    CSSPropertyID::CSSPropertyColumnSpan,
    CSSPropertyID::CSSPropertyColumnWidth,
    CSSPropertyID::CSSPropertyContain,
    CSSPropertyID::CSSPropertyContainIntrinsicBlockSize,
    CSSPropertyID::CSSPropertyContainIntrinsicHeight,
    CSSPropertyID::CSSPropertyContainIntrinsicInlineSize,
    CSSPropertyID::CSSPropertyContainIntrinsicWidth,
    CSSPropertyID::CSSPropertyContainerName,
    CSSPropertyID::CSSPropertyContainerType,
    CSSPropertyID::CSSPropertyContent,
    CSSPropertyID::CSSPropertyContentVisibility,
    CSSPropertyID::CSSPropertyContinue,
    CSSPropertyID::CSSPropertyCornerBottomLeftShape,
    CSSPropertyID::CSSPropertyCornerBottomRightShape,
    CSSPropertyID::CSSPropertyCornerEndEndShape,
    CSSPropertyID::CSSPropertyCornerEndStartShape,
    CSSPropertyID::CSSPropertyCornerStartEndShape,
    CSSPropertyID::CSSPropertyCornerStartStartShape,
    CSSPropertyID::CSSPropertyCornerTopLeftShape,
    CSSPropertyID::CSSPropertyCornerTopRightShape,
    CSSPropertyID::CSSPropertyCounterIncrement,
    CSSPropertyID::CSSPropertyCounterReset,
    CSSPropertyID::CSSPropertyCounterSet,
    CSSPropertyID::CSSPropertyCursor,
    CSSPropertyID::CSSPropertyCx,
    CSSPropertyID::CSSPropertyCy,
    CSSPropertyID::CSSPropertyD,
    CSSPropertyID::CSSPropertyDirection,
    CSSPropertyID::CSSPropertyDisplay,
    CSSPropertyID::CSSPropertyDominantBaseline,
    CSSPropertyID::CSSPropertyDynamicRangeLimit,
    CSSPropertyID::CSSPropertyEmptyCells,
    CSSPropertyID::CSSPropertyFieldSizing,
    CSSPropertyID::CSSPropertyFill,
    CSSPropertyID::CSSPropertyFillOpacity,
    CSSPropertyID::CSSPropertyFillRule,
    CSSPropertyID::CSSPropertyFilter,
    CSSPropertyID::CSSPropertyFlexBasis,
    CSSPropertyID::CSSPropertyFlexDirection,
    CSSPropertyID::CSSPropertyFlexGrow,
    CSSPropertyID::CSSPropertyFlexShrink,
    CSSPropertyID::CSSPropertyFlexWrap,
    CSSPropertyID::CSSPropertyFloat,
    CSSPropertyID::CSSPropertyFloodColor,
    CSSPropertyID::CSSPropertyFloodOpacity,
    CSSPropertyID::CSSPropertyFontFamily,
    CSSPropertyID::CSSPropertyFontFeatureSettings,
    CSSPropertyID::CSSPropertyFontKerning,
    CSSPropertyID::CSSPropertyFontOpticalSizing,
    CSSPropertyID::CSSPropertyFontPalette,
    CSSPropertyID::CSSPropertyFontSize,
    CSSPropertyID::CSSPropertyFontSizeAdjust,
    CSSPropertyID::CSSPropertyFontStyle,
    CSSPropertyID::CSSPropertyFontSynthesisSmallCaps,
    CSSPropertyID::CSSPropertyFontSynthesisStyle,
    CSSPropertyID::CSSPropertyFontSynthesisWeight,
    CSSPropertyID::CSSPropertyFontVariantAlternates,
    CSSPropertyID::CSSPropertyFontVariantCaps,
    CSSPropertyID::CSSPropertyFontVariantEastAsian,
    CSSPropertyID::CSSPropertyFontVariantEmoji,
    CSSPropertyID::CSSPropertyFontVariantLigatures,
    CSSPropertyID::CSSPropertyFontVariantNumeric,
    CSSPropertyID::CSSPropertyFontVariantPosition,
    CSSPropertyID::CSSPropertyFontVariationSettings,
    CSSPropertyID::CSSPropertyFontWeight,
    CSSPropertyID::CSSPropertyFontWidth,
    CSSPropertyID::CSSPropertyGlyphOrientationHorizontal,
    CSSPropertyID::CSSPropertyGlyphOrientationVertical,
    CSSPropertyID::CSSPropertyGridAutoColumns,
    CSSPropertyID::CSSPropertyGridAutoFlow,
    CSSPropertyID::CSSPropertyGridAutoRows,
    CSSPropertyID::CSSPropertyGridColumnEnd,
    CSSPropertyID::CSSPropertyGridColumnStart,
    CSSPropertyID::CSSPropertyGridRowEnd,
    CSSPropertyID::CSSPropertyGridRowStart,
    CSSPropertyID::CSSPropertyGridTemplateAreas,
    CSSPropertyID::CSSPropertyGridTemplateColumns,
    CSSPropertyID::CSSPropertyGridTemplateRows,
    CSSPropertyID::CSSPropertyHangingPunctuation,
    CSSPropertyID::CSSPropertyHeight,
    CSSPropertyID::CSSPropertyHyphenateCharacter,
    CSSPropertyID::CSSPropertyHyphens,
    CSSPropertyID::CSSPropertyImageOrientation,
    CSSPropertyID::CSSPropertyImageRendering,
    CSSPropertyID::CSSPropertyInlineSize,
    CSSPropertyID::CSSPropertyInputSecurity,
    CSSPropertyID::CSSPropertyInsetBlockEnd,
    CSSPropertyID::CSSPropertyInsetBlockStart,
    CSSPropertyID::CSSPropertyInsetInlineEnd,
    CSSPropertyID::CSSPropertyInsetInlineStart,
    CSSPropertyID::CSSPropertyIsolation,
    CSSPropertyID::CSSPropertyJustifyContent,
    CSSPropertyID::CSSPropertyJustifyItems,
    CSSPropertyID::CSSPropertyJustifySelf,
    CSSPropertyID::CSSPropertyLeft,
    CSSPropertyID::CSSPropertyLetterSpacing,
    CSSPropertyID::CSSPropertyLightingColor,
    CSSPropertyID::CSSPropertyLineBreak,
    CSSPropertyID::CSSPropertyLineFitEdge,
    CSSPropertyID::CSSPropertyLineHeight,
    CSSPropertyID::CSSPropertyListStyleImage,
    CSSPropertyID::CSSPropertyListStylePosition,
    CSSPropertyID::CSSPropertyListStyleType,
    CSSPropertyID::CSSPropertyMarginBlockEnd,
    CSSPropertyID::CSSPropertyMarginBlockStart,
    CSSPropertyID::CSSPropertyMarginBottom,
    CSSPropertyID::CSSPropertyMarginInlineEnd,
    CSSPropertyID::CSSPropertyMarginInlineStart,
    CSSPropertyID::CSSPropertyMarginLeft,
    CSSPropertyID::CSSPropertyMarginRight,
    CSSPropertyID::CSSPropertyMarginTop,
    CSSPropertyID::CSSPropertyMarginTrim,
    CSSPropertyID::CSSPropertyMarkerEnd,
    CSSPropertyID::CSSPropertyMarkerMid,
    CSSPropertyID::CSSPropertyMarkerStart,
    CSSPropertyID::CSSPropertyMaskBorderOutset,
    CSSPropertyID::CSSPropertyMaskBorderRepeat,
    CSSPropertyID::CSSPropertyMaskBorderSlice,
    CSSPropertyID::CSSPropertyMaskBorderSource,
    CSSPropertyID::CSSPropertyMaskBorderWidth,
    CSSPropertyID::CSSPropertyMaskClip,
    CSSPropertyID::CSSPropertyMaskComposite,
    CSSPropertyID::CSSPropertyMaskImage,
    CSSPropertyID::CSSPropertyMaskMode,
    CSSPropertyID::CSSPropertyMaskOrigin,
    CSSPropertyID::CSSPropertyMaskRepeat,
    CSSPropertyID::CSSPropertyMaskSize,
    CSSPropertyID::CSSPropertyMaskType,
    CSSPropertyID::CSSPropertyMathStyle,
    CSSPropertyID::CSSPropertyMaxBlockSize,
    CSSPropertyID::CSSPropertyMaxHeight,
    CSSPropertyID::CSSPropertyMaxInlineSize,
    CSSPropertyID::CSSPropertyMaxLines,
    CSSPropertyID::CSSPropertyMaxWidth,
    CSSPropertyID::CSSPropertyMinBlockSize,
    CSSPropertyID::CSSPropertyMinHeight,
    CSSPropertyID::CSSPropertyMinInlineSize,
    CSSPropertyID::CSSPropertyMinWidth,
    CSSPropertyID::CSSPropertyMixBlendMode,
    CSSPropertyID::CSSPropertyObjectFit,
    CSSPropertyID::CSSPropertyObjectPosition,
    CSSPropertyID::CSSPropertyOffsetAnchor,
    CSSPropertyID::CSSPropertyOffsetDistance,
    CSSPropertyID::CSSPropertyOffsetPath,
    CSSPropertyID::CSSPropertyOffsetPosition,
    CSSPropertyID::CSSPropertyOffsetRotate,
    CSSPropertyID::CSSPropertyOpacity,
    CSSPropertyID::CSSPropertyOrder,
    CSSPropertyID::CSSPropertyOrphans,
    CSSPropertyID::CSSPropertyOutlineColor,
    CSSPropertyID::CSSPropertyOutlineOffset,
    CSSPropertyID::CSSPropertyOutlineStyle,
    CSSPropertyID::CSSPropertyOutlineWidth,
    CSSPropertyID::CSSPropertyOverflowAnchor,
    CSSPropertyID::CSSPropertyOverflowBlock,
    CSSPropertyID::CSSPropertyOverflowInline,
    CSSPropertyID::CSSPropertyOverflowWrap,
    CSSPropertyID::CSSPropertyOverflowX,
    CSSPropertyID::CSSPropertyOverflowY,
    CSSPropertyID::CSSPropertyOverscrollBehaviorBlock,
    CSSPropertyID::CSSPropertyOverscrollBehaviorInline,
    CSSPropertyID::CSSPropertyOverscrollBehaviorX,
    CSSPropertyID::CSSPropertyOverscrollBehaviorY,
    CSSPropertyID::CSSPropertyPaddingBlockEnd,
    CSSPropertyID::CSSPropertyPaddingBlockStart,
    CSSPropertyID::CSSPropertyPaddingBottom,
    CSSPropertyID::CSSPropertyPaddingInlineEnd,
    CSSPropertyID::CSSPropertyPaddingInlineStart,
    CSSPropertyID::CSSPropertyPaddingLeft,
    CSSPropertyID::CSSPropertyPaddingRight,
    CSSPropertyID::CSSPropertyPaddingTop,
    CSSPropertyID::CSSPropertyPaintOrder,
    CSSPropertyID::CSSPropertyPerspective,
    CSSPropertyID::CSSPropertyPerspectiveOrigin,
    CSSPropertyID::CSSPropertyPointerEvents,
    CSSPropertyID::CSSPropertyPosition,
    CSSPropertyID::CSSPropertyPositionAnchor,
    CSSPropertyID::CSSPropertyPositionArea,
    CSSPropertyID::CSSPropertyPositionTryFallbacks,
    CSSPropertyID::CSSPropertyPositionTryOrder,
    CSSPropertyID::CSSPropertyPositionVisibility,
    CSSPropertyID::CSSPropertyPrintColorAdjust,
    CSSPropertyID::CSSPropertyQuotes,
    CSSPropertyID::CSSPropertyR,
    CSSPropertyID::CSSPropertyResize,
    CSSPropertyID::CSSPropertyRight,
    CSSPropertyID::CSSPropertyRotate,
    CSSPropertyID::CSSPropertyRowGap,
    CSSPropertyID::CSSPropertyRubyAlign,
    CSSPropertyID::CSSPropertyRubyOverhang,
    CSSPropertyID::CSSPropertyRubyPosition,
    CSSPropertyID::CSSPropertyRx,
    CSSPropertyID::CSSPropertyRy,
    CSSPropertyID::CSSPropertyScale,
    CSSPropertyID::CSSPropertyScrollBehavior,
    CSSPropertyID::CSSPropertyScrollMarginBlockEnd,
    CSSPropertyID::CSSPropertyScrollMarginBlockStart,
    CSSPropertyID::CSSPropertyScrollMarginBottom,
    CSSPropertyID::CSSPropertyScrollMarginInlineEnd,
    CSSPropertyID::CSSPropertyScrollMarginInlineStart,
    CSSPropertyID::CSSPropertyScrollMarginLeft,
    CSSPropertyID::CSSPropertyScrollMarginRight,
    CSSPropertyID::CSSPropertyScrollMarginTop,
    CSSPropertyID::CSSPropertyScrollPaddingBlockEnd,
    CSSPropertyID::CSSPropertyScrollPaddingBlockStart,
    CSSPropertyID::CSSPropertyScrollPaddingBottom,
    CSSPropertyID::CSSPropertyScrollPaddingInlineEnd,
    CSSPropertyID::CSSPropertyScrollPaddingInlineStart,
    CSSPropertyID::CSSPropertyScrollPaddingLeft,
    CSSPropertyID::CSSPropertyScrollPaddingRight,
    CSSPropertyID::CSSPropertyScrollPaddingTop,
    CSSPropertyID::CSSPropertyScrollSnapAlign,
    CSSPropertyID::CSSPropertyScrollSnapStop,
    CSSPropertyID::CSSPropertyScrollSnapType,
    CSSPropertyID::CSSPropertyScrollTimelineAxis,
    CSSPropertyID::CSSPropertyScrollTimelineName,
    CSSPropertyID::CSSPropertyScrollbarColor,
    CSSPropertyID::CSSPropertyScrollbarGutter,
    CSSPropertyID::CSSPropertyScrollbarWidth,
    CSSPropertyID::CSSPropertyShapeImageThreshold,
    CSSPropertyID::CSSPropertyShapeMargin,
    CSSPropertyID::CSSPropertyShapeOutside,
    CSSPropertyID::CSSPropertyShapeRendering,
    CSSPropertyID::CSSPropertySpeakAs,
    CSSPropertyID::CSSPropertyStopColor,
    CSSPropertyID::CSSPropertyStopOpacity,
    CSSPropertyID::CSSPropertyStroke,
    CSSPropertyID::CSSPropertyStrokeColor,
    CSSPropertyID::CSSPropertyStrokeDasharray,
    CSSPropertyID::CSSPropertyStrokeDashoffset,
    CSSPropertyID::CSSPropertyStrokeLinecap,
    CSSPropertyID::CSSPropertyStrokeLinejoin,
    CSSPropertyID::CSSPropertyStrokeMiterlimit,
    CSSPropertyID::CSSPropertyStrokeOpacity,
    CSSPropertyID::CSSPropertyStrokeWidth,
    CSSPropertyID::CSSPropertyTabSize,
    CSSPropertyID::CSSPropertyTableLayout,
    CSSPropertyID::CSSPropertyTextAlign,
    CSSPropertyID::CSSPropertyTextAlignLast,
    CSSPropertyID::CSSPropertyTextAnchor,
    CSSPropertyID::CSSPropertyTextAutospace,
    CSSPropertyID::CSSPropertyTextBoxEdge,
    CSSPropertyID::CSSPropertyTextBoxTrim,
    CSSPropertyID::CSSPropertyTextCombineUpright,
    CSSPropertyID::CSSPropertyTextDecorationColor,
    CSSPropertyID::CSSPropertyTextDecorationLine,
    CSSPropertyID::CSSPropertyTextDecorationSkipInk,
    CSSPropertyID::CSSPropertyTextDecorationStyle,
    CSSPropertyID::CSSPropertyTextDecorationThickness,
    CSSPropertyID::CSSPropertyTextEmphasisColor,
    CSSPropertyID::CSSPropertyTextEmphasisPosition,
    CSSPropertyID::CSSPropertyTextEmphasisStyle,
    CSSPropertyID::CSSPropertyTextGroupAlign,
    CSSPropertyID::CSSPropertyTextIndent,
    CSSPropertyID::CSSPropertyTextJustify,
    CSSPropertyID::CSSPropertyTextOrientation,
    CSSPropertyID::CSSPropertyTextOverflow,
    CSSPropertyID::CSSPropertyTextRendering,
    CSSPropertyID::CSSPropertyTextShadow,
    CSSPropertyID::CSSPropertyTextSpacingTrim,
    CSSPropertyID::CSSPropertyTextTransform,
    CSSPropertyID::CSSPropertyTextUnderlineOffset,
    CSSPropertyID::CSSPropertyTextUnderlinePosition,
    CSSPropertyID::CSSPropertyTextWrapMode,
    CSSPropertyID::CSSPropertyTextWrapStyle,
    CSSPropertyID::CSSPropertyTimelineScope,
    CSSPropertyID::CSSPropertyTop,
    CSSPropertyID::CSSPropertyTouchAction,
    CSSPropertyID::CSSPropertyTransform,
    CSSPropertyID::CSSPropertyTransformBox,
    CSSPropertyID::CSSPropertyTransformOrigin,
    CSSPropertyID::CSSPropertyTransformStyle,
    CSSPropertyID::CSSPropertyTransitionBehavior,
    CSSPropertyID::CSSPropertyTransitionDelay,
    CSSPropertyID::CSSPropertyTransitionDuration,
    CSSPropertyID::CSSPropertyTransitionProperty,
    CSSPropertyID::CSSPropertyTransitionTimingFunction,
    CSSPropertyID::CSSPropertyTranslate,
    CSSPropertyID::CSSPropertyUnicodeBidi,
    CSSPropertyID::CSSPropertyVectorEffect,
    CSSPropertyID::CSSPropertyVerticalAlign,
    CSSPropertyID::CSSPropertyViewTimelineAxis,
    CSSPropertyID::CSSPropertyViewTimelineInset,
    CSSPropertyID::CSSPropertyViewTimelineName,
    CSSPropertyID::CSSPropertyViewTransitionClass,
    CSSPropertyID::CSSPropertyViewTransitionName,
    CSSPropertyID::CSSPropertyVisibility,
    CSSPropertyID::CSSPropertyWhiteSpaceCollapse,
    CSSPropertyID::CSSPropertyWidows,
    CSSPropertyID::CSSPropertyWidth,
    CSSPropertyID::CSSPropertyWillChange,
    CSSPropertyID::CSSPropertyWordBreak,
    CSSPropertyID::CSSPropertyWordSpacing,
    CSSPropertyID::CSSPropertyWritingMode,
    CSSPropertyID::CSSPropertyX,
    CSSPropertyID::CSSPropertyY,
    CSSPropertyID::CSSPropertyZIndex,
    CSSPropertyID::CSSPropertyZoom,
    CSSPropertyID::CSSPropertyAppleColorFilter,
    CSSPropertyID::CSSPropertyWebkitBackdropFilter,
    CSSPropertyID::CSSPropertyWebkitBackgroundClip,
    CSSPropertyID::CSSPropertyWebkitBackgroundOrigin,
    CSSPropertyID::CSSPropertyWebkitBorderHorizontalSpacing,
    CSSPropertyID::CSSPropertyWebkitBorderVerticalSpacing,
    CSSPropertyID::CSSPropertyWebkitBoxAlign,
    CSSPropertyID::CSSPropertyWebkitBoxDecorationBreak,
    CSSPropertyID::CSSPropertyWebkitBoxDirection,
    CSSPropertyID::CSSPropertyWebkitBoxFlex,
    CSSPropertyID::CSSPropertyWebkitBoxFlexGroup,
    CSSPropertyID::CSSPropertyWebkitBoxLines,
    CSSPropertyID::CSSPropertyWebkitBoxOrdinalGroup,
    CSSPropertyID::CSSPropertyWebkitBoxOrient,
    CSSPropertyID::CSSPropertyWebkitBoxPack,
    CSSPropertyID::CSSPropertyWebkitBoxReflect,
    CSSPropertyID::CSSPropertyWebkitBoxShadow,
    CSSPropertyID::CSSPropertyWebkitColumnAxis,
    CSSPropertyID::CSSPropertyWebkitColumnProgression,
    CSSPropertyID::CSSPropertyWebkitCursorVisibility,
    CSSPropertyID::CSSPropertyWebkitFontSmoothing,
    CSSPropertyID::CSSPropertyWebkitHyphenateLimitAfter,
    CSSPropertyID::CSSPropertyWebkitHyphenateLimitBefore,
    CSSPropertyID::CSSPropertyWebkitHyphenateLimitLines,
    CSSPropertyID::CSSPropertyWebkitInitialLetter,
    CSSPropertyID::CSSPropertyWebkitLineAlign,
    CSSPropertyID::CSSPropertyWebkitLineBoxContain,
    CSSPropertyID::CSSPropertyWebkitLineClamp,
    CSSPropertyID::CSSPropertyWebkitLineGrid,
    CSSPropertyID::CSSPropertyWebkitLineSnap,
    CSSPropertyID::CSSPropertyWebkitLocale,
    CSSPropertyID::CSSPropertyWebkitMaskClip,
    CSSPropertyID::CSSPropertyWebkitMaskComposite,
    CSSPropertyID::CSSPropertyWebkitMaskPositionX,
    CSSPropertyID::CSSPropertyWebkitMaskPositionY,
    CSSPropertyID::CSSPropertyWebkitMaskSourceType,
    CSSPropertyID::CSSPropertyWebkitNbspMode,
    CSSPropertyID::CSSPropertyWebkitRtlOrdering,
    CSSPropertyID::CSSPropertyWebkitRubyPosition,
    CSSPropertyID::CSSPropertyWebkitTextCombine,
    CSSPropertyID::CSSPropertyWebkitTextFillColor,
    CSSPropertyID::CSSPropertyWebkitTextSecurity,
    CSSPropertyID::CSSPropertyWebkitTextStrokeColor,
    CSSPropertyID::CSSPropertyWebkitTextStrokeWidth,
    CSSPropertyID::CSSPropertyWebkitTextZoom,
    CSSPropertyID::CSSPropertyWebkitUserDrag,
    CSSPropertyID::CSSPropertyWebkitUserModify,
    CSSPropertyID::CSSPropertyWebkitUserSelect,
};

constexpr ASCIILiteral propertyNameStrings[numCSSProperties] = {
    "color-scheme"_s,
    "ruby-position"_s,
    "writing-mode"_s,
    "direction"_s,
    "display"_s,
    "font-family"_s,
    "font-feature-settings"_s,
    "font-kerning"_s,
    "font-optical-sizing"_s,
    "font-palette"_s,
    "font-size"_s,
    "font-size-adjust"_s,
    "font-style"_s,
    "font-synthesis-small-caps"_s,
    "font-synthesis-style"_s,
    "font-synthesis-weight"_s,
    "font-variant-alternates"_s,
    "font-variant-caps"_s,
    "font-variant-east-asian"_s,
    "font-variant-emoji"_s,
    "font-variant-ligatures"_s,
    "font-variant-numeric"_s,
    "font-variant-position"_s,
    "font-variation-settings"_s,
    "font-weight"_s,
    "font-width"_s,
    "text-orientation"_s,
    "text-rendering"_s,
    "zoom"_s,
    "-webkit-font-smoothing"_s,
    "-webkit-locale"_s,
    "-webkit-text-zoom"_s,
    "letter-spacing"_s,
    "text-autospace"_s,
    "text-spacing-trim"_s,
    "accent-color"_s,
    "additive-symbols"_s,
    "align-content"_s,
    "align-items"_s,
    "align-self"_s,
    "alignment-baseline"_s,
    "anchor-name"_s,
    "anchor-scope"_s,
    "animation-composition"_s,
    "animation-delay"_s,
    "animation-direction"_s,
    "animation-duration"_s,
    "animation-fill-mode"_s,
    "animation-iteration-count"_s,
    "animation-name"_s,
    "animation-play-state"_s,
    "animation-range-end"_s,
    "animation-range-start"_s,
    "animation-timeline"_s,
    "animation-timing-function"_s,
    "appearance"_s,
    "aspect-ratio"_s,
    "backdrop-filter"_s,
    "backface-visibility"_s,
    "background-attachment"_s,
    "background-blend-mode"_s,
    "background-clip"_s,
    "background-color"_s,
    "background-image"_s,
    "background-origin"_s,
    "background-position-x"_s,
    "background-position-y"_s,
    "background-repeat"_s,
    "background-size"_s,
    "base-palette"_s,
    "baseline-shift"_s,
    "block-ellipsis"_s,
    "block-step-align"_s,
    "block-step-insert"_s,
    "block-step-round"_s,
    "block-step-size"_s,
    "border-collapse"_s,
    "border-image-outset"_s,
    "border-image-repeat"_s,
    "border-image-slice"_s,
    "border-image-source"_s,
    "border-image-width"_s,
    "box-shadow"_s,
    "box-sizing"_s,
    "break-after"_s,
    "break-before"_s,
    "break-inside"_s,
    "buffered-rendering"_s,
    "caption-side"_s,
    "caret-color"_s,
    "clear"_s,
    "clip"_s,
    "clip-path"_s,
    "clip-rule"_s,
    "color"_s,
    "color-interpolation"_s,
    "color-interpolation-filters"_s,
    "column-count"_s,
    "column-fill"_s,
    "column-gap"_s,
    "column-rule-color"_s,
    "column-rule-style"_s,
    "column-rule-width"_s,
    "column-span"_s,
    "column-width"_s,
    "contain"_s,
    "container-name"_s,
    "container-type"_s,
    "content"_s,
    "content-visibility"_s,
    "continue"_s,
    "counter-increment"_s,
    "counter-reset"_s,
    "counter-set"_s,
    "cursor"_s,
    "cx"_s,
    "cy"_s,
    "d"_s,
    "dominant-baseline"_s,
    "dynamic-range-limit"_s,
    "empty-cells"_s,
    "fallback"_s,
    "field-sizing"_s,
    "fill"_s,
    "fill-opacity"_s,
    "fill-rule"_s,
    "filter"_s,
    "flex-basis"_s,
    "flex-direction"_s,
    "flex-grow"_s,
    "flex-shrink"_s,
    "flex-wrap"_s,
    "float"_s,
    "flood-color"_s,
    "flood-opacity"_s,
    "font-display"_s,
    "glyph-orientation-horizontal"_s,
    "glyph-orientation-vertical"_s,
    "grid-auto-columns"_s,
    "grid-auto-flow"_s,
    "grid-auto-rows"_s,
    "grid-column-end"_s,
    "grid-column-start"_s,
    "grid-row-end"_s,
    "grid-row-start"_s,
    "grid-template-areas"_s,
    "grid-template-columns"_s,
    "grid-template-rows"_s,
    "hanging-punctuation"_s,
    "hyphenate-character"_s,
    "hyphens"_s,
    "image-orientation"_s,
    "image-rendering"_s,
    "inherits"_s,
    "initial-value"_s,
    "input-security"_s,
    "isolation"_s,
    "justify-content"_s,
    "justify-items"_s,
    "justify-self"_s,
    "lighting-color"_s,
    "line-break"_s,
    "line-fit-edge"_s,
    "line-height"_s,
    "list-style-image"_s,
    "list-style-position"_s,
    "list-style-type"_s,
    "margin-trim"_s,
    "marker-end"_s,
    "marker-mid"_s,
    "marker-start"_s,
    "mask-border-outset"_s,
    "mask-border-repeat"_s,
    "mask-border-slice"_s,
    "mask-border-source"_s,
    "mask-border-width"_s,
    "mask-clip"_s,
    "mask-composite"_s,
    "mask-image"_s,
    "mask-mode"_s,
    "mask-origin"_s,
    "mask-repeat"_s,
    "mask-size"_s,
    "mask-type"_s,
    "math-style"_s,
    "max-lines"_s,
    "mix-blend-mode"_s,
    "navigation"_s,
    "negative"_s,
    "object-fit"_s,
    "object-position"_s,
    "offset-anchor"_s,
    "offset-distance"_s,
    "offset-path"_s,
    "offset-position"_s,
    "offset-rotate"_s,
    "opacity"_s,
    "order"_s,
    "orphans"_s,
    "outline-color"_s,
    "outline-offset"_s,
    "outline-style"_s,
    "outline-width"_s,
    "overflow-anchor"_s,
    "overflow-wrap"_s,
    "override-colors"_s,
    "pad"_s,
    "page"_s,
    "paint-order"_s,
    "perspective"_s,
    "perspective-origin-x"_s,
    "perspective-origin-y"_s,
    "pointer-events"_s,
    "position"_s,
    "position-anchor"_s,
    "position-area"_s,
    "position-try-fallbacks"_s,
    "position-try-order"_s,
    "position-visibility"_s,
    "prefix"_s,
    "print-color-adjust"_s,
    "quotes"_s,
    "r"_s,
    "range"_s,
    "resize"_s,
    "rotate"_s,
    "row-gap"_s,
    "ruby-align"_s,
    "ruby-overhang"_s,
    "rx"_s,
    "ry"_s,
    "scale"_s,
    "scroll-behavior"_s,
    "scroll-snap-align"_s,
    "scroll-snap-stop"_s,
    "scroll-snap-type"_s,
    "scroll-timeline-axis"_s,
    "scroll-timeline-name"_s,
    "scrollbar-color"_s,
    "scrollbar-gutter"_s,
    "scrollbar-width"_s,
    "shape-image-threshold"_s,
    "shape-margin"_s,
    "shape-outside"_s,
    "shape-rendering"_s,
    "size"_s,
    "size-adjust"_s,
    "speak-as"_s,
    "src"_s,
    "stop-color"_s,
    "stop-opacity"_s,
    "stroke"_s,
    "stroke-color"_s,
    "stroke-dasharray"_s,
    "stroke-dashoffset"_s,
    "stroke-linecap"_s,
    "stroke-linejoin"_s,
    "stroke-miterlimit"_s,
    "stroke-opacity"_s,
    "stroke-width"_s,
    "suffix"_s,
    "symbols"_s,
    "syntax"_s,
    "system"_s,
    "tab-size"_s,
    "table-layout"_s,
    "text-align"_s,
    "text-align-last"_s,
    "text-anchor"_s,
    "text-box-edge"_s,
    "text-box-trim"_s,
    "text-combine-upright"_s,
    "text-decoration-color"_s,
    "text-decoration-line"_s,
    "text-decoration-skip-ink"_s,
    "text-decoration-style"_s,
    "text-decoration-thickness"_s,
    "text-emphasis-color"_s,
    "text-emphasis-position"_s,
    "text-emphasis-style"_s,
    "text-group-align"_s,
    "text-indent"_s,
    "text-justify"_s,
    "text-overflow"_s,
    "text-shadow"_s,
    "text-transform"_s,
    "text-underline-offset"_s,
    "text-underline-position"_s,
    "text-wrap-mode"_s,
    "text-wrap-style"_s,
    "timeline-scope"_s,
    "touch-action"_s,
    "transform"_s,
    "transform-box"_s,
    "transform-origin-x"_s,
    "transform-origin-y"_s,
    "transform-origin-z"_s,
    "transform-style"_s,
    "transition-behavior"_s,
    "transition-delay"_s,
    "transition-duration"_s,
    "transition-property"_s,
    "transition-timing-function"_s,
    "translate"_s,
    "types"_s,
    "unicode-bidi"_s,
    "unicode-range"_s,
    "vector-effect"_s,
    "vertical-align"_s,
    "view-timeline-axis"_s,
    "view-timeline-inset"_s,
    "view-timeline-name"_s,
    "view-transition-class"_s,
    "view-transition-name"_s,
    "visibility"_s,
    "white-space-collapse"_s,
    "widows"_s,
    "will-change"_s,
    "word-break"_s,
    "x"_s,
    "y"_s,
    "z-index"_s,
    "-apple-color-filter"_s,
    "-webkit-backdrop-filter"_s,
    "-webkit-background-clip"_s,
    "-webkit-background-origin"_s,
    "-webkit-border-horizontal-spacing"_s,
    "-webkit-border-vertical-spacing"_s,
    "-webkit-box-align"_s,
    "-webkit-box-decoration-break"_s,
    "-webkit-box-direction"_s,
    "-webkit-box-flex"_s,
    "-webkit-box-flex-group"_s,
    "-webkit-box-lines"_s,
    "-webkit-box-ordinal-group"_s,
    "-webkit-box-orient"_s,
    "-webkit-box-pack"_s,
    "-webkit-box-reflect"_s,
    "-webkit-box-shadow"_s,
    "-webkit-column-axis"_s,
    "-webkit-column-progression"_s,
    "-webkit-cursor-visibility"_s,
    "-webkit-font-size-delta"_s,
    "-webkit-hyphenate-limit-after"_s,
    "-webkit-hyphenate-limit-before"_s,
    "-webkit-hyphenate-limit-lines"_s,
    "-webkit-initial-letter"_s,
    "-webkit-line-align"_s,
    "-webkit-line-box-contain"_s,
    "-webkit-line-clamp"_s,
    "-webkit-line-grid"_s,
    "-webkit-line-snap"_s,
    "-webkit-marquee-direction"_s,
    "-webkit-marquee-increment"_s,
    "-webkit-marquee-repetition"_s,
    "-webkit-marquee-speed"_s,
    "-webkit-marquee-style"_s,
    "-webkit-mask-clip"_s,
    "-webkit-mask-composite"_s,
    "-webkit-mask-position-x"_s,
    "-webkit-mask-position-y"_s,
    "-webkit-mask-source-type"_s,
    "-webkit-nbsp-mode"_s,
    "-webkit-rtl-ordering"_s,
    "-webkit-ruby-position"_s,
    "-webkit-text-combine"_s,
    "-webkit-text-decorations-in-effect"_s,
    "-webkit-text-fill-color"_s,
    "-webkit-text-security"_s,
    "-webkit-text-stroke-color"_s,
    "-webkit-text-stroke-width"_s,
    "-webkit-user-drag"_s,
    "-webkit-user-modify"_s,
    "-webkit-user-select"_s,
    "word-spacing"_s,
    "border-bottom-color"_s,
    "border-bottom-left-radius"_s,
    "border-bottom-right-radius"_s,
    "border-bottom-style"_s,
    "border-bottom-width"_s,
    "border-left-color"_s,
    "border-left-style"_s,
    "border-left-width"_s,
    "border-right-color"_s,
    "border-right-style"_s,
    "border-right-width"_s,
    "border-top-color"_s,
    "border-top-left-radius"_s,
    "border-top-right-radius"_s,
    "border-top-style"_s,
    "border-top-width"_s,
    "bottom"_s,
    "contain-intrinsic-height"_s,
    "contain-intrinsic-width"_s,
    "corner-bottom-left-shape"_s,
    "corner-bottom-right-shape"_s,
    "corner-top-left-shape"_s,
    "corner-top-right-shape"_s,
    "height"_s,
    "left"_s,
    "margin-bottom"_s,
    "margin-left"_s,
    "margin-right"_s,
    "margin-top"_s,
    "max-height"_s,
    "max-width"_s,
    "min-height"_s,
    "min-width"_s,
    "overflow-x"_s,
    "overflow-y"_s,
    "overscroll-behavior-x"_s,
    "overscroll-behavior-y"_s,
    "padding-bottom"_s,
    "padding-left"_s,
    "padding-right"_s,
    "padding-top"_s,
    "right"_s,
    "scroll-margin-bottom"_s,
    "scroll-margin-left"_s,
    "scroll-margin-right"_s,
    "scroll-margin-top"_s,
    "scroll-padding-bottom"_s,
    "scroll-padding-left"_s,
    "scroll-padding-right"_s,
    "scroll-padding-top"_s,
    "top"_s,
    "width"_s,
    "block-size"_s,
    "border-block-end-color"_s,
    "border-block-end-style"_s,
    "border-block-end-width"_s,
    "border-block-start-color"_s,
    "border-block-start-style"_s,
    "border-block-start-width"_s,
    "border-end-end-radius"_s,
    "border-end-start-radius"_s,
    "border-inline-end-color"_s,
    "border-inline-end-style"_s,
    "border-inline-end-width"_s,
    "border-inline-start-color"_s,
    "border-inline-start-style"_s,
    "border-inline-start-width"_s,
    "border-start-end-radius"_s,
    "border-start-start-radius"_s,
    "contain-intrinsic-block-size"_s,
    "contain-intrinsic-inline-size"_s,
    "corner-end-end-shape"_s,
    "corner-end-start-shape"_s,
    "corner-start-end-shape"_s,
    "corner-start-start-shape"_s,
    "inline-size"_s,
    "inset-block-end"_s,
    "inset-block-start"_s,
    "inset-inline-end"_s,
    "inset-inline-start"_s,
    "margin-block-end"_s,
    "margin-block-start"_s,
    "margin-inline-end"_s,
    "margin-inline-start"_s,
    "max-block-size"_s,
    "max-inline-size"_s,
    "min-block-size"_s,
    "min-inline-size"_s,
    "overflow-block"_s,
    "overflow-inline"_s,
    "overscroll-behavior-block"_s,
    "overscroll-behavior-inline"_s,
    "padding-block-end"_s,
    "padding-block-start"_s,
    "padding-inline-end"_s,
    "padding-inline-start"_s,
    "scroll-margin-block-end"_s,
    "scroll-margin-block-start"_s,
    "scroll-margin-inline-end"_s,
    "scroll-margin-inline-start"_s,
    "scroll-padding-block-end"_s,
    "scroll-padding-block-start"_s,
    "scroll-padding-inline-end"_s,
    "scroll-padding-inline-start"_s,
    "all"_s,
    "animation"_s,
    "animation-range"_s,
    "background"_s,
    "background-position"_s,
    "block-step"_s,
    "border"_s,
    "border-block"_s,
    "border-block-color"_s,
    "border-block-end"_s,
    "border-block-start"_s,
    "border-block-style"_s,
    "border-block-width"_s,
    "border-bottom"_s,
    "border-color"_s,
    "border-image"_s,
    "border-inline"_s,
    "border-inline-color"_s,
    "border-inline-end"_s,
    "border-inline-start"_s,
    "border-inline-style"_s,
    "border-inline-width"_s,
    "border-left"_s,
    "border-radius"_s,
    "border-right"_s,
    "border-spacing"_s,
    "border-style"_s,
    "border-top"_s,
    "border-width"_s,
    "column-rule"_s,
    "columns"_s,
    "contain-intrinsic-size"_s,
    "container"_s,
    "corner-shape"_s,
    "flex"_s,
    "flex-flow"_s,
    "font"_s,
    "font-synthesis"_s,
    "font-variant"_s,
    "gap"_s,
    "grid"_s,
    "grid-area"_s,
    "grid-column"_s,
    "grid-row"_s,
    "grid-template"_s,
    "inset"_s,
    "inset-block"_s,
    "inset-inline"_s,
    "line-clamp"_s,
    "list-style"_s,
    "margin"_s,
    "margin-block"_s,
    "margin-inline"_s,
    "marker"_s,
    "mask"_s,
    "mask-border"_s,
    "mask-position"_s,
    "offset"_s,
    "outline"_s,
    "overflow"_s,
    "overscroll-behavior"_s,
    "padding"_s,
    "padding-block"_s,
    "padding-inline"_s,
    "page-break-after"_s,
    "page-break-before"_s,
    "page-break-inside"_s,
    "perspective-origin"_s,
    "place-content"_s,
    "place-items"_s,
    "place-self"_s,
    "position-try"_s,
    "scroll-margin"_s,
    "scroll-margin-block"_s,
    "scroll-margin-inline"_s,
    "scroll-padding"_s,
    "scroll-padding-block"_s,
    "scroll-padding-inline"_s,
    "scroll-timeline"_s,
    "text-box"_s,
    "text-decoration"_s,
    "text-decoration-skip"_s,
    "text-emphasis"_s,
    "text-wrap"_s,
    "transform-origin"_s,
    "transition"_s,
    "view-timeline"_s,
    "white-space"_s,
    "-webkit-background-size"_s,
    "-webkit-border-image"_s,
    "-webkit-border-radius"_s,
    "-webkit-column-break-after"_s,
    "-webkit-column-break-before"_s,
    "-webkit-column-break-inside"_s,
    "-webkit-mask"_s,
    "-webkit-mask-box-image"_s,
    "-webkit-mask-position"_s,
    "-webkit-perspective"_s,
    "-webkit-text-decoration"_s,
    "-webkit-text-orientation"_s,
    "-webkit-text-stroke"_s,
};

#line 1062 "CSSPropertyNames.gperf"
struct CSSPropertyHashTableEntry {
    const char* name;
    uint16_t id;
};
enum
  {
    TOTAL_KEYWORDS = 716,
    MIN_WORD_LENGTH = 1,
    MAX_WORD_LENGTH = 34,
    MIN_HASH_VALUE = 2,
    MAX_HASH_VALUE = 9592
  };

/* maximum key range = 9591, duplicates = 1 */

class CSSPropertyNamesHash
{
private:
  static inline unsigned int hash (const char *str, size_t len);
public:
  static const struct CSSPropertyHashTableEntry *in_word_set (const char *str, size_t len);
};

inline unsigned int
CSSPropertyNamesHash::hash (const char *str, size_t len)
{
  static const unsigned short asso_values[] =
    {
      9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593,
      9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593,
      9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593,
      9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593,
      9593, 9593, 9593, 9593, 9593,    0,  175, 9593, 9593, 9593,
      9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593,
      9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593,
      9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593,
      9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593, 9593,
      9593, 9593, 9593, 9593, 9593, 9593, 9593,   70,  650,   10,
       420,   10,    2,  155,  272,    0,  380, 1210,    0,  150,
         0,    0,  130,  145,    5,   30,   35, 1815,   37, 1565,
       662,  777,  610,    5, 9593, 9593, 9593, 9593, 9593
    };
  unsigned int hval = 0;

  switch (len)
    {
      default:
        hval += asso_values[static_cast<unsigned char>(str[33])];
      /*FALLTHROUGH*/
      case 33:
        hval += asso_values[static_cast<unsigned char>(str[32])];
      /*FALLTHROUGH*/
      case 32:
        hval += asso_values[static_cast<unsigned char>(str[31])];
      /*FALLTHROUGH*/
      case 31:
        hval += asso_values[static_cast<unsigned char>(str[30])];
      /*FALLTHROUGH*/
      case 30:
        hval += asso_values[static_cast<unsigned char>(str[29])];
      /*FALLTHROUGH*/
      case 29:
        hval += asso_values[static_cast<unsigned char>(str[28])];
      /*FALLTHROUGH*/
      case 28:
        hval += asso_values[static_cast<unsigned char>(str[27])];
      /*FALLTHROUGH*/
      case 27:
        hval += asso_values[static_cast<unsigned char>(str[26])];
      /*FALLTHROUGH*/
      case 26:
        hval += asso_values[static_cast<unsigned char>(str[25])];
      /*FALLTHROUGH*/
      case 25:
        hval += asso_values[static_cast<unsigned char>(str[24])];
      /*FALLTHROUGH*/
      case 24:
        hval += asso_values[static_cast<unsigned char>(str[23])];
      /*FALLTHROUGH*/
      case 23:
        hval += asso_values[static_cast<unsigned char>(str[22])];
      /*FALLTHROUGH*/
      case 22:
        hval += asso_values[static_cast<unsigned char>(str[21])];
      /*FALLTHROUGH*/
      case 21:
        hval += asso_values[static_cast<unsigned char>(str[20])];
      /*FALLTHROUGH*/
      case 20:
        hval += asso_values[static_cast<unsigned char>(str[19])];
      /*FALLTHROUGH*/
      case 19:
        hval += asso_values[static_cast<unsigned char>(str[18])];
      /*FALLTHROUGH*/
      case 18:
        hval += asso_values[static_cast<unsigned char>(str[17])];
      /*FALLTHROUGH*/
      case 17:
        hval += asso_values[static_cast<unsigned char>(str[16])];
      /*FALLTHROUGH*/
      case 16:
        hval += asso_values[static_cast<unsigned char>(str[15]+1)];
      /*FALLTHROUGH*/
      case 15:
        hval += asso_values[static_cast<unsigned char>(str[14])];
      /*FALLTHROUGH*/
      case 14:
        hval += asso_values[static_cast<unsigned char>(str[13])];
      /*FALLTHROUGH*/
      case 13:
        hval += asso_values[static_cast<unsigned char>(str[12])];
      /*FALLTHROUGH*/
      case 12:
        hval += asso_values[static_cast<unsigned char>(str[11])];
      /*FALLTHROUGH*/
      case 11:
        hval += asso_values[static_cast<unsigned char>(str[10])];
      /*FALLTHROUGH*/
      case 10:
        hval += asso_values[static_cast<unsigned char>(str[9])];
      /*FALLTHROUGH*/
      case 9:
        hval += asso_values[static_cast<unsigned char>(str[8])];
      /*FALLTHROUGH*/
      case 8:
        hval += asso_values[static_cast<unsigned char>(str[7])];
      /*FALLTHROUGH*/
      case 7:
        hval += asso_values[static_cast<unsigned char>(str[6])];
      /*FALLTHROUGH*/
      case 6:
        hval += asso_values[static_cast<unsigned char>(str[5])];
      /*FALLTHROUGH*/
      case 5:
        hval += asso_values[static_cast<unsigned char>(str[4])];
      /*FALLTHROUGH*/
      case 4:
        hval += asso_values[static_cast<unsigned char>(str[3])];
      /*FALLTHROUGH*/
      case 3:
        hval += asso_values[static_cast<unsigned char>(str[2])];
      /*FALLTHROUGH*/
      case 2:
        hval += asso_values[static_cast<unsigned char>(str[1])];
      /*FALLTHROUGH*/
      case 1:
        hval += asso_values[static_cast<unsigned char>(str[0])];
        break;
    }
  return hval;
}

static const struct CSSPropertyHashTableEntry wordlist[] =
  {
#line 1198 "CSSPropertyNames.gperf"
    {"fill", CSSPropertyID::CSSPropertyFill},
#line 1297 "CSSPropertyNames.gperf"
    {"r", CSSPropertyID::CSSPropertyR},
#line 1169 "CSSPropertyNames.gperf"
    {"color", CSSPropertyID::CSSPropertyColor},
#line 1590 "CSSPropertyNames.gperf"
    {"font", CSSPropertyID::CSSPropertyFont},
#line 1323 "CSSPropertyNames.gperf"
    {"src", CSSPropertyID::CSSPropertySrc},
#line 1474 "CSSPropertyNames.gperf"
    {"left", CSSPropertyID::CSSPropertyLeft},
#line 1201 "CSSPropertyNames.gperf"
    {"filter", CSSPropertyID::CSSPropertyFilter},
#line 1554 "CSSPropertyNames.gperf"
    {"all", CSSPropertyID::CSSPropertyAll},
#line 1599 "CSSPropertyNames.gperf"
    {"inset", CSSPropertyID::CSSPropertyInset},
#line 1611 "CSSPropertyNames.gperf"
    {"offset", CSSPropertyID::CSSPropertyOffset},
#line 1601 "CSSPropertyNames.gperf"
    {"inset-inline", CSSPropertyID::CSSPropertyInsetInline},
#line 1183 "CSSPropertyNames.gperf"
    {"content", CSSPropertyID::CSSPropertyContent},
#line 1165 "CSSPropertyNames.gperf"
    {"clear", CSSPropertyID::CSSPropertyClear},
#line 1528 "CSSPropertyNames.gperf"
    {"inset-inline-end", CSSPropertyID::CSSPropertyInsetInlineEnd},
#line 1207 "CSSPropertyNames.gperf"
    {"float", CSSPropertyID::CSSPropertyFloat},
#line 1180 "CSSPropertyNames.gperf"
    {"contain", CSSPropertyID::CSSPropertyContain},
#line 1306 "CSSPropertyNames.gperf"
    {"scale", CSSPropertyID::CSSPropertyScale},
#line 1586 "CSSPropertyNames.gperf"
    {"container", CSSPropertyID::CSSPropertyContainer},
#line 1231 "CSSPropertyNames.gperf"
    {"isolation", CSSPropertyID::CSSPropertyIsolation},
#line 1166 "CSSPropertyNames.gperf"
    {"clip", CSSPropertyID::CSSPropertyClip},
#line 1164 "CSSPropertyNames.gperf"
    {"caret-color", CSSPropertyID::CSSPropertyCaretColor},
#line 1110 "CSSPropertyNames.gperf"
    {"accent-color", CSSPropertyID::CSSPropertyAccentColor},
#line 1300 "CSSPropertyNames.gperf"
    {"rotate", CSSPropertyID::CSSPropertyRotate},
#line 1500 "CSSPropertyNames.gperf"
    {"top", CSSPropertyID::CSSPropertyTop},
#line 1382 "CSSPropertyNames.gperf"
    {"vector-effect", CSSPropertyID::CSSPropertyVectorEffect},
#line 1639 "CSSPropertyNames.gperf"
    {"transition", CSSPropertyID::CSSPropertyTransition},
#line 1288 "CSSPropertyNames.gperf"
    {"position", CSSPropertyID::CSSPropertyPosition},
#line 1324 "CSSPropertyNames.gperf"
    {"stop-color", CSSPropertyID::CSSPropertyStopColor},
#line 1270 "CSSPropertyNames.gperf"
    {"offset-rotate", CSSPropertyID::CSSPropertyOffsetRotate},
#line 1298 "CSSPropertyNames.gperf"
    {"range", CSSPropertyID::CSSPropertyRange},
#line 1632 "CSSPropertyNames.gperf"
    {"scroll-timeline", CSSPropertyID::CSSPropertyScrollTimeline},
#line 1592 "CSSPropertyNames.gperf"
    {"font-variant", CSSPropertyID::CSSPropertyFontVariant},
#line 1378 "CSSPropertyNames.gperf"
    {"translate", CSSPropertyID::CSSPropertyTranslate},
#line 1624 "CSSPropertyNames.gperf"
    {"place-self", CSSPropertyID::CSSPropertyPlaceSelf},
#line 1114 "CSSPropertyNames.gperf"
    {"align-self", CSSPropertyID::CSSPropertyAlignSelf},
#line 1269 "CSSPropertyNames.gperf"
    {"offset-position", CSSPropertyID::CSSPropertyOffsetPosition},
#line 1367 "CSSPropertyNames.gperf"
    {"transform", CSSPropertyID::CSSPropertyTransform},
#line 1287 "CSSPropertyNames.gperf"
    {"pointer-events", CSSPropertyID::CSSPropertyPointerEvents},
#line 1622 "CSSPropertyNames.gperf"
    {"place-content", CSSPropertyID::CSSPropertyPlaceContent},
#line 1112 "CSSPropertyNames.gperf"
    {"align-content", CSSPropertyID::CSSPropertyAlignContent},
#line 1263 "CSSPropertyNames.gperf"
    {"negative", CSSPropertyID::CSSPropertyNegative},
#line 1555 "CSSPropertyNames.gperf"
    {"animation", CSSPropertyID::CSSPropertyAnimation},
#line 1084 "CSSPropertyNames.gperf"
    {"font-palette", CSSPropertyID::CSSPropertyFontPalette},
#line 1290 "CSSPropertyNames.gperf"
    {"position-area", CSSPropertyID::CSSPropertyPositionArea},
#line 1228 "CSSPropertyNames.gperf"
    {"inherits", CSSPropertyID::CSSPropertyInherits},
#line 1593 "CSSPropertyNames.gperf"
    {"gap", CSSPropertyID::CSSPropertyGap},
#line 1181 "CSSPropertyNames.gperf"
    {"container-name", CSSPropertyID::CSSPropertyContainerName},
#line 1282 "CSSPropertyNames.gperf"
    {"page", CSSPropertyID::CSSPropertyPage},
#line 1262 "CSSPropertyNames.gperf"
    {"navigation", CSSPropertyID::CSSPropertyNavigation},
#line 1602 "CSSPropertyNames.gperf"
    {"line-clamp", CSSPropertyID::CSSPropertyLineClamp},
#line 1604 "CSSPropertyNames.gperf"
    {"margin", CSSPropertyID::CSSPropertyMargin},
#line 1365 "CSSPropertyNames.gperf"
    {"timeline-scope", CSSPropertyID::CSSPropertyTimelineScope},
#line 1606 "CSSPropertyNames.gperf"
    {"margin-inline", CSSPropertyID::CSSPropertyMarginInline},
#line 1383 "CSSPropertyNames.gperf"
    {"vertical-align", CSSPropertyID::CSSPropertyVerticalAlign},
#line 1131 "CSSPropertyNames.gperf"
    {"aspect-ratio", CSSPropertyID::CSSPropertyAspectRatio},
#line 1284 "CSSPropertyNames.gperf"
    {"perspective", CSSPropertyID::CSSPropertyPerspective},
#line 1192 "CSSPropertyNames.gperf"
    {"d", CSSPropertyID::CSSPropertyD},
#line 1626 "CSSPropertyNames.gperf"
    {"scroll-margin", CSSPropertyID::CSSPropertyScrollMargin},
#line 1476 "CSSPropertyNames.gperf"
    {"margin-left", CSSPropertyID::CSSPropertyMarginLeft},
#line 1659 "CSSPropertyNames.gperf"
    {"font-stretch", CSSPropertyID::CSSPropertyFontWidth},
#line 1790 "CSSPropertyNames.gperf"
    {"font-stretch", CSSPropertyID::CSSPropertyFontWidth},
#line 1628 "CSSPropertyNames.gperf"
    {"scroll-margin-inline", CSSPropertyID::CSSPropertyScrollMarginInline},
#line 1266 "CSSPropertyNames.gperf"
    {"offset-anchor", CSSPropertyID::CSSPropertyOffsetAnchor},
#line 1208 "CSSPropertyNames.gperf"
    {"flood-color", CSSPropertyID::CSSPropertyFloodColor},
#line 1272 "CSSPropertyNames.gperf"
    {"order", CSSPropertyID::CSSPropertyOrder},
#line 1623 "CSSPropertyNames.gperf"
    {"place-items", CSSPropertyID::CSSPropertyPlaceItems},
#line 1113 "CSSPropertyNames.gperf"
    {"align-items", CSSPropertyID::CSSPropertyAlignItems},
#line 1097 "CSSPropertyNames.gperf"
    {"font-variant-position", CSSPropertyID::CSSPropertyFontVariantPosition},
#line 1638 "CSSPropertyNames.gperf"
    {"transform-origin", CSSPropertyID::CSSPropertyTransformOrigin},
#line 1493 "CSSPropertyNames.gperf"
    {"scroll-margin-left", CSSPropertyID::CSSPropertyScrollMarginLeft},
#line 1491 "CSSPropertyNames.gperf"
    {"right", CSSPropertyID::CSSPropertyRight},
#line 1083 "CSSPropertyNames.gperf"
    {"font-optical-sizing", CSSPropertyID::CSSPropertyFontOpticalSizing},
#line 1078 "CSSPropertyNames.gperf"
    {"direction", CSSPropertyID::CSSPropertyDirection},
#line 1309 "CSSPropertyNames.gperf"
    {"scroll-snap-stop", CSSPropertyID::CSSPropertyScrollSnapStop},
#line 1107 "CSSPropertyNames.gperf"
    {"letter-spacing", CSSPropertyID::CSSPropertyLetterSpacing},
#line 1075 "CSSPropertyNames.gperf"
    {"color-scheme", CSSPropertyID::CSSPropertyColorScheme},
#line 1130 "CSSPropertyNames.gperf"
    {"appearance", CSSPropertyID::CSSPropertyAppearance},
#line 1273 "CSSPropertyNames.gperf"
    {"orphans", CSSPropertyID::CSSPropertyOrphans},
#line 1092 "CSSPropertyNames.gperf"
    {"font-variant-caps", CSSPropertyID::CSSPropertyFontVariantCaps},
#line 1280 "CSSPropertyNames.gperf"
    {"override-colors", CSSPropertyID::CSSPropertyOverrideColors},
#line 1117 "CSSPropertyNames.gperf"
    {"anchor-scope", CSSPropertyID::CSSPropertyAnchorScope},
#line 1587 "CSSPropertyNames.gperf"
    {"corner-shape", CSSPropertyID::CSSPropertyCornerShape},
#line 1478 "CSSPropertyNames.gperf"
    {"margin-top", CSSPropertyID::CSSPropertyMarginTop},
#line 1289 "CSSPropertyNames.gperf"
    {"position-anchor", CSSPropertyID::CSSPropertyPositionAnchor},
#line 1098 "CSSPropertyNames.gperf"
    {"font-variation-settings", CSSPropertyID::CSSPropertyFontVariationSettings},
#line 1124 "CSSPropertyNames.gperf"
    {"animation-name", CSSPropertyID::CSSPropertyAnimationName},
#line 1397 "CSSPropertyNames.gperf"
    {"-apple-color-filter", CSSPropertyID::CSSPropertyAppleColorFilter},
#line 1556 "CSSPropertyNames.gperf"
    {"animation-range", CSSPropertyID::CSSPropertyAnimationRange},
#line 1242 "CSSPropertyNames.gperf"
    {"margin-trim", CSSPropertyID::CSSPropertyMarginTrim},
#line 1093 "CSSPropertyNames.gperf"
    {"font-variant-east-asian", CSSPropertyID::CSSPropertyFontVariantEastAsian},
#line 1594 "CSSPropertyNames.gperf"
    {"grid", CSSPropertyID::CSSPropertyGrid},
#line 1268 "CSSPropertyNames.gperf"
    {"offset-path", CSSPropertyID::CSSPropertyOffsetPath},
#line 1116 "CSSPropertyNames.gperf"
    {"anchor-name", CSSPropertyID::CSSPropertyAnchorName},
#line 1549 "CSSPropertyNames.gperf"
    {"scroll-margin-inline-start", CSSPropertyID::CSSPropertyScrollMarginInlineStart},
#line 1308 "CSSPropertyNames.gperf"
    {"scroll-snap-align", CSSPropertyID::CSSPropertyScrollSnapAlign},
#line 1281 "CSSPropertyNames.gperf"
    {"pad", CSSPropertyID::CSSPropertyPad},
#line 1235 "CSSPropertyNames.gperf"
    {"lighting-color", CSSPropertyID::CSSPropertyLightingColor},
#line 1237 "CSSPropertyNames.gperf"
    {"line-fit-edge", CSSPropertyID::CSSPropertyLineFitEdge},
#line 1167 "CSSPropertyNames.gperf"
    {"clip-path", CSSPropertyID::CSSPropertyClipPath},
#line 1320 "CSSPropertyNames.gperf"
    {"size", CSSPropertyID::CSSPropertySize},
#line 1267 "CSSPropertyNames.gperf"
    {"offset-distance", CSSPropertyID::CSSPropertyOffsetDistance},
#line 1312 "CSSPropertyNames.gperf"
    {"scroll-timeline-name", CSSPropertyID::CSSPropertyScrollTimelineName},
#line 1525 "CSSPropertyNames.gperf"
    {"inline-size", CSSPropertyID::CSSPropertyInlineSize},
#line 1394 "CSSPropertyNames.gperf"
    {"x", CSSPropertyID::CSSPropertyX},
#line 1299 "CSSPropertyNames.gperf"
    {"resize", CSSPropertyID::CSSPropertyResize},
#line 1304 "CSSPropertyNames.gperf"
    {"rx", CSSPropertyID::CSSPropertyRx},
#line 1226 "CSSPropertyNames.gperf"
    {"image-orientation", CSSPropertyID::CSSPropertyImageOrientation},
#line 1190 "CSSPropertyNames.gperf"
    {"cx", CSSPropertyID::CSSPropertyCx},
#line 1588 "CSSPropertyNames.gperf"
    {"flex", CSSPropertyID::CSSPropertyFlex},
#line 1283 "CSSPropertyNames.gperf"
    {"paint-order", CSSPropertyID::CSSPropertyPaintOrder},
#line 1621 "CSSPropertyNames.gperf"
    {"perspective-origin", CSSPropertyID::CSSPropertyPerspectiveOrigin},
#line 1118 "CSSPropertyNames.gperf"
    {"animation-composition", CSSPropertyID::CSSPropertyAnimationComposition},
#line 1085 "CSSPropertyNames.gperf"
    {"font-size", CSSPropertyID::CSSPropertyFontSize},
#line 1163 "CSSPropertyNames.gperf"
    {"caption-side", CSSPropertyID::CSSPropertyCaptionSide},
#line 1495 "CSSPropertyNames.gperf"
    {"scroll-margin-top", CSSPropertyID::CSSPropertyScrollMarginTop},
#line 1595 "CSSPropertyNames.gperf"
    {"grid-area", CSSPropertyID::CSSPropertyGridArea},
#line 1523 "CSSPropertyNames.gperf"
    {"corner-start-end-shape", CSSPropertyID::CSSPropertyCornerStartEndShape},
#line 1473 "CSSPropertyNames.gperf"
    {"height", CSSPropertyID::CSSPropertyHeight},
#line 1238 "CSSPropertyNames.gperf"
    {"line-height", CSSPropertyID::CSSPropertyLineHeight},
#line 1122 "CSSPropertyNames.gperf"
    {"animation-fill-mode", CSSPropertyID::CSSPropertyAnimationFillMode},
#line 1103 "CSSPropertyNames.gperf"
    {"zoom", CSSPropertyID::CSSPropertyZoom},
#line 1783 "CSSPropertyNames.gperf"
    {"scroll-snap-margin", CSSPropertyID::CSSPropertyScrollMargin},
#line 1395 "CSSPropertyNames.gperf"
    {"y", CSSPropertyID::CSSPropertyY},
#line 1305 "CSSPropertyNames.gperf"
    {"ry", CSSPropertyID::CSSPropertyRy},
#line 1313 "CSSPropertyNames.gperf"
    {"scrollbar-color", CSSPropertyID::CSSPropertyScrollbarColor},
#line 1191 "CSSPropertyNames.gperf"
    {"cy", CSSPropertyID::CSSPropertyCy},
#line 1294 "CSSPropertyNames.gperf"
    {"prefix", CSSPropertyID::CSSPropertyPrefix},
#line 1537 "CSSPropertyNames.gperf"
    {"min-inline-size", CSSPropertyID::CSSPropertyMinInlineSize},
#line 1743 "CSSPropertyNames.gperf"
    {"scroll-snap-margin-left", CSSPropertyID::CSSPropertyScrollMarginLeft},
#line 1532 "CSSPropertyNames.gperf"
    {"margin-inline-end", CSSPropertyID::CSSPropertyMarginInlineEnd},
#line 1529 "CSSPropertyNames.gperf"
    {"inset-inline-start", CSSPropertyID::CSSPropertyInsetInlineStart},
#line 1477 "CSSPropertyNames.gperf"
    {"margin-right", CSSPropertyID::CSSPropertyMarginRight},
#line 1548 "CSSPropertyNames.gperf"
    {"scroll-margin-inline-end", CSSPropertyID::CSSPropertyScrollMarginInlineEnd},
#line 1466 "CSSPropertyNames.gperf"
    {"bottom", CSSPropertyID::CSSPropertyBottom},
#line 1087 "CSSPropertyNames.gperf"
    {"font-style", CSSPropertyID::CSSPropertyFontStyle},
#line 1317 "CSSPropertyNames.gperf"
    {"shape-margin", CSSPropertyID::CSSPropertyShapeMargin},
#line 1481 "CSSPropertyNames.gperf"
    {"min-height", CSSPropertyID::CSSPropertyMinHeight},
#line 1101 "CSSPropertyNames.gperf"
    {"text-orientation", CSSPropertyID::CSSPropertyTextOrientation},
#line 1128 "CSSPropertyNames.gperf"
    {"animation-timeline", CSSPropertyID::CSSPropertyAnimationTimeline},
#line 1127 "CSSPropertyNames.gperf"
    {"animation-range-start", CSSPropertyID::CSSPropertyAnimationRangeStart},
#line 1603 "CSSPropertyNames.gperf"
    {"list-style", CSSPropertyID::CSSPropertyListStyle},
#line 1260 "CSSPropertyNames.gperf"
    {"max-lines", CSSPropertyID::CSSPropertyMaxLines},
#line 1094 "CSSPropertyNames.gperf"
    {"font-variant-emoji", CSSPropertyID::CSSPropertyFontVariantEmoji},
#line 1471 "CSSPropertyNames.gperf"
    {"corner-top-left-shape", CSSPropertyID::CSSPropertyCornerTopLeftShape},
#line 1781 "CSSPropertyNames.gperf"
    {"grid-gap", CSSPropertyID::CSSPropertyGap},
#line 1745 "CSSPropertyNames.gperf"
    {"scroll-snap-margin-top", CSSPropertyID::CSSPropertyScrollMarginTop},
#line 1341 "CSSPropertyNames.gperf"
    {"text-align", CSSPropertyID::CSSPropertyTextAlign},
#line 1379 "CSSPropertyNames.gperf"
    {"types", CSSPropertyID::CSSPropertyTypes},
#line 1227 "CSSPropertyNames.gperf"
    {"image-rendering", CSSPropertyID::CSSPropertyImageRendering},
#line 1625 "CSSPropertyNames.gperf"
    {"position-try", CSSPropertyID::CSSPropertyPositionTry},
#line 1598 "CSSPropertyNames.gperf"
    {"grid-template", CSSPropertyID::CSSPropertyGridTemplate},
#line 1271 "CSSPropertyNames.gperf"
    {"opacity", CSSPropertyID::CSSPropertyOpacity},
#line 1199 "CSSPropertyNames.gperf"
    {"fill-opacity", CSSPropertyID::CSSPropertyFillOpacity},
#line 1338 "CSSPropertyNames.gperf"
    {"system", CSSPropertyID::CSSPropertySystem},
#line 1080 "CSSPropertyNames.gperf"
    {"font-family", CSSPropertyID::CSSPropertyFontFamily},
#line 1360 "CSSPropertyNames.gperf"
    {"text-transform", CSSPropertyID::CSSPropertyTextTransform},
#line 1292 "CSSPropertyNames.gperf"
    {"position-try-order", CSSPropertyID::CSSPropertyPositionTryOrder},
#line 1144 "CSSPropertyNames.gperf"
    {"base-palette", CSSPropertyID::CSSPropertyBasePalette},
#line 1371 "CSSPropertyNames.gperf"
    {"transform-origin-z", CSSPropertyID::CSSPropertyTransformOriginZ},
#line 1182 "CSSPropertyNames.gperf"
    {"container-type", CSSPropertyID::CSSPropertyContainerType},
#line 1307 "CSSPropertyNames.gperf"
    {"scroll-behavior", CSSPropertyID::CSSPropertyScrollBehavior},
#line 1560 "CSSPropertyNames.gperf"
    {"border", CSSPropertyID::CSSPropertyBorder},
#line 1343 "CSSPropertyNames.gperf"
    {"text-anchor", CSSPropertyID::CSSPropertyTextAnchor},
#line 1570 "CSSPropertyNames.gperf"
    {"border-inline", CSSPropertyID::CSSPropertyBorderInline},
#line 1342 "CSSPropertyNames.gperf"
    {"text-align-last", CSSPropertyID::CSSPropertyTextAlignLast},
#line 1568 "CSSPropertyNames.gperf"
    {"border-color", CSSPropertyID::CSSPropertyBorderColor},
#line 1145 "CSSPropertyNames.gperf"
    {"baseline-shift", CSSPropertyID::CSSPropertyBaselineShift},
#line 1319 "CSSPropertyNames.gperf"
    {"shape-rendering", CSSPropertyID::CSSPropertyShapeRendering},
#line 1369 "CSSPropertyNames.gperf"
    {"transform-origin-x", CSSPropertyID::CSSPropertyTransformOriginX},
#line 1264 "CSSPropertyNames.gperf"
    {"object-fit", CSSPropertyID::CSSPropertyObjectFit},
#line 1576 "CSSPropertyNames.gperf"
    {"border-left", CSSPropertyID::CSSPropertyBorderLeft},
#line 1372 "CSSPropertyNames.gperf"
    {"transform-style", CSSPropertyID::CSSPropertyTransformStyle},
#line 1195 "CSSPropertyNames.gperf"
    {"empty-cells", CSSPropertyID::CSSPropertyEmptyCells},
#line 1203 "CSSPropertyNames.gperf"
    {"flex-direction", CSSPropertyID::CSSPropertyFlexDirection},
#line 1295 "CSSPropertyNames.gperf"
    {"print-color-adjust", CSSPropertyID::CSSPropertyPrintColorAdjust},
#line 1126 "CSSPropertyNames.gperf"
    {"animation-range-end", CSSPropertyID::CSSPropertyAnimationRangeEnd},
#line 1311 "CSSPropertyNames.gperf"
    {"scroll-timeline-axis", CSSPropertyID::CSSPropertyScrollTimelineAxis},
#line 1615 "CSSPropertyNames.gperf"
    {"padding", CSSPropertyID::CSSPropertyPadding},
#line 1617 "CSSPropertyNames.gperf"
    {"padding-inline", CSSPropertyID::CSSPropertyPaddingInline},
#line 1356 "CSSPropertyNames.gperf"
    {"text-indent", CSSPropertyID::CSSPropertyTextIndent},
#line 1325 "CSSPropertyNames.gperf"
    {"stop-opacity", CSSPropertyID::CSSPropertyStopOpacity},
#line 1310 "CSSPropertyNames.gperf"
    {"scroll-snap-type", CSSPropertyID::CSSPropertyScrollSnapType},
#line 1591 "CSSPropertyNames.gperf"
    {"font-synthesis", CSSPropertyID::CSSPropertyFontSynthesis},
#line 1585 "CSSPropertyNames.gperf"
    {"contain-intrinsic-size", CSSPropertyID::CSSPropertyContainIntrinsicSize},
#line 1197 "CSSPropertyNames.gperf"
    {"field-sizing", CSSPropertyID::CSSPropertyFieldSizing},
#line 1220 "CSSPropertyNames.gperf"
    {"grid-template-areas", CSSPropertyID::CSSPropertyGridTemplateAreas},
#line 1370 "CSSPropertyNames.gperf"
    {"transform-origin-y", CSSPropertyID::CSSPropertyTransformOriginY},
#line 1520 "CSSPropertyNames.gperf"
    {"contain-intrinsic-inline-size", CSSPropertyID::CSSPropertyContainIntrinsicInlineSize},
#line 1744 "CSSPropertyNames.gperf"
    {"scroll-snap-margin-right", CSSPropertyID::CSSPropertyScrollMarginRight},
#line 1629 "CSSPropertyNames.gperf"
    {"scroll-padding", CSSPropertyID::CSSPropertyScrollPadding},
#line 1488 "CSSPropertyNames.gperf"
    {"padding-left", CSSPropertyID::CSSPropertyPaddingLeft},
#line 1571 "CSSPropertyNames.gperf"
    {"border-inline-color", CSSPropertyID::CSSPropertyBorderInlineColor},
#line 1475 "CSSPropertyNames.gperf"
    {"margin-bottom", CSSPropertyID::CSSPropertyMarginBottom},
#line 1581 "CSSPropertyNames.gperf"
    {"border-top", CSSPropertyID::CSSPropertyBorderTop},
#line 1376 "CSSPropertyNames.gperf"
    {"transition-property", CSSPropertyID::CSSPropertyTransitionProperty},
#line 1494 "CSSPropertyNames.gperf"
    {"scroll-margin-right", CSSPropertyID::CSSPropertyScrollMarginRight},
#line 1265 "CSSPropertyNames.gperf"
    {"object-position", CSSPropertyID::CSSPropertyObjectPosition},
#line 1455 "CSSPropertyNames.gperf"
    {"border-left-color", CSSPropertyID::CSSPropertyBorderLeftColor},
#line 1374 "CSSPropertyNames.gperf"
    {"transition-delay", CSSPropertyID::CSSPropertyTransitionDelay},
#line 1326 "CSSPropertyNames.gperf"
    {"stroke", CSSPropertyID::CSSPropertyStroke},
#line 1634 "CSSPropertyNames.gperf"
    {"text-decoration", CSSPropertyID::CSSPropertyTextDecoration},
#line 1239 "CSSPropertyNames.gperf"
    {"list-style-image", CSSPropertyID::CSSPropertyListStyleImage},
#line 1461 "CSSPropertyNames.gperf"
    {"border-top-color", CSSPropertyID::CSSPropertyBorderTopColor},
#line 1327 "CSSPropertyNames.gperf"
    {"stroke-color", CSSPropertyID::CSSPropertyStrokeColor},
#line 1467 "CSSPropertyNames.gperf"
    {"contain-intrinsic-height", CSSPropertyID::CSSPropertyContainIntrinsicHeight},
#line 1151 "CSSPropertyNames.gperf"
    {"border-collapse", CSSPropertyID::CSSPropertyBorderCollapse},
#line 1285 "CSSPropertyNames.gperf"
    {"perspective-origin-x", CSSPropertyID::CSSPropertyPerspectiveOriginX},
#line 1102 "CSSPropertyNames.gperf"
    {"text-rendering", CSSPropertyID::CSSPropertyTextRendering},
#line 1490 "CSSPropertyNames.gperf"
    {"padding-top", CSSPropertyID::CSSPropertyPaddingTop},
#line 1259 "CSSPropertyNames.gperf"
    {"math-style", CSSPropertyID::CSSPropertyMathStyle},
#line 1545 "CSSPropertyNames.gperf"
    {"padding-inline-start", CSSPropertyID::CSSPropertyPaddingInlineStart},
#line 1339 "CSSPropertyNames.gperf"
    {"tab-size", CSSPropertyID::CSSPropertyTabSize},
#line 1521 "CSSPropertyNames.gperf"
    {"corner-end-end-shape", CSSPropertyID::CSSPropertyCornerEndEndShape},
#line 1082 "CSSPropertyNames.gperf"
    {"font-kerning", CSSPropertyID::CSSPropertyFontKerning},
#line 1492 "CSSPropertyNames.gperf"
    {"scroll-margin-bottom", CSSPropertyID::CSSPropertyScrollMarginBottom},
#line 1079 "CSSPropertyNames.gperf"
    {"display", CSSPropertyID::CSSPropertyDisplay},
#line 1636 "CSSPropertyNames.gperf"
    {"text-emphasis", CSSPropertyID::CSSPropertyTextEmphasis},
#line 1497 "CSSPropertyNames.gperf"
    {"scroll-padding-left", CSSPropertyID::CSSPropertyScrollPaddingLeft},
#line 1209 "CSSPropertyNames.gperf"
    {"flood-opacity", CSSPropertyID::CSSPropertyFloodOpacity},
#line 1193 "CSSPropertyNames.gperf"
    {"dominant-baseline", CSSPropertyID::CSSPropertyDominantBaseline},
#line 1607 "CSSPropertyNames.gperf"
    {"marker", CSSPropertyID::CSSPropertyMarker},
#line 1469 "CSSPropertyNames.gperf"
    {"corner-bottom-left-shape", CSSPropertyID::CSSPropertyCornerBottomLeftShape},
#line 1202 "CSSPropertyNames.gperf"
    {"flex-basis", CSSPropertyID::CSSPropertyFlexBasis},
#line 1608 "CSSPropertyNames.gperf"
    {"mask", CSSPropertyID::CSSPropertyMask},
#line 1286 "CSSPropertyNames.gperf"
    {"perspective-origin-y", CSSPropertyID::CSSPropertyPerspectiveOriginY},
#line 1210 "CSSPropertyNames.gperf"
    {"font-display", CSSPropertyID::CSSPropertyFontDisplay},
#line 1496 "CSSPropertyNames.gperf"
    {"scroll-padding-bottom", CSSPropertyID::CSSPropertyScrollPaddingBottom},
#line 1524 "CSSPropertyNames.gperf"
    {"corner-start-start-shape", CSSPropertyID::CSSPropertyCornerStartStartShape},
#line 1569 "CSSPropertyNames.gperf"
    {"border-image", CSSPropertyID::CSSPropertyBorderImage},
#line 1348 "CSSPropertyNames.gperf"
    {"text-decoration-line", CSSPropertyID::CSSPropertyTextDecorationLine},
#line 1347 "CSSPropertyNames.gperf"
    {"text-decoration-color", CSSPropertyID::CSSPropertyTextDecorationColor},
#line 1579 "CSSPropertyNames.gperf"
    {"border-spacing", CSSPropertyID::CSSPropertyBorderSpacing},
#line 1125 "CSSPropertyNames.gperf"
    {"animation-play-state", CSSPropertyID::CSSPropertyAnimationPlayState},
#line 1225 "CSSPropertyNames.gperf"
    {"hyphens", CSSPropertyID::CSSPropertyHyphens},
#line 1330 "CSSPropertyNames.gperf"
    {"stroke-linecap", CSSPropertyID::CSSPropertyStrokeLinecap},
#line 1389 "CSSPropertyNames.gperf"
    {"visibility", CSSPropertyID::CSSPropertyVisibility},
#line 1572 "CSSPropertyNames.gperf"
    {"border-inline-end", CSSPropertyID::CSSPropertyBorderInlineEnd},
#line 1535 "CSSPropertyNames.gperf"
    {"max-inline-size", CSSPropertyID::CSSPropertyMaxInlineSize},
#line 1511 "CSSPropertyNames.gperf"
    {"border-inline-end-color", CSSPropertyID::CSSPropertyBorderInlineEndColor},
#line 1322 "CSSPropertyNames.gperf"
    {"speak-as", CSSPropertyID::CSSPropertySpeakAs},
#line 1578 "CSSPropertyNames.gperf"
    {"border-right", CSSPropertyID::CSSPropertyBorderRight},
#line 1155 "CSSPropertyNames.gperf"
    {"border-image-source", CSSPropertyID::CSSPropertyBorderImageSource},
#line 1115 "CSSPropertyNames.gperf"
    {"alignment-baseline", CSSPropertyID::CSSPropertyAlignmentBaseline},
#line 1337 "CSSPropertyNames.gperf"
    {"syntax", CSSPropertyID::CSSPropertySyntax},
#line 1352 "CSSPropertyNames.gperf"
    {"text-emphasis-color", CSSPropertyID::CSSPropertyTextEmphasisColor},
#line 1251 "CSSPropertyNames.gperf"
    {"mask-clip", CSSPropertyID::CSSPropertyMaskClip},
#line 1119 "CSSPropertyNames.gperf"
    {"animation-delay", CSSPropertyID::CSSPropertyAnimationDelay},
#line 1368 "CSSPropertyNames.gperf"
    {"transform-box", CSSPropertyID::CSSPropertyTransformBox},
#line 1613 "CSSPropertyNames.gperf"
    {"overflow", CSSPropertyID::CSSPropertyOverflow},
#line 1255 "CSSPropertyNames.gperf"
    {"mask-origin", CSSPropertyID::CSSPropertyMaskOrigin},
#line 1245 "CSSPropertyNames.gperf"
    {"marker-start", CSSPropertyID::CSSPropertyMarkerStart},
#line 1479 "CSSPropertyNames.gperf"
    {"max-height", CSSPropertyID::CSSPropertyMaxHeight},
#line 1544 "CSSPropertyNames.gperf"
    {"padding-inline-end", CSSPropertyID::CSSPropertyPaddingInlineEnd},
#line 1539 "CSSPropertyNames.gperf"
    {"overflow-inline", CSSPropertyID::CSSPropertyOverflowInline},
#line 1631 "CSSPropertyNames.gperf"
    {"scroll-padding-inline", CSSPropertyID::CSSPropertyScrollPaddingInline},
#line 1336 "CSSPropertyNames.gperf"
    {"symbols", CSSPropertyID::CSSPropertySymbols},
#line 1742 "CSSPropertyNames.gperf"
    {"scroll-snap-margin-bottom", CSSPropertyID::CSSPropertyScrollMarginBottom},
#line 1610 "CSSPropertyNames.gperf"
    {"mask-position", CSSPropertyID::CSSPropertyMaskPosition},
#line 1489 "CSSPropertyNames.gperf"
    {"padding-right", CSSPropertyID::CSSPropertyPaddingRight},
#line 1331 "CSSPropertyNames.gperf"
    {"stroke-linejoin", CSSPropertyID::CSSPropertyStrokeLinejoin},
#line 1396 "CSSPropertyNames.gperf"
    {"z-index", CSSPropertyID::CSSPropertyZIndex},
#line 1109 "CSSPropertyNames.gperf"
    {"text-spacing-trim", CSSPropertyID::CSSPropertyTextSpacingTrim},
#line 1088 "CSSPropertyNames.gperf"
    {"font-synthesis-small-caps", CSSPropertyID::CSSPropertyFontSynthesisSmallCaps},
#line 1256 "CSSPropertyNames.gperf"
    {"mask-repeat", CSSPropertyID::CSSPropertyMaskRepeat},
#line 1458 "CSSPropertyNames.gperf"
    {"border-right-color", CSSPropertyID::CSSPropertyBorderRightColor},
#line 1498 "CSSPropertyNames.gperf"
    {"scroll-padding-right", CSSPropertyID::CSSPropertyScrollPaddingRight},
#line 1153 "CSSPropertyNames.gperf"
    {"border-image-repeat", CSSPropertyID::CSSPropertyBorderImageRepeat},
#line 1353 "CSSPropertyNames.gperf"
    {"text-emphasis-position", CSSPropertyID::CSSPropertyTextEmphasisPosition},
#line 1212 "CSSPropertyNames.gperf"
    {"glyph-orientation-vertical", CSSPropertyID::CSSPropertyGlyphOrientationVertical},
#line 1553 "CSSPropertyNames.gperf"
    {"scroll-padding-inline-start", CSSPropertyID::CSSPropertyScrollPaddingInlineStart},
#line 1640 "CSSPropertyNames.gperf"
    {"view-timeline", CSSPropertyID::CSSPropertyViewTimeline},
#line 1252 "CSSPropertyNames.gperf"
    {"mask-composite", CSSPropertyID::CSSPropertyMaskComposite},
#line 1200 "CSSPropertyNames.gperf"
    {"fill-rule", CSSPropertyID::CSSPropertyFillRule},
#line 1253 "CSSPropertyNames.gperf"
    {"mask-image", CSSPropertyID::CSSPropertyMaskImage},
#line 1612 "CSSPropertyNames.gperf"
    {"outline", CSSPropertyID::CSSPropertyOutline},
#line 1189 "CSSPropertyNames.gperf"
    {"cursor", CSSPropertyID::CSSPropertyCursor},
#line 1241 "CSSPropertyNames.gperf"
    {"list-style-type", CSSPropertyID::CSSPropertyListStyleType},
#line 1185 "CSSPropertyNames.gperf"
    {"continue", CSSPropertyID::CSSPropertyContinue},
#line 1293 "CSSPropertyNames.gperf"
    {"position-visibility", CSSPropertyID::CSSPropertyPositionVisibility},
#line 1274 "CSSPropertyNames.gperf"
    {"outline-color", CSSPropertyID::CSSPropertyOutlineColor},
#line 1243 "CSSPropertyNames.gperf"
    {"marker-end", CSSPropertyID::CSSPropertyMarkerEnd},
#line 1385 "CSSPropertyNames.gperf"
    {"view-timeline-inset", CSSPropertyID::CSSPropertyViewTimelineInset},
#line 1154 "CSSPropertyNames.gperf"
    {"border-image-slice", CSSPropertyID::CSSPropertyBorderImageSlice},
#line 1301 "CSSPropertyNames.gperf"
    {"row-gap", CSSPropertyID::CSSPropertyRowGap},
#line 1316 "CSSPropertyNames.gperf"
    {"shape-image-threshold", CSSPropertyID::CSSPropertyShapeImageThreshold},
#line 1275 "CSSPropertyNames.gperf"
    {"outline-offset", CSSPropertyID::CSSPropertyOutlineOffset},
#line 1580 "CSSPropertyNames.gperf"
    {"border-style", CSSPropertyID::CSSPropertyBorderStyle},
#line 1600 "CSSPropertyNames.gperf"
    {"inset-block", CSSPropertyID::CSSPropertyInsetBlock},
#line 1188 "CSSPropertyNames.gperf"
    {"counter-set", CSSPropertyID::CSSPropertyCounterSet},
#line 1236 "CSSPropertyNames.gperf"
    {"line-break", CSSPropertyID::CSSPropertyLineBreak},
#line 1567 "CSSPropertyNames.gperf"
    {"border-bottom", CSSPropertyID::CSSPropertyBorderBottom},
#line 1187 "CSSPropertyNames.gperf"
    {"counter-reset", CSSPropertyID::CSSPropertyCounterReset},
#line 1168 "CSSPropertyNames.gperf"
    {"clip-rule", CSSPropertyID::CSSPropertyClipRule},
#line 1278 "CSSPropertyNames.gperf"
    {"overflow-anchor", CSSPropertyID::CSSPropertyOverflowAnchor},
#line 1173 "CSSPropertyNames.gperf"
    {"column-fill", CSSPropertyID::CSSPropertyColumnFill},
#line 1184 "CSSPropertyNames.gperf"
    {"content-visibility", CSSPropertyID::CSSPropertyContentVisibility},
#line 1584 "CSSPropertyNames.gperf"
    {"columns", CSSPropertyID::CSSPropertyColumns},
#line 1196 "CSSPropertyNames.gperf"
    {"fallback", CSSPropertyID::CSSPropertyFallback},
#line 1244 "CSSPropertyNames.gperf"
    {"marker-mid", CSSPropertyID::CSSPropertyMarkerMid},
#line 1296 "CSSPropertyNames.gperf"
    {"quotes", CSSPropertyID::CSSPropertyQuotes},
#line 1229 "CSSPropertyNames.gperf"
    {"initial-value", CSSPropertyID::CSSPropertyInitialValue},
#line 1254 "CSSPropertyNames.gperf"
    {"mask-mode", CSSPropertyID::CSSPropertyMaskMode},
#line 1633 "CSSPropertyNames.gperf"
    {"text-box", CSSPropertyID::CSSPropertyTextBox},
#line 1332 "CSSPropertyNames.gperf"
    {"stroke-miterlimit", CSSPropertyID::CSSPropertyStrokeMiterlimit},
#line 1552 "CSSPropertyNames.gperf"
    {"scroll-padding-inline-end", CSSPropertyID::CSSPropertyScrollPaddingInlineEnd},
#line 1487 "CSSPropertyNames.gperf"
    {"padding-bottom", CSSPropertyID::CSSPropertyPaddingBottom},
#line 1159 "CSSPropertyNames.gperf"
    {"break-after", CSSPropertyID::CSSPropertyBreakAfter},
#line 1146 "CSSPropertyNames.gperf"
    {"block-ellipsis", CSSPropertyID::CSSPropertyBlockEllipsis},
#line 1099 "CSSPropertyNames.gperf"
    {"font-weight", CSSPropertyID::CSSPropertyFontWeight},
#line 1559 "CSSPropertyNames.gperf"
    {"block-step", CSSPropertyID::CSSPropertyBlockStep},
#line 1089 "CSSPropertyNames.gperf"
    {"font-synthesis-style", CSSPropertyID::CSSPropertyFontSynthesisStyle},
#line 1170 "CSSPropertyNames.gperf"
    {"color-interpolation", CSSPropertyID::CSSPropertyColorInterpolation},
#line 1392 "CSSPropertyNames.gperf"
    {"will-change", CSSPropertyID::CSSPropertyWillChange},
#line 1096 "CSSPropertyNames.gperf"
    {"font-variant-numeric", CSSPropertyID::CSSPropertyFontVariantNumeric},
#line 1186 "CSSPropertyNames.gperf"
    {"counter-increment", CSSPropertyID::CSSPropertyCounterIncrement},
#line 1464 "CSSPropertyNames.gperf"
    {"border-top-style", CSSPropertyID::CSSPropertyBorderTopStyle},
#line 1387 "CSSPropertyNames.gperf"
    {"view-transition-class", CSSPropertyID::CSSPropertyViewTransitionClass},
#line 1450 "CSSPropertyNames.gperf"
    {"border-bottom-color", CSSPropertyID::CSSPropertyBorderBottomColor},
#line 1158 "CSSPropertyNames.gperf"
    {"box-sizing", CSSPropertyID::CSSPropertyBoxSizing},
#line 1257 "CSSPropertyNames.gperf"
    {"mask-size", CSSPropertyID::CSSPropertyMaskSize},
#line 1641 "CSSPropertyNames.gperf"
    {"white-space", CSSPropertyID::CSSPropertyWhiteSpace},
#line 1456 "CSSPropertyNames.gperf"
    {"border-left-style", CSSPropertyID::CSSPropertyBorderLeftStyle},
#line 1527 "CSSPropertyNames.gperf"
    {"inset-block-start", CSSPropertyID::CSSPropertyInsetBlockStart},
#line 1597 "CSSPropertyNames.gperf"
    {"grid-row", CSSPropertyID::CSSPropertyGridRow},
#line 1329 "CSSPropertyNames.gperf"
    {"stroke-dashoffset", CSSPropertyID::CSSPropertyStrokeDashoffset},
#line 1171 "CSSPropertyNames.gperf"
    {"color-interpolation-filters", CSSPropertyID::CSSPropertyColorInterpolationFilters},
#line 1148 "CSSPropertyNames.gperf"
    {"block-step-insert", CSSPropertyID::CSSPropertyBlockStepInsert},
#line 1205 "CSSPropertyNames.gperf"
    {"flex-shrink", CSSPropertyID::CSSPropertyFlexShrink},
#line 1388 "CSSPropertyNames.gperf"
    {"view-transition-name", CSSPropertyID::CSSPropertyViewTransitionName},
#line 1178 "CSSPropertyNames.gperf"
    {"column-span", CSSPropertyID::CSSPropertyColumnSpan},
#line 1194 "CSSPropertyNames.gperf"
    {"dynamic-range-limit", CSSPropertyID::CSSPropertyDynamicRangeLimit},
#line 1589 "CSSPropertyNames.gperf"
    {"flex-flow", CSSPropertyID::CSSPropertyFlexFlow},
#line 1459 "CSSPropertyNames.gperf"
    {"border-right-style", CSSPropertyID::CSSPropertyBorderRightStyle},
#line 1345 "CSSPropertyNames.gperf"
    {"text-box-trim", CSSPropertyID::CSSPropertyTextBoxTrim},
#line 1366 "CSSPropertyNames.gperf"
    {"touch-action", CSSPropertyID::CSSPropertyTouchAction},
#line 1605 "CSSPropertyNames.gperf"
    {"margin-block", CSSPropertyID::CSSPropertyMarginBlock},
#line 1470 "CSSPropertyNames.gperf"
    {"corner-bottom-right-shape", CSSPropertyID::CSSPropertyCornerBottomRightShape},
#line 1530 "CSSPropertyNames.gperf"
    {"margin-block-end", CSSPropertyID::CSSPropertyMarginBlockEnd},
#line 1483 "CSSPropertyNames.gperf"
    {"overflow-x", CSSPropertyID::CSSPropertyOverflowX},
#line 1501 "CSSPropertyNames.gperf"
    {"width", CSSPropertyID::CSSPropertyWidth},
#line 1091 "CSSPropertyNames.gperf"
    {"font-variant-alternates", CSSPropertyID::CSSPropertyFontVariantAlternates},
#line 1147 "CSSPropertyNames.gperf"
    {"block-step-align", CSSPropertyID::CSSPropertyBlockStepAlign},
#line 1333 "CSSPropertyNames.gperf"
    {"stroke-opacity", CSSPropertyID::CSSPropertyStrokeOpacity},
#line 1350 "CSSPropertyNames.gperf"
    {"text-decoration-style", CSSPropertyID::CSSPropertyTextDecorationStyle},
#line 1219 "CSSPropertyNames.gperf"
    {"grid-row-start", CSSPropertyID::CSSPropertyGridRowStart},
#line 1100 "CSSPropertyNames.gperf"
    {"font-width", CSSPropertyID::CSSPropertyFontWidth},
#line 1174 "CSSPropertyNames.gperf"
    {"column-gap", CSSPropertyID::CSSPropertyColumnGap},
#line 1077 "CSSPropertyNames.gperf"
    {"writing-mode", CSSPropertyID::CSSPropertyWritingMode},
#line 1533 "CSSPropertyNames.gperf"
    {"margin-inline-start", CSSPropertyID::CSSPropertyMarginInlineStart},
#line 1090 "CSSPropertyNames.gperf"
    {"font-synthesis-weight", CSSPropertyID::CSSPropertyFontSynthesisWeight},
#line 1620 "CSSPropertyNames.gperf"
    {"page-break-inside", CSSPropertyID::CSSPropertyPageBreakInside},
#line 1358 "CSSPropertyNames.gperf"
    {"text-overflow", CSSPropertyID::CSSPropertyTextOverflow},
#line 1526 "CSSPropertyNames.gperf"
    {"inset-block-end", CSSPropertyID::CSSPropertyInsetBlockEnd},
#line 1377 "CSSPropertyNames.gperf"
    {"transition-timing-function", CSSPropertyID::CSSPropertyTransitionTimingFunction},
#line 1512 "CSSPropertyNames.gperf"
    {"border-inline-end-style", CSSPropertyID::CSSPropertyBorderInlineEndStyle},
#line 1449 "CSSPropertyNames.gperf"
    {"word-spacing", CSSPropertyID::CSSPropertyWordSpacing},
#line 1484 "CSSPropertyNames.gperf"
    {"overflow-y", CSSPropertyID::CSSPropertyOverflowY},
#line 1204 "CSSPropertyNames.gperf"
    {"flex-grow", CSSPropertyID::CSSPropertyFlexGrow},
#line 1161 "CSSPropertyNames.gperf"
    {"break-inside", CSSPropertyID::CSSPropertyBreakInside},
#line 1258 "CSSPropertyNames.gperf"
    {"mask-type", CSSPropertyID::CSSPropertyMaskType},
#line 1482 "CSSPropertyNames.gperf"
    {"min-width", CSSPropertyID::CSSPropertyMinWidth},
#line 1206 "CSSPropertyNames.gperf"
    {"flex-wrap", CSSPropertyID::CSSPropertyFlexWrap},
#line 1627 "CSSPropertyNames.gperf"
    {"scroll-margin-block", CSSPropertyID::CSSPropertyScrollMarginBlock},
#line 1618 "CSSPropertyNames.gperf"
    {"page-break-after", CSSPropertyID::CSSPropertyPageBreakAfter},
#line 1630 "CSSPropertyNames.gperf"
    {"scroll-padding-block", CSSPropertyID::CSSPropertyScrollPaddingBlock},
#line 1261 "CSSPropertyNames.gperf"
    {"mix-blend-mode", CSSPropertyID::CSSPropertyMixBlendMode},
#line 1224 "CSSPropertyNames.gperf"
    {"hyphenate-character", CSSPropertyID::CSSPropertyHyphenateCharacter},
#line 1095 "CSSPropertyNames.gperf"
    {"font-variant-ligatures", CSSPropertyID::CSSPropertyFontVariantLigatures},
#line 1381 "CSSPropertyNames.gperf"
    {"unicode-range", CSSPropertyID::CSSPropertyUnicodeRange},
#line 1713 "CSSPropertyNames.gperf"
    {"grid-row-gap", CSSPropertyID::CSSPropertyRowGap},
#line 1335 "CSSPropertyNames.gperf"
    {"suffix", CSSPropertyID::CSSPropertySuffix},
#line 1637 "CSSPropertyNames.gperf"
    {"text-wrap", CSSPropertyID::CSSPropertyTextWrap},
#line 1502 "CSSPropertyNames.gperf"
    {"block-size", CSSPropertyID::CSSPropertyBlockSize},
#line 1390 "CSSPropertyNames.gperf"
    {"white-space-collapse", CSSPropertyID::CSSPropertyWhiteSpaceCollapse},
#line 1132 "CSSPropertyNames.gperf"
    {"backdrop-filter", CSSPropertyID::CSSPropertyBackdropFilter},
#line 1609 "CSSPropertyNames.gperf"
    {"mask-border", CSSPropertyID::CSSPropertyMaskBorder},
#line 1596 "CSSPropertyNames.gperf"
    {"grid-column", CSSPropertyID::CSSPropertyGridColumn},
#line 1218 "CSSPropertyNames.gperf"
    {"grid-row-end", CSSPropertyID::CSSPropertyGridRowEnd},
#line 1120 "CSSPropertyNames.gperf"
    {"animation-direction", CSSPropertyID::CSSPropertyAnimationDirection},
#line 1211 "CSSPropertyNames.gperf"
    {"glyph-orientation-horizontal", CSSPropertyID::CSSPropertyGlyphOrientationHorizontal},
#line 1547 "CSSPropertyNames.gperf"
    {"scroll-margin-block-start", CSSPropertyID::CSSPropertyScrollMarginBlockStart},
#line 1160 "CSSPropertyNames.gperf"
    {"break-before", CSSPropertyID::CSSPropertyBreakBefore},
#line 1386 "CSSPropertyNames.gperf"
    {"view-timeline-name", CSSPropertyID::CSSPropertyViewTimelineName},
#line 1111 "CSSPropertyNames.gperf"
    {"additive-symbols", CSSPropertyID::CSSPropertyAdditiveSymbols},
#line 1129 "CSSPropertyNames.gperf"
    {"animation-timing-function", CSSPropertyID::CSSPropertyAnimationTimingFunction},
#line 1551 "CSSPropertyNames.gperf"
    {"scroll-padding-block-start", CSSPropertyID::CSSPropertyScrollPaddingBlockStart},
#line 1344 "CSSPropertyNames.gperf"
    {"text-box-edge", CSSPropertyID::CSSPropertyTextBoxEdge},
#line 1614 "CSSPropertyNames.gperf"
    {"overscroll-behavior", CSSPropertyID::CSSPropertyOverscrollBehavior},
#line 1536 "CSSPropertyNames.gperf"
    {"min-block-size", CSSPropertyID::CSSPropertyMinBlockSize},
#line 1541 "CSSPropertyNames.gperf"
    {"overscroll-behavior-inline", CSSPropertyID::CSSPropertyOverscrollBehaviorInline},
#line 1384 "CSSPropertyNames.gperf"
    {"view-timeline-axis", CSSPropertyID::CSSPropertyViewTimelineAxis},
#line 1276 "CSSPropertyNames.gperf"
    {"outline-style", CSSPropertyID::CSSPropertyOutlineStyle},
#line 1150 "CSSPropertyNames.gperf"
    {"block-step-size", CSSPropertyID::CSSPropertyBlockStepSize},
#line 1373 "CSSPropertyNames.gperf"
    {"transition-behavior", CSSPropertyID::CSSPropertyTransitionBehavior},
#line 1222 "CSSPropertyNames.gperf"
    {"grid-template-rows", CSSPropertyID::CSSPropertyGridTemplateRows},
#line 1217 "CSSPropertyNames.gperf"
    {"grid-column-start", CSSPropertyID::CSSPropertyGridColumnStart},
#line 1712 "CSSPropertyNames.gperf"
    {"color-adjust", CSSPropertyID::CSSPropertyPrintColorAdjust},
#line 1247 "CSSPropertyNames.gperf"
    {"mask-border-repeat", CSSPropertyID::CSSPropertyMaskBorderRepeat},
#line 1318 "CSSPropertyNames.gperf"
    {"shape-outside", CSSPropertyID::CSSPropertyShapeOutside},
#line 1635 "CSSPropertyNames.gperf"
    {"text-decoration-skip", CSSPropertyID::CSSPropertyTextDecorationSkip},
#line 1328 "CSSPropertyNames.gperf"
    {"stroke-dasharray", CSSPropertyID::CSSPropertyStrokeDasharray},
#line 1314 "CSSPropertyNames.gperf"
    {"scrollbar-gutter", CSSPropertyID::CSSPropertyScrollbarGutter},
#line 1468 "CSSPropertyNames.gperf"
    {"contain-intrinsic-width", CSSPropertyID::CSSPropertyContainIntrinsicWidth},
#line 1546 "CSSPropertyNames.gperf"
    {"scroll-margin-block-end", CSSPropertyID::CSSPropertyScrollMarginBlockEnd},
#line 1240 "CSSPropertyNames.gperf"
    {"list-style-position", CSSPropertyID::CSSPropertyListStylePosition},
#line 1550 "CSSPropertyNames.gperf"
    {"scroll-padding-block-end", CSSPropertyID::CSSPropertyScrollPaddingBlockEnd},
#line 1678 "CSSPropertyNames.gperf"
    {"grid-column-gap", CSSPropertyID::CSSPropertyColumnGap},
#line 1108 "CSSPropertyNames.gperf"
    {"text-autospace", CSSPropertyID::CSSPropertyTextAutospace},
#line 1522 "CSSPropertyNames.gperf"
    {"corner-end-start-shape", CSSPropertyID::CSSPropertyCornerEndStartShape},
#line 1472 "CSSPropertyNames.gperf"
    {"corner-top-right-shape", CSSPropertyID::CSSPropertyCornerTopRightShape},
#line 1561 "CSSPropertyNames.gperf"
    {"border-block", CSSPropertyID::CSSPropertyBorderBlock},
#line 1563 "CSSPropertyNames.gperf"
    {"border-block-end", CSSPropertyID::CSSPropertyBorderBlockEnd},
#line 1216 "CSSPropertyNames.gperf"
    {"grid-column-end", CSSPropertyID::CSSPropertyGridColumnEnd},
#line 1503 "CSSPropertyNames.gperf"
    {"border-block-end-color", CSSPropertyID::CSSPropertyBorderBlockEndColor},
#line 1531 "CSSPropertyNames.gperf"
    {"margin-block-start", CSSPropertyID::CSSPropertyMarginBlockStart},
#line 1248 "CSSPropertyNames.gperf"
    {"mask-border-slice", CSSPropertyID::CSSPropertyMaskBorderSlice},
#line 1619 "CSSPropertyNames.gperf"
    {"page-break-before", CSSPropertyID::CSSPropertyPageBreakBefore},
#line 1121 "CSSPropertyNames.gperf"
    {"animation-duration", CSSPropertyID::CSSPropertyAnimationDuration},
#line 1573 "CSSPropertyNames.gperf"
    {"border-inline-start", CSSPropertyID::CSSPropertyBorderInlineStart},
#line 1315 "CSSPropertyNames.gperf"
    {"scrollbar-width", CSSPropertyID::CSSPropertyScrollbarWidth},
#line 1351 "CSSPropertyNames.gperf"
    {"text-decoration-thickness", CSSPropertyID::CSSPropertyTextDecorationThickness},
#line 1616 "CSSPropertyNames.gperf"
    {"padding-block", CSSPropertyID::CSSPropertyPaddingBlock},
#line 1514 "CSSPropertyNames.gperf"
    {"border-inline-start-color", CSSPropertyID::CSSPropertyBorderInlineStartColor},
#line 1355 "CSSPropertyNames.gperf"
    {"text-group-align", CSSPropertyID::CSSPropertyTextGroupAlign},
#line 1234 "CSSPropertyNames.gperf"
    {"justify-self", CSSPropertyID::CSSPropertyJustifySelf},
#line 1363 "CSSPropertyNames.gperf"
    {"text-wrap-mode", CSSPropertyID::CSSPropertyTextWrapMode},
#line 1519 "CSSPropertyNames.gperf"
    {"contain-intrinsic-block-size", CSSPropertyID::CSSPropertyContainIntrinsicBlockSize},
#line 1359 "CSSPropertyNames.gperf"
    {"text-shadow", CSSPropertyID::CSSPropertyTextShadow},
#line 1562 "CSSPropertyNames.gperf"
    {"border-block-color", CSSPropertyID::CSSPropertyBorderBlockColor},
#line 1232 "CSSPropertyNames.gperf"
    {"justify-content", CSSPropertyID::CSSPropertyJustifyContent},
#line 1221 "CSSPropertyNames.gperf"
    {"grid-template-columns", CSSPropertyID::CSSPropertyGridTemplateColumns},
#line 1480 "CSSPropertyNames.gperf"
    {"max-width", CSSPropertyID::CSSPropertyMaxWidth},
#line 1499 "CSSPropertyNames.gperf"
    {"scroll-padding-top", CSSPropertyID::CSSPropertyScrollPaddingTop},
#line 1291 "CSSPropertyNames.gperf"
    {"position-try-fallbacks", CSSPropertyID::CSSPropertyPositionTryFallbacks},
#line 1361 "CSSPropertyNames.gperf"
    {"text-underline-offset", CSSPropertyID::CSSPropertyTextUnderlineOffset},
#line 1362 "CSSPropertyNames.gperf"
    {"text-underline-position", CSSPropertyID::CSSPropertyTextUnderlinePosition},
#line 1233 "CSSPropertyNames.gperf"
    {"justify-items", CSSPropertyID::CSSPropertyJustifyItems},
#line 1465 "CSSPropertyNames.gperf"
    {"border-top-width", CSSPropertyID::CSSPropertyBorderTopWidth},
#line 1655 "CSSPropertyNames.gperf"
    {"supported-color-schemes", CSSPropertyID::CSSPropertyColorScheme},
#line 1380 "CSSPropertyNames.gperf"
    {"unicode-bidi", CSSPropertyID::CSSPropertyUnicodeBidi},
#line 1485 "CSSPropertyNames.gperf"
    {"overscroll-behavior-x", CSSPropertyID::CSSPropertyOverscrollBehaviorX},
#line 1156 "CSSPropertyNames.gperf"
    {"border-image-width", CSSPropertyID::CSSPropertyBorderImageWidth},
#line 1364 "CSSPropertyNames.gperf"
    {"text-wrap-style", CSSPropertyID::CSSPropertyTextWrapStyle},
#line 1582 "CSSPropertyNames.gperf"
    {"border-width", CSSPropertyID::CSSPropertyBorderWidth},
#line 1279 "CSSPropertyNames.gperf"
    {"overflow-wrap", CSSPropertyID::CSSPropertyOverflowWrap},
#line 1321 "CSSPropertyNames.gperf"
    {"size-adjust", CSSPropertyID::CSSPropertySizeAdjust},
#line 1534 "CSSPropertyNames.gperf"
    {"max-block-size", CSSPropertyID::CSSPropertyMaxBlockSize},
#line 1577 "CSSPropertyNames.gperf"
    {"border-radius", CSSPropertyID::CSSPropertyBorderRadius},
#line 1460 "CSSPropertyNames.gperf"
    {"border-right-width", CSSPropertyID::CSSPropertyBorderRightWidth},
#line 1076 "CSSPropertyNames.gperf"
    {"ruby-position", CSSPropertyID::CSSPropertyRubyPosition},
#line 1486 "CSSPropertyNames.gperf"
    {"overscroll-behavior-y", CSSPropertyID::CSSPropertyOverscrollBehaviorY},
#line 1340 "CSSPropertyNames.gperf"
    {"table-layout", CSSPropertyID::CSSPropertyTableLayout},
#line 1302 "CSSPropertyNames.gperf"
    {"ruby-align", CSSPropertyID::CSSPropertyRubyAlign},
#line 1538 "CSSPropertyNames.gperf"
    {"overflow-block", CSSPropertyID::CSSPropertyOverflowBlock},
#line 1542 "CSSPropertyNames.gperf"
    {"padding-block-end", CSSPropertyID::CSSPropertyPaddingBlockEnd},
#line 1789 "CSSPropertyNames.gperf"
    {"-epub-text-orientation", CSSPropertyID::CSSPropertyWebkitTextOrientation},
#line 1685 "CSSPropertyNames.gperf"
    {"-webkit-filter", CSSPropertyID::CSSPropertyFilter},
#line 1105 "CSSPropertyNames.gperf"
    {"-webkit-locale", CSSPropertyID::CSSPropertyWebkitLocale},
#line 1391 "CSSPropertyNames.gperf"
    {"widows", CSSPropertyID::CSSPropertyWidows},
#line 1334 "CSSPropertyNames.gperf"
    {"stroke-width", CSSPropertyID::CSSPropertyStrokeWidth},
#line 1517 "CSSPropertyNames.gperf"
    {"border-start-end-radius", CSSPropertyID::CSSPropertyBorderStartEndRadius},
#line 1565 "CSSPropertyNames.gperf"
    {"border-block-style", CSSPropertyID::CSSPropertyBorderBlockStyle},
#line 1725 "CSSPropertyNames.gperf"
    {"-epub-text-transform", CSSPropertyID::CSSPropertyTextTransform},
#line 1157 "CSSPropertyNames.gperf"
    {"box-shadow", CSSPropertyID::CSSPropertyBoxShadow},
#line 1674 "CSSPropertyNames.gperf"
    {"-epub-caption-side", CSSPropertyID::CSSPropertyCaptionSide},
#line 1133 "CSSPropertyNames.gperf"
    {"backface-visibility", CSSPropertyID::CSSPropertyBackfaceVisibility},
#line 1564 "CSSPropertyNames.gperf"
    {"border-block-start", CSSPropertyID::CSSPropertyBorderBlockStart},
#line 1662 "CSSPropertyNames.gperf"
    {"-webkit-align-self", CSSPropertyID::CSSPropertyAlignSelf},
#line 1506 "CSSPropertyNames.gperf"
    {"border-block-start-color", CSSPropertyID::CSSPropertyBorderBlockStartColor},
#line 1574 "CSSPropertyNames.gperf"
    {"border-inline-style", CSSPropertyID::CSSPropertyBorderInlineStyle},
#line 1708 "CSSPropertyNames.gperf"
    {"word-wrap", CSSPropertyID::CSSPropertyOverflowWrap},
#line 1575 "CSSPropertyNames.gperf"
    {"border-inline-width", CSSPropertyID::CSSPropertyBorderInlineWidth},
#line 1357 "CSSPropertyNames.gperf"
    {"text-justify", CSSPropertyID::CSSPropertyTextJustify},
#line 1727 "CSSPropertyNames.gperf"
    {"-webkit-transform", CSSPropertyID::CSSPropertyTransform},
#line 1303 "CSSPropertyNames.gperf"
    {"ruby-overhang", CSSPropertyID::CSSPropertyRubyOverhang},
#line 1583 "CSSPropertyNames.gperf"
    {"column-rule", CSSPropertyID::CSSPropertyColumnRule},
#line 1462 "CSSPropertyNames.gperf"
    {"border-top-left-radius", CSSPropertyID::CSSPropertyBorderTopLeftRadius},
#line 1513 "CSSPropertyNames.gperf"
    {"border-inline-end-width", CSSPropertyID::CSSPropertyBorderInlineEndWidth},
#line 1504 "CSSPropertyNames.gperf"
    {"border-block-end-style", CSSPropertyID::CSSPropertyBorderBlockEndStyle},
#line 1172 "CSSPropertyNames.gperf"
    {"column-count", CSSPropertyID::CSSPropertyColumnCount},
#line 1421 "CSSPropertyNames.gperf"
    {"-webkit-initial-letter", CSSPropertyID::CSSPropertyWebkitInitialLetter},
#line 1761 "CSSPropertyNames.gperf"
    {"-webkit-margin-before", CSSPropertyID::CSSPropertyMarginBlockStart},
#line 1162 "CSSPropertyNames.gperf"
    {"buffered-rendering", CSSPropertyID::CSSPropertyBufferedRendering},
#line 1149 "CSSPropertyNames.gperf"
    {"block-step-round", CSSPropertyID::CSSPropertyBlockStepRound},
#line 1515 "CSSPropertyNames.gperf"
    {"border-inline-start-style", CSSPropertyID::CSSPropertyBorderInlineStartStyle},
#line 1707 "CSSPropertyNames.gperf"
    {"-webkit-order", CSSPropertyID::CSSPropertyOrder},
#line 1660 "CSSPropertyNames.gperf"
    {"-webkit-align-content", CSSPropertyID::CSSPropertyAlignContent},
#line 1772 "CSSPropertyNames.gperf"
    {"-webkit-animation", CSSPropertyID::CSSPropertyAnimation},
#line 1393 "CSSPropertyNames.gperf"
    {"word-break", CSSPropertyID::CSSPropertyWordBreak},
#line 1175 "CSSPropertyNames.gperf"
    {"column-rule-color", CSSPropertyID::CSSPropertyColumnRuleColor},
#line 1787 "CSSPropertyNames.gperf"
    {"-webkit-transform-origin", CSSPropertyID::CSSPropertyTransformOrigin},
#line 1671 "CSSPropertyNames.gperf"
    {"-webkit-appearance", CSSPropertyID::CSSPropertyAppearance},
#line 1346 "CSSPropertyNames.gperf"
    {"text-combine-upright", CSSPropertyID::CSSPropertyTextCombineUpright},
#line 1788 "CSSPropertyNames.gperf"
    {"-webkit-transition", CSSPropertyID::CSSPropertyTransition},
#line 1763 "CSSPropertyNames.gperf"
    {"-webkit-margin-start", CSSPropertyID::CSSPropertyMarginInlineStart},
#line 1349 "CSSPropertyNames.gperf"
    {"text-decoration-skip-ink", CSSPropertyID::CSSPropertyTextDecorationSkipInk},
#line 1081 "CSSPropertyNames.gperf"
    {"font-feature-settings", CSSPropertyID::CSSPropertyFontFeatureSettings},
#line 1354 "CSSPropertyNames.gperf"
    {"text-emphasis-style", CSSPropertyID::CSSPropertyTextEmphasisStyle},
#line 1214 "CSSPropertyNames.gperf"
    {"grid-auto-flow", CSSPropertyID::CSSPropertyGridAutoFlow},
#line 1422 "CSSPropertyNames.gperf"
    {"-webkit-line-align", CSSPropertyID::CSSPropertyWebkitLineAlign},
#line 1417 "CSSPropertyNames.gperf"
    {"-webkit-font-size-delta", CSSPropertyID::CSSPropertyWebkitFontSizeDelta},
#line 1692 "CSSPropertyNames.gperf"
    {"-epub-hyphens", CSSPropertyID::CSSPropertyHyphens},
#line 1438 "CSSPropertyNames.gperf"
    {"-webkit-rtl-ordering", CSSPropertyID::CSSPropertyWebkitRtlOrdering},
#line 1215 "CSSPropertyNames.gperf"
    {"grid-auto-rows", CSSPropertyID::CSSPropertyGridAutoRows},
#line 1123 "CSSPropertyNames.gperf"
    {"animation-iteration-count", CSSPropertyID::CSSPropertyAnimationIterationCount},
#line 1779 "CSSPropertyNames.gperf"
    {"-webkit-flex", CSSPropertyID::CSSPropertyFlex},
#line 1277 "CSSPropertyNames.gperf"
    {"outline-width", CSSPropertyID::CSSPropertyOutlineWidth},
#line 1668 "CSSPropertyNames.gperf"
    {"-webkit-animation-name", CSSPropertyID::CSSPropertyAnimationName},
#line 1179 "CSSPropertyNames.gperf"
    {"column-width", CSSPropertyID::CSSPropertyColumnWidth},
#line 1762 "CSSPropertyNames.gperf"
    {"-webkit-margin-end", CSSPropertyID::CSSPropertyMarginInlineEnd},
#line 1104 "CSSPropertyNames.gperf"
    {"-webkit-font-smoothing", CSSPropertyID::CSSPropertyWebkitFontSmoothing},
#line 1426 "CSSPropertyNames.gperf"
    {"-webkit-line-snap", CSSPropertyID::CSSPropertyWebkitLineSnap},
#line 1375 "CSSPropertyNames.gperf"
    {"transition-duration", CSSPropertyID::CSSPropertyTransitionDuration},
#line 1509 "CSSPropertyNames.gperf"
    {"border-end-end-radius", CSSPropertyID::CSSPropertyBorderEndEndRadius},
#line 1557 "CSSPropertyNames.gperf"
    {"background", CSSPropertyID::CSSPropertyBackground},
#line 1451 "CSSPropertyNames.gperf"
    {"border-bottom-left-radius", CSSPropertyID::CSSPropertyBorderBottomLeftRadius},
#line 1518 "CSSPropertyNames.gperf"
    {"border-start-start-radius", CSSPropertyID::CSSPropertyBorderStartStartRadius},
#line 1137 "CSSPropertyNames.gperf"
    {"background-color", CSSPropertyID::CSSPropertyBackgroundColor},
#line 1442 "CSSPropertyNames.gperf"
    {"-webkit-text-fill-color", CSSPropertyID::CSSPropertyWebkitTextFillColor},
#line 1664 "CSSPropertyNames.gperf"
    {"-webkit-animation-direction", CSSPropertyID::CSSPropertyAnimationDirection},
#line 1424 "CSSPropertyNames.gperf"
    {"-webkit-line-clamp", CSSPropertyID::CSSPropertyWebkitLineClamp},
#line 1425 "CSSPropertyNames.gperf"
    {"-webkit-line-grid", CSSPropertyID::CSSPropertyWebkitLineGrid},
#line 1249 "CSSPropertyNames.gperf"
    {"mask-border-source", CSSPropertyID::CSSPropertyMaskBorderSource},
#line 1437 "CSSPropertyNames.gperf"
    {"-webkit-nbsp-mode", CSSPropertyID::CSSPropertyWebkitNbspMode},
#line 1136 "CSSPropertyNames.gperf"
    {"background-clip", CSSPropertyID::CSSPropertyBackgroundClip},
#line 1246 "CSSPropertyNames.gperf"
    {"mask-border-outset", CSSPropertyID::CSSPropertyMaskBorderOutset},
#line 1706 "CSSPropertyNames.gperf"
    {"-webkit-opacity", CSSPropertyID::CSSPropertyOpacity},
#line 1213 "CSSPropertyNames.gperf"
    {"grid-auto-columns", CSSPropertyID::CSSPropertyGridAutoColumns},
#line 1666 "CSSPropertyNames.gperf"
    {"-webkit-animation-fill-mode", CSSPropertyID::CSSPropertyAnimationFillMode},
#line 1716 "CSSPropertyNames.gperf"
    {"-webkit-shape-outside", CSSPropertyID::CSSPropertyShapeOutside},
#line 1540 "CSSPropertyNames.gperf"
    {"overscroll-behavior-block", CSSPropertyID::CSSPropertyOverscrollBehaviorBlock},
#line 1737 "CSSPropertyNames.gperf"
    {"-epub-text-combine", CSSPropertyID::CSSPropertyWebkitTextCombine},
#line 1760 "CSSPropertyNames.gperf"
    {"-webkit-margin-after", CSSPropertyID::CSSPropertyMarginBlockEnd},
#line 1730 "CSSPropertyNames.gperf"
    {"-webkit-transform-origin-z", CSSPropertyID::CSSPropertyTransformOriginZ},
#line 1507 "CSSPropertyNames.gperf"
    {"border-block-start-style", CSSPropertyID::CSSPropertyBorderBlockStartStyle},
#line 1453 "CSSPropertyNames.gperf"
    {"border-bottom-style", CSSPropertyID::CSSPropertyBorderBottomStyle},
#line 1774 "CSSPropertyNames.gperf"
    {"-webkit-border-before", CSSPropertyID::CSSPropertyBorderBlockStart},
#line 1750 "CSSPropertyNames.gperf"
    {"-webkit-border-before-color", CSSPropertyID::CSSPropertyBorderBlockStartColor},
#line 1728 "CSSPropertyNames.gperf"
    {"-webkit-transform-origin-x", CSSPropertyID::CSSPropertyTransformOriginX},
#line 1785 "CSSPropertyNames.gperf"
    {"-epub-text-emphasis", CSSPropertyID::CSSPropertyTextEmphasis},
#line 1746 "CSSPropertyNames.gperf"
    {"-webkit-logical-height", CSSPropertyID::CSSPropertyBlockSize},
#line 1454 "CSSPropertyNames.gperf"
    {"border-bottom-width", CSSPropertyID::CSSPropertyBorderBottomWidth},
#line 1720 "CSSPropertyNames.gperf"
    {"-epub-text-emphasis-color", CSSPropertyID::CSSPropertyTextEmphasisColor},
#line 1731 "CSSPropertyNames.gperf"
    {"-webkit-transform-style", CSSPropertyID::CSSPropertyTransformStyle},
#line 1687 "CSSPropertyNames.gperf"
    {"-webkit-flex-direction", CSSPropertyID::CSSPropertyFlexDirection},
#line 1230 "CSSPropertyNames.gperf"
    {"input-security", CSSPropertyID::CSSPropertyInputSecurity},
#line 1138 "CSSPropertyNames.gperf"
    {"background-image", CSSPropertyID::CSSPropertyBackgroundImage},
#line 1729 "CSSPropertyNames.gperf"
    {"-webkit-transform-origin-y", CSSPropertyID::CSSPropertyTransformOriginY},
#line 1776 "CSSPropertyNames.gperf"
    {"-webkit-border-start", CSSPropertyID::CSSPropertyBorderInlineStart},
#line 1653 "CSSPropertyNames.gperf"
    {"-webkit-text-orientation", CSSPropertyID::CSSPropertyWebkitTextOrientation},
#line 1756 "CSSPropertyNames.gperf"
    {"-webkit-border-start-color", CSSPropertyID::CSSPropertyBorderInlineStartColor},
#line 1176 "CSSPropertyNames.gperf"
    {"column-rule-style", CSSPropertyID::CSSPropertyColumnRuleStyle},
#line 1408 "CSSPropertyNames.gperf"
    {"-webkit-box-lines", CSSPropertyID::CSSPropertyWebkitBoxLines},
#line 1410 "CSSPropertyNames.gperf"
    {"-webkit-box-orient", CSSPropertyID::CSSPropertyWebkitBoxOrient},
#line 1566 "CSSPropertyNames.gperf"
    {"border-block-width", CSSPropertyID::CSSPropertyBorderBlockWidth},
#line 1139 "CSSPropertyNames.gperf"
    {"background-origin", CSSPropertyID::CSSPropertyBackgroundOrigin},
#line 1440 "CSSPropertyNames.gperf"
    {"-webkit-text-combine", CSSPropertyID::CSSPropertyWebkitTextCombine},
#line 1658 "CSSPropertyNames.gperf"
    {"-webkit-font-kerning", CSSPropertyID::CSSPropertyFontKerning},
#line 1786 "CSSPropertyNames.gperf"
    {"-webkit-text-emphasis", CSSPropertyID::CSSPropertyTextEmphasis},
#line 1686 "CSSPropertyNames.gperf"
    {"-webkit-flex-basis", CSSPropertyID::CSSPropertyFlexBasis},
#line 1648 "CSSPropertyNames.gperf"
    {"-webkit-mask", CSSPropertyID::CSSPropertyWebkitMask},
#line 1721 "CSSPropertyNames.gperf"
    {"-webkit-text-emphasis-color", CSSPropertyID::CSSPropertyTextEmphasisColor},
#line 1715 "CSSPropertyNames.gperf"
    {"-webkit-shape-margin", CSSPropertyID::CSSPropertyShapeMargin},
#line 1693 "CSSPropertyNames.gperf"
    {"-webkit-hyphens", CSSPropertyID::CSSPropertyHyphens},
#line 1768 "CSSPropertyNames.gperf"
    {"-webkit-padding-after", CSSPropertyID::CSSPropertyPaddingBlockEnd},
#line 1705 "CSSPropertyNames.gperf"
    {"-webkit-mask-size", CSSPropertyID::CSSPropertyMaskSize},
#line 1766 "CSSPropertyNames.gperf"
    {"-webkit-min-logical-height", CSSPropertyID::CSSPropertyMinBlockSize},
#line 1775 "CSSPropertyNames.gperf"
    {"-webkit-border-end", CSSPropertyID::CSSPropertyBorderInlineEnd},
#line 1143 "CSSPropertyNames.gperf"
    {"background-size", CSSPropertyID::CSSPropertyBackgroundSize},
#line 1411 "CSSPropertyNames.gperf"
    {"-webkit-box-pack", CSSPropertyID::CSSPropertyWebkitBoxPack},
#line 1753 "CSSPropertyNames.gperf"
    {"-webkit-border-end-color", CSSPropertyID::CSSPropertyBorderInlineEndColor},
#line 1412 "CSSPropertyNames.gperf"
    {"-webkit-box-reflect", CSSPropertyID::CSSPropertyWebkitBoxReflect},
#line 1771 "CSSPropertyNames.gperf"
    {"-webkit-padding-start", CSSPropertyID::CSSPropertyPaddingInlineStart},
#line 1543 "CSSPropertyNames.gperf"
    {"padding-block-start", CSSPropertyID::CSSPropertyPaddingBlockStart},
#line 1423 "CSSPropertyNames.gperf"
    {"-webkit-line-box-contain", CSSPropertyID::CSSPropertyWebkitLineBoxContain},
#line 1657 "CSSPropertyNames.gperf"
    {"-epub-writing-mode", CSSPropertyID::CSSPropertyWritingMode},
#line 1669 "CSSPropertyNames.gperf"
    {"-webkit-animation-play-state", CSSPropertyID::CSSPropertyAnimationPlayState},
#line 1106 "CSSPropertyNames.gperf"
    {"-webkit-text-zoom", CSSPropertyID::CSSPropertyWebkitTextZoom},
#line 1722 "CSSPropertyNames.gperf"
    {"-webkit-text-emphasis-position", CSSPropertyID::CSSPropertyTextEmphasisPosition},
#line 1734 "CSSPropertyNames.gperf"
    {"-webkit-transition-property", CSSPropertyID::CSSPropertyTransitionProperty},
#line 1403 "CSSPropertyNames.gperf"
    {"-webkit-box-align", CSSPropertyID::CSSPropertyWebkitBoxAlign},
#line 1650 "CSSPropertyNames.gperf"
    {"-webkit-mask-position", CSSPropertyID::CSSPropertyWebkitMaskPosition},
#line 1433 "CSSPropertyNames.gperf"
    {"-webkit-mask-composite", CSSPropertyID::CSSPropertyWebkitMaskComposite},
#line 1452 "CSSPropertyNames.gperf"
    {"border-bottom-right-radius", CSSPropertyID::CSSPropertyBorderBottomRightRadius},
#line 1652 "CSSPropertyNames.gperf"
    {"-webkit-text-decoration", CSSPropertyID::CSSPropertyWebkitTextDecoration},
#line 1142 "CSSPropertyNames.gperf"
    {"background-repeat", CSSPropertyID::CSSPropertyBackgroundRepeat},
#line 1152 "CSSPropertyNames.gperf"
    {"border-image-outset", CSSPropertyID::CSSPropertyBorderImageOutset},
#line 1718 "CSSPropertyNames.gperf"
    {"-webkit-text-decoration-line", CSSPropertyID::CSSPropertyTextDecorationLine},
#line 1717 "CSSPropertyNames.gperf"
    {"-webkit-text-decoration-color", CSSPropertyID::CSSPropertyTextDecorationColor},
#line 1663 "CSSPropertyNames.gperf"
    {"-webkit-animation-delay", CSSPropertyID::CSSPropertyAnimationDelay},
#line 1704 "CSSPropertyNames.gperf"
    {"-webkit-mask-repeat", CSSPropertyID::CSSPropertyMaskRepeat},
#line 1457 "CSSPropertyNames.gperf"
    {"border-left-width", CSSPropertyID::CSSPropertyBorderLeftWidth},
#line 1086 "CSSPropertyNames.gperf"
    {"font-size-adjust", CSSPropertyID::CSSPropertyFontSizeAdjust},
#line 1405 "CSSPropertyNames.gperf"
    {"-webkit-box-direction", CSSPropertyID::CSSPropertyWebkitBoxDirection},
#line 1714 "CSSPropertyNames.gperf"
    {"-webkit-shape-image-threshold", CSSPropertyID::CSSPropertyShapeImageThreshold},
#line 1773 "CSSPropertyNames.gperf"
    {"-webkit-border-after", CSSPropertyID::CSSPropertyBorderBlockEnd},
#line 1770 "CSSPropertyNames.gperf"
    {"-webkit-padding-end", CSSPropertyID::CSSPropertyPaddingInlineEnd},
#line 1441 "CSSPropertyNames.gperf"
    {"-webkit-text-decorations-in-effect", CSSPropertyID::CSSPropertyWebkitTextDecorationsInEffect},
#line 1505 "CSSPropertyNames.gperf"
    {"border-block-end-width", CSSPropertyID::CSSPropertyBorderBlockEndWidth},
#line 1747 "CSSPropertyNames.gperf"
    {"-webkit-border-after-color", CSSPropertyID::CSSPropertyBorderBlockEndColor},
#line 1732 "CSSPropertyNames.gperf"
    {"-webkit-transition-delay", CSSPropertyID::CSSPropertyTransitionDelay},
#line 1643 "CSSPropertyNames.gperf"
    {"-webkit-border-image", CSSPropertyID::CSSPropertyWebkitBorderImage},
#line 1736 "CSSPropertyNames.gperf"
    {"-epub-word-break", CSSPropertyID::CSSPropertyWordBreak},
#line 1516 "CSSPropertyNames.gperf"
    {"border-inline-start-width", CSSPropertyID::CSSPropertyBorderInlineStartWidth},
#line 1696 "CSSPropertyNames.gperf"
    {"-webkit-line-break", CSSPropertyID::CSSPropertyLineBreak},
#line 1134 "CSSPropertyNames.gperf"
    {"background-attachment", CSSPropertyID::CSSPropertyBackgroundAttachment},
#line 1751 "CSSPropertyNames.gperf"
    {"-webkit-border-before-style", CSSPropertyID::CSSPropertyBorderBlockStartStyle},
#line 1432 "CSSPropertyNames.gperf"
    {"-webkit-mask-clip", CSSPropertyID::CSSPropertyWebkitMaskClip},
#line 1703 "CSSPropertyNames.gperf"
    {"-webkit-mask-origin", CSSPropertyID::CSSPropertyMaskOrigin},
#line 1723 "CSSPropertyNames.gperf"
    {"-epub-text-emphasis-style", CSSPropertyID::CSSPropertyTextEmphasisStyle},
#line 1778 "CSSPropertyNames.gperf"
    {"-webkit-columns", CSSPropertyID::CSSPropertyColumns},
#line 1769 "CSSPropertyNames.gperf"
    {"-webkit-padding-before", CSSPropertyID::CSSPropertyPaddingBlockStart},
#line 1654 "CSSPropertyNames.gperf"
    {"-webkit-text-stroke", CSSPropertyID::CSSPropertyWebkitTextStroke},
#line 1444 "CSSPropertyNames.gperf"
    {"-webkit-text-stroke-color", CSSPropertyID::CSSPropertyWebkitTextStrokeColor},
#line 1406 "CSSPropertyNames.gperf"
    {"-webkit-box-flex", CSSPropertyID::CSSPropertyWebkitBoxFlex},
#line 1448 "CSSPropertyNames.gperf"
    {"-webkit-user-select", CSSPropertyID::CSSPropertyWebkitUserSelect},
#line 1135 "CSSPropertyNames.gperf"
    {"background-blend-mode", CSSPropertyID::CSSPropertyBackgroundBlendMode},
#line 1757 "CSSPropertyNames.gperf"
    {"-webkit-border-start-style", CSSPropertyID::CSSPropertyBorderInlineStartStyle},
#line 1677 "CSSPropertyNames.gperf"
    {"-webkit-column-fill", CSSPropertyID::CSSPropertyColumnFill},
#line 1651 "CSSPropertyNames.gperf"
    {"-webkit-perspective", CSSPropertyID::CSSPropertyWebkitPerspective},
#line 1401 "CSSPropertyNames.gperf"
    {"-webkit-border-horizontal-spacing", CSSPropertyID::CSSPropertyWebkitBorderHorizontalSpacing},
#line 1683 "CSSPropertyNames.gperf"
    {"-webkit-column-span", CSSPropertyID::CSSPropertyColumnSpan},
#line 1689 "CSSPropertyNames.gperf"
    {"-webkit-flex-shrink", CSSPropertyID::CSSPropertyFlexShrink},
#line 1661 "CSSPropertyNames.gperf"
    {"-webkit-align-items", CSSPropertyID::CSSPropertyAlignItems},
#line 1764 "CSSPropertyNames.gperf"
    {"-webkit-max-logical-height", CSSPropertyID::CSSPropertyMaxBlockSize},
#line 1724 "CSSPropertyNames.gperf"
    {"-webkit-text-emphasis-style", CSSPropertyID::CSSPropertyTextEmphasisStyle},
#line 1434 "CSSPropertyNames.gperf"
    {"-webkit-mask-position-x", CSSPropertyID::CSSPropertyWebkitMaskPositionX},
#line 1510 "CSSPropertyNames.gperf"
    {"border-end-start-radius", CSSPropertyID::CSSPropertyBorderEndStartRadius},
#line 1782 "CSSPropertyNames.gperf"
    {"-webkit-perspective-origin", CSSPropertyID::CSSPropertyPerspectiveOrigin},
#line 1415 "CSSPropertyNames.gperf"
    {"-webkit-column-progression", CSSPropertyID::CSSPropertyWebkitColumnProgression},
#line 1754 "CSSPropertyNames.gperf"
    {"-webkit-border-end-style", CSSPropertyID::CSSPropertyBorderInlineEndStyle},
#line 1780 "CSSPropertyNames.gperf"
    {"-webkit-flex-flow", CSSPropertyID::CSSPropertyFlexFlow},
#line 1463 "CSSPropertyNames.gperf"
    {"border-top-right-radius", CSSPropertyID::CSSPropertyBorderTopRightRadius},
#line 1702 "CSSPropertyNames.gperf"
    {"-webkit-mask-image", CSSPropertyID::CSSPropertyMaskImage},
#line 1675 "CSSPropertyNames.gperf"
    {"-webkit-clip-path", CSSPropertyID::CSSPropertyClipPath},
#line 1435 "CSSPropertyNames.gperf"
    {"-webkit-mask-position-y", CSSPropertyID::CSSPropertyWebkitMaskPositionY},
#line 1679 "CSSPropertyNames.gperf"
    {"-webkit-column-gap", CSSPropertyID::CSSPropertyColumnGap},
#line 1667 "CSSPropertyNames.gperf"
    {"-webkit-animation-iteration-count", CSSPropertyID::CSSPropertyAnimationIterationCount},
#line 1673 "CSSPropertyNames.gperf"
    {"-webkit-box-sizing", CSSPropertyID::CSSPropertyBoxSizing},
#line 1436 "CSSPropertyNames.gperf"
    {"-webkit-mask-source-type", CSSPropertyID::CSSPropertyWebkitMaskSourceType},
#line 1656 "CSSPropertyNames.gperf"
    {"-webkit-writing-mode", CSSPropertyID::CSSPropertyWritingMode},
#line 1688 "CSSPropertyNames.gperf"
    {"-webkit-flex-grow", CSSPropertyID::CSSPropertyFlexGrow},
#line 1508 "CSSPropertyNames.gperf"
    {"border-block-start-width", CSSPropertyID::CSSPropertyBorderBlockStartWidth},
#line 1719 "CSSPropertyNames.gperf"
    {"-webkit-text-decoration-style", CSSPropertyID::CSSPropertyTextDecorationStyle},
#line 1398 "CSSPropertyNames.gperf"
    {"-webkit-backdrop-filter", CSSPropertyID::CSSPropertyWebkitBackdropFilter},
#line 1428 "CSSPropertyNames.gperf"
    {"-webkit-marquee-increment", CSSPropertyID::CSSPropertyWebkitMarqueeIncrement},
#line 1429 "CSSPropertyNames.gperf"
    {"-webkit-marquee-repetition", CSSPropertyID::CSSPropertyWebkitMarqueeRepetition},
#line 1748 "CSSPropertyNames.gperf"
    {"-webkit-border-after-style", CSSPropertyID::CSSPropertyBorderBlockEndStyle},
#line 1670 "CSSPropertyNames.gperf"
    {"-webkit-animation-timing-function", CSSPropertyID::CSSPropertyAnimationTimingFunction},
#line 1399 "CSSPropertyNames.gperf"
    {"-webkit-background-clip", CSSPropertyID::CSSPropertyWebkitBackgroundClip},
#line 1759 "CSSPropertyNames.gperf"
    {"-webkit-logical-width", CSSPropertyID::CSSPropertyInlineSize},
#line 1400 "CSSPropertyNames.gperf"
    {"-webkit-background-origin", CSSPropertyID::CSSPropertyWebkitBackgroundOrigin},
#line 1735 "CSSPropertyNames.gperf"
    {"-webkit-transition-timing-function", CSSPropertyID::CSSPropertyTransitionTimingFunction},
#line 1726 "CSSPropertyNames.gperf"
    {"-webkit-text-underline-position", CSSPropertyID::CSSPropertyTextUnderlinePosition},
#line 1447 "CSSPropertyNames.gperf"
    {"-webkit-user-modify", CSSPropertyID::CSSPropertyWebkitUserModify},
#line 1665 "CSSPropertyNames.gperf"
    {"-webkit-animation-duration", CSSPropertyID::CSSPropertyAnimationDuration},
#line 1558 "CSSPropertyNames.gperf"
    {"background-position", CSSPropertyID::CSSPropertyBackgroundPosition},
#line 1427 "CSSPropertyNames.gperf"
    {"-webkit-marquee-direction", CSSPropertyID::CSSPropertyWebkitMarqueeDirection},
#line 1223 "CSSPropertyNames.gperf"
    {"hanging-punctuation", CSSPropertyID::CSSPropertyHangingPunctuation},
#line 1733 "CSSPropertyNames.gperf"
    {"-webkit-transition-duration", CSSPropertyID::CSSPropertyTransitionDuration},
#line 1430 "CSSPropertyNames.gperf"
    {"-webkit-marquee-speed", CSSPropertyID::CSSPropertyWebkitMarqueeSpeed},
#line 1709 "CSSPropertyNames.gperf"
    {"-webkit-perspective-origin-x", CSSPropertyID::CSSPropertyPerspectiveOriginX},
#line 1690 "CSSPropertyNames.gperf"
    {"-webkit-flex-wrap", CSSPropertyID::CSSPropertyFlexWrap},
#line 1767 "CSSPropertyNames.gperf"
    {"-webkit-min-logical-width", CSSPropertyID::CSSPropertyMinInlineSize},
#line 1711 "CSSPropertyNames.gperf"
    {"-webkit-print-color-adjust", CSSPropertyID::CSSPropertyPrintColorAdjust},
#line 1784 "CSSPropertyNames.gperf"
    {"-webkit-text-decoration-skip", CSSPropertyID::CSSPropertyTextDecorationSkip},
#line 1446 "CSSPropertyNames.gperf"
    {"-webkit-user-drag", CSSPropertyID::CSSPropertyWebkitUserDrag},
#line 1710 "CSSPropertyNames.gperf"
    {"-webkit-perspective-origin-y", CSSPropertyID::CSSPropertyPerspectiveOriginY},
#line 1250 "CSSPropertyNames.gperf"
    {"mask-border-width", CSSPropertyID::CSSPropertyMaskBorderWidth},
#line 1402 "CSSPropertyNames.gperf"
    {"-webkit-border-vertical-spacing", CSSPropertyID::CSSPropertyWebkitBorderVerticalSpacing},
#line 1642 "CSSPropertyNames.gperf"
    {"-webkit-background-size", CSSPropertyID::CSSPropertyWebkitBackgroundSize},
#line 1431 "CSSPropertyNames.gperf"
    {"-webkit-marquee-style", CSSPropertyID::CSSPropertyWebkitMarqueeStyle},
#line 1413 "CSSPropertyNames.gperf"
    {"-webkit-box-shadow", CSSPropertyID::CSSPropertyWebkitBoxShadow},
#line 1649 "CSSPropertyNames.gperf"
    {"-webkit-mask-box-image", CSSPropertyID::CSSPropertyWebkitMaskBoxImage},
#line 1694 "CSSPropertyNames.gperf"
    {"-webkit-justify-content", CSSPropertyID::CSSPropertyJustifyContent},
#line 1414 "CSSPropertyNames.gperf"
    {"-webkit-column-axis", CSSPropertyID::CSSPropertyWebkitColumnAxis},
#line 1699 "CSSPropertyNames.gperf"
    {"-webkit-mask-box-image-slice", CSSPropertyID::CSSPropertyMaskBorderSlice},
#line 1684 "CSSPropertyNames.gperf"
    {"-webkit-column-width", CSSPropertyID::CSSPropertyColumnWidth},
#line 1645 "CSSPropertyNames.gperf"
    {"-webkit-column-break-after", CSSPropertyID::CSSPropertyWebkitColumnBreakAfter},
#line 1752 "CSSPropertyNames.gperf"
    {"-webkit-border-before-width", CSSPropertyID::CSSPropertyBorderBlockStartWidth},
#line 1695 "CSSPropertyNames.gperf"
    {"-webkit-justify-items", CSSPropertyID::CSSPropertyJustifyItems},
#line 1439 "CSSPropertyNames.gperf"
    {"-webkit-ruby-position", CSSPropertyID::CSSPropertyWebkitRubyPosition},
#line 1644 "CSSPropertyNames.gperf"
    {"-webkit-border-radius", CSSPropertyID::CSSPropertyWebkitBorderRadius},
#line 1140 "CSSPropertyNames.gperf"
    {"background-position-x", CSSPropertyID::CSSPropertyBackgroundPositionX},
#line 1698 "CSSPropertyNames.gperf"
    {"-webkit-mask-box-image-repeat", CSSPropertyID::CSSPropertyMaskBorderRepeat},
#line 1672 "CSSPropertyNames.gperf"
    {"-webkit-backface-visibility", CSSPropertyID::CSSPropertyBackfaceVisibility},
#line 1758 "CSSPropertyNames.gperf"
    {"-webkit-border-start-width", CSSPropertyID::CSSPropertyBorderInlineStartWidth},
#line 1420 "CSSPropertyNames.gperf"
    {"-webkit-hyphenate-limit-lines", CSSPropertyID::CSSPropertyWebkitHyphenateLimitLines},
#line 1141 "CSSPropertyNames.gperf"
    {"background-position-y", CSSPropertyID::CSSPropertyBackgroundPositionY},
#line 1418 "CSSPropertyNames.gperf"
    {"-webkit-hyphenate-limit-after", CSSPropertyID::CSSPropertyWebkitHyphenateLimitAfter},
#line 1738 "CSSPropertyNames.gperf"
    {"-webkit-border-bottom-left-radius", CSSPropertyID::CSSPropertyBorderBottomLeftRadius},
#line 1647 "CSSPropertyNames.gperf"
    {"-webkit-column-break-inside", CSSPropertyID::CSSPropertyWebkitColumnBreakInside},
#line 1765 "CSSPropertyNames.gperf"
    {"-webkit-max-logical-width", CSSPropertyID::CSSPropertyMaxInlineSize},
#line 1755 "CSSPropertyNames.gperf"
    {"-webkit-border-end-width", CSSPropertyID::CSSPropertyBorderInlineEndWidth},
#line 1777 "CSSPropertyNames.gperf"
    {"-webkit-column-rule", CSSPropertyID::CSSPropertyColumnRule},
#line 1443 "CSSPropertyNames.gperf"
    {"-webkit-text-security", CSSPropertyID::CSSPropertyWebkitTextSecurity},
#line 1691 "CSSPropertyNames.gperf"
    {"-webkit-hyphenate-character", CSSPropertyID::CSSPropertyHyphenateCharacter},
#line 1680 "CSSPropertyNames.gperf"
    {"-webkit-column-rule-color", CSSPropertyID::CSSPropertyColumnRuleColor},
#line 1404 "CSSPropertyNames.gperf"
    {"-webkit-box-decoration-break", CSSPropertyID::CSSPropertyWebkitBoxDecorationBreak},
#line 1646 "CSSPropertyNames.gperf"
    {"-webkit-column-break-before", CSSPropertyID::CSSPropertyWebkitColumnBreakBefore},
#line 1749 "CSSPropertyNames.gperf"
    {"-webkit-border-after-width", CSSPropertyID::CSSPropertyBorderBlockEndWidth},
#line 1739 "CSSPropertyNames.gperf"
    {"-webkit-border-bottom-right-radius", CSSPropertyID::CSSPropertyBorderBottomRightRadius},
#line 1407 "CSSPropertyNames.gperf"
    {"-webkit-box-flex-group", CSSPropertyID::CSSPropertyWebkitBoxFlexGroup},
#line 1419 "CSSPropertyNames.gperf"
    {"-webkit-hyphenate-limit-before", CSSPropertyID::CSSPropertyWebkitHyphenateLimitBefore},
#line 1676 "CSSPropertyNames.gperf"
    {"-webkit-column-count", CSSPropertyID::CSSPropertyColumnCount},
#line 1409 "CSSPropertyNames.gperf"
    {"-webkit-box-ordinal-group", CSSPropertyID::CSSPropertyWebkitBoxOrdinalGroup},
#line 1445 "CSSPropertyNames.gperf"
    {"-webkit-text-stroke-width", CSSPropertyID::CSSPropertyWebkitTextStrokeWidth},
#line 1177 "CSSPropertyNames.gperf"
    {"column-rule-width", CSSPropertyID::CSSPropertyColumnRuleWidth},
#line 1681 "CSSPropertyNames.gperf"
    {"-webkit-column-rule-style", CSSPropertyID::CSSPropertyColumnRuleStyle},
#line 1416 "CSSPropertyNames.gperf"
    {"-webkit-cursor-visibility", CSSPropertyID::CSSPropertyWebkitCursorVisibility},
#line 1700 "CSSPropertyNames.gperf"
    {"-webkit-mask-box-image-source", CSSPropertyID::CSSPropertyMaskBorderSource},
#line 1697 "CSSPropertyNames.gperf"
    {"-webkit-mask-box-image-outset", CSSPropertyID::CSSPropertyMaskBorderOutset},
#line 1740 "CSSPropertyNames.gperf"
    {"-webkit-border-top-left-radius", CSSPropertyID::CSSPropertyBorderTopLeftRadius},
#line 1701 "CSSPropertyNames.gperf"
    {"-webkit-mask-box-image-width", CSSPropertyID::CSSPropertyMaskBorderWidth},
#line 1741 "CSSPropertyNames.gperf"
    {"-webkit-border-top-right-radius", CSSPropertyID::CSSPropertyBorderTopRightRadius},
#line 1682 "CSSPropertyNames.gperf"
    {"-webkit-column-rule-width", CSSPropertyID::CSSPropertyColumnRuleWidth}
  };

static const short lookup[] =
  {
       -1,    -1,     0,    -1,    -1,     1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,     2,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,     3,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,     4,    -1,     5,    -1,
       -1,    -1,    -1,     6,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
        7,    -1,    -1,    -1,    -1,     8,    -1,
       -1,    -1,     9,    -1,    -1,    -1,    -1,
       -1,    10,    -1,    -1,    -1,    -1,    11,
       -1,    -1,    -1,    -1,    12,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       13,    -1,    14,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    15,    -1,    -1,    -1,
       -1,    16,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    17,    -1,    -1,
       -1,    -1,    18,    -1,    -1,    -1,    -1,
       19,    -1,    -1,    -1,    -1,    20,    -1,
       -1,    -1,    -1,    21,    -1,    -1,    -1,
       -1,    22,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    23,    24,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       25,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    26,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       27,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    28,    -1,    -1,    -1,
       -1,    -1,    29,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    30,    -1,
       -1,    -1,    31,    32,    -1,    -1,    -1,
       -1,    -1,    -1,    33,    -1,    -1,    -1,
       -1,    34,    -1,    -1,    -1,    -1,    -1,
       -1,    35,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    36,    -1,    -1,    -1,
       -1,    37,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    38,    -1,    -1,    -1,    -1,
       39,    -1,    40,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    41,    -1,    42,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       43,    -1,    44,    -1,    -1,    45,    -1,
       -1,    -1,    -1,    46,    -1,    -1,    -1,
       -1,    47,    -1,    48,    -1,    -1,    49,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    50,    -1,    -1,    -1,    -1,
       51,    -1,    -1,    -1,    -1,    52,    -1,
       53,    -1,    -1,    54,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    55,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       56,    -1,    -1,    -1,    -1,    57,    -1,
       58,    -1,    -1,    -1,    -1,    -1,    -1,
    -1155,    61,    62,    63,  -657,    -2,    64,
       -1,    -1,    -1,    -1,    65,    -1,    -1,
       -1,    -1,    66,    -1,    -1,    -1,    67,
       -1,    -1,    68,    -1,    -1,    -1,    -1,
       -1,    -1,    69,    -1,    -1,    70,    -1,
       -1,    -1,    -1,    71,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    72,    -1,    -1,
       -1,    -1,    73,    -1,    -1,    -1,    -1,
       74,    -1,    -1,    -1,    -1,    -1,    -1,
       75,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    76,    -1,    77,    -1,    78,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       79,    -1,    -1,    -1,    -1,    80,    -1,
       -1,    -1,    -1,    81,    -1,    -1,    82,
       -1,    -1,    -1,    -1,    -1,    -1,    83,
       -1,    84,    85,    -1,    86,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    87,    -1,
       -1,    -1,    -1,    88,    -1,    -1,    -1,
       89,    -1,    -1,    -1,    -1,    -1,    90,
       -1,    -1,    -1,    -1,    -1,    91,    92,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    93,    -1,    -1,    -1,    -1,    -1,
       -1,    94,    -1,    -1,    95,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    96,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    97,    -1,
       -1,    -1,    -1,    98,    -1,    -1,    99,
       -1,    -1,    -1,   100,   101,    -1,    -1,
       -1,    -1,   102,    -1,   103,    -1,    -1,
      104,    -1,   105,    -1,    -1,   106,    -1,
      107,    -1,   108,   109,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   110,   111,
       -1,   112,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   113,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   114,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      115,    -1,   116,    -1,    -1,    -1,    -1,
       -1,    -1,   117,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   118,    -1,
       -1,   119,    -1,    -1,   120,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   121,    -1,    -1,    -1,    -1,
      122,    -1,    -1,    -1,    -1,   123,    -1,
       -1,   124,    -1,   125,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   126,   127,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      128,   129,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      130,    -1,    -1,    -1,    -1,    -1,    -1,
      131,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   132,    -1,    -1,
       -1,    -1,   133,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      134,    -1,    -1,   135,    -1,   136,    -1,
       -1,   137,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      138,    -1,    -1,    -1,    -1,   139,    -1,
      140,    -1,    -1,    -1,    -1,   141,    -1,
      142,    -1,    -1,    -1,    -1,   143,    -1,
       -1,    -1,    -1,    -1,   144,    -1,   145,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   146,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   147,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   148,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   149,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   150,    -1,
      151,    -1,   152,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   153,    -1,    -1,    -1,
      154,    -1,    -1,   155,    -1,    -1,   156,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      157,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   158,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   159,    -1,    -1,
       -1,    -1,    -1,    -1,   160,   161,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      162,   163,    -1,   164,    -1,    -1,   165,
       -1,    -1,    -1,   166,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   167,    -1,   168,
       -1,    -1,   169,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   170,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   171,    -1,    -1,   172,    -1,   173,
       -1,    -1,   174,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   175,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   176,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   177,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   178,    -1,   179,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   180,
       -1,   181,    -1,   182,    -1,    -1,    -1,
      183,    -1,   184,    -1,    -1,   185,    -1,
       -1,    -1,   186,   187,    -1,    -1,    -1,
      188,   189,    -1,   190,    -1,    -1,   191,
       -1,    -1,    -1,    -1,   192,    -1,    -1,
       -1,    -1,   193,    -1,    -1,    -1,   194,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   195,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   196,
       -1,   197,    -1,    -1,   198,    -1,    -1,
       -1,    -1,   199,    -1,   200,    -1,   201,
      202,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   203,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   204,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   205,    -1,    -1,    -1,
       -1,    -1,   206,   207,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   208,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      209,    -1,    -1,    -1,    -1,    -1,   210,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   211,    -1,
      212,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   213,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   214,    -1,   215,
       -1,    -1,    -1,    -1,    -1,    -1,   216,
       -1,    -1,   217,    -1,    -1,    -1,    -1,
       -1,    -1,   218,   219,    -1,    -1,    -1,
       -1,   220,   221,    -1,    -1,   222,    -1,
       -1,    -1,    -1,    -1,   223,   224,    -1,
       -1,   225,    -1,    -1,    -1,    -1,    -1,
      226,    -1,   227,    -1,    -1,   228,    -1,
      229,    -1,    -1,    -1,    -1,   230,    -1,
       -1,   231,    -1,   232,    -1,    -1,    -1,
      233,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   234,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   235,   236,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   237,    -1,    -1,   238,    -1,
       -1,    -1,    -1,   239,    -1,    -1,    -1,
       -1,    -1,    -1,   240,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   241,
       -1,    -1,   242,    -1,    -1,    -1,   243,
       -1,    -1,    -1,    -1,   244,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   245,    -1,   246,
       -1,    -1,    -1,    -1,    -1,    -1,   247,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   248,   249,    -1,    -1,    -1,
       -1,   250,   251,   252,    -1,   253,   254,
       -1,    -1,    -1,    -1,    -1,    -1,   255,
       -1,    -1,    -1,    -1,   256,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   257,    -1,    -1,    -1,
       -1,    -1,    -1,   258,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      259,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   260,    -1,    -1,    -1,    -1,   261,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   262,    -1,    -1,    -1,   263,    -1,
      264,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   265,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      266,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   267,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   268,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   269,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   270,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   271,    -1,
       -1,    -1,    -1,    -1,    -1,   272,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   273,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   274,    -1,
       -1,    -1,    -1,   275,    -1,    -1,    -1,
      276,   277,    -1,    -1,    -1,   278,   279,
       -1,    -1,    -1,    -1,   280,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   281,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   282,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      283,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   284,    -1,    -1,    -1,    -1,    -1,
      285,    -1,    -1,   286,    -1,    -1,   287,
       -1,    -1,    -1,    -1,   288,    -1,    -1,
       -1,    -1,   289,    -1,    -1,    -1,    -1,
      290,    -1,    -1,    -1,    -1,   291,    -1,
       -1,    -1,    -1,   292,    -1,    -1,    -1,
       -1,    -1,   293,   294,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   295,    -1,    -1,
       -1,    -1,    -1,   296,    -1,    -1,    -1,
       -1,    -1,    -1,   297,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   298,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   299,    -1,
      300,    -1,    -1,   301,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   302,   303,    -1,    -1,
       -1,    -1,   304,    -1,    -1,    -1,    -1,
      305,    -1,   306,    -1,    -1,   307,    -1,
       -1,    -1,   308,   309,    -1,    -1,   310,
       -1,   311,    -1,   312,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   313,   314,    -1,    -1,    -1,   315,
       -1,    -1,   316,    -1,    -1,   317,    -1,
      318,    -1,    -1,   319,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   320,    -1,    -1,
       -1,    -1,    -1,    -1,   321,    -1,    -1,
       -1,    -1,    -1,   322,    -1,    -1,    -1,
       -1,   323,    -1,    -1,   324,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   325,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   326,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      327,   328,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      329,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   330,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   331,   332,    -1,   333,    -1,    -1,
      334,    -1,    -1,   335,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   336,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   337,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   338,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   339,    -1,    -1,    -1,
       -1,    -1,    -1,   340,   341,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   342,    -1,    -1,    -1,    -1,
       -1,    -1,   343,    -1,    -1,    -1,    -1,
       -1,   344,    -1,    -1,    -1,   345,   346,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   347,    -1,    -1,    -1,    -1,
      348,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   349,    -1,    -1,    -1,
       -1,   350,   351,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   352,    -1,   353,    -1,    -1,
       -1,    -1,   354,    -1,    -1,   355,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   356,    -1,    -1,   357,    -1,
       -1,    -1,    -1,    -1,   358,    -1,    -1,
       -1,    -1,    -1,    -1,   359,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   360,
       -1,   361,   362,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      363,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   364,
       -1,   365,   366,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   367,
       -1,    -1,    -1,   368,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   369,
       -1,    -1,    -1,    -1,    -1,   370,   371,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      372,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   373,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   374,
       -1,    -1,   375,    -1,    -1,    -1,    -1,
      376,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   377,    -1,    -1,
       -1,    -1,   378,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      379,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   380,    -1,   381,    -1,    -1,
       -1,    -1,   382,    -1,    -1,    -1,    -1,
       -1,    -1,   383,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   384,   385,
       -1,    -1,    -1,   386,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   387,   388,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   389,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   390,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   391,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   392,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   393,    -1,    -1,   394,
       -1,    -1,    -1,    -1,   395,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      396,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   397,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   398,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   399,    -1,    -1,    -1,    -1,
      400,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   401,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   402,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   403,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   404,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   405,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   406,    -1,
      407,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   408,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      409,    -1,    -1,    -1,    -1,    -1,   410,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   411,    -1,
       -1,    -1,    -1,   412,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   413,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   414,    -1,    -1,    -1,    -1,
      415,    -1,   416,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   417,    -1,
       -1,    -1,    -1,   418,    -1,    -1,    -1,
       -1,    -1,    -1,   419,    -1,   420,   421,
       -1,    -1,    -1,    -1,   422,    -1,   423,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   424,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   425,    -1,
       -1,   426,    -1,    -1,    -1,   427,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   428,    -1,    -1,    -1,
      429,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   430,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   431,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      432,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   433,    -1,
       -1,    -1,    -1,    -1,    -1,   434,   435,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   436,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   437,
       -1,   438,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      439,    -1,    -1,    -1,    -1,    -1,   440,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   441,    -1,    -1,
       -1,    -1,    -1,    -1,   442,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   443,    -1,    -1,    -1,    -1,    -1,
       -1,   444,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   445,    -1,
      446,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      447,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   448,    -1,    -1,   449,    -1,
       -1,    -1,   450,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   451,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      452,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   453,    -1,    -1,    -1,
       -1,    -1,   454,    -1,    -1,    -1,    -1,
       -1,    -1,   455,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   456,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   457,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   458,    -1,   459,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   460,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   461,    -1,
       -1,    -1,   462,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   463,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   464,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   465,    -1,    -1,    -1,   466,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   467,   468,
       -1,   469,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   470,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   471,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   472,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   473,    -1,
       -1,    -1,   474,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   475,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   476,    -1,    -1,    -1,    -1,
      477,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   478,    -1,    -1,   479,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   480,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   481,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      482,    -1,    -1,    -1,    -1,    -1,   483,
       -1,   484,    -1,    -1,   485,    -1,    -1,
       -1,    -1,   486,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   487,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   488,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   489,    -1,   490,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   491,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   492,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      493,    -1,    -1,    -1,    -1,   494,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   495,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   496,
       -1,    -1,    -1,    -1,    -1,    -1,   497,
      498,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   499,    -1,   500,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   501,   502,    -1,    -1,   503,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   504,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      505,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   506,    -1,    -1,   507,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   508,    -1,    -1,
       -1,    -1,   509,    -1,    -1,    -1,    -1,
       -1,    -1,   510,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   511,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   512,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   513,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   514,    -1,    -1,    -1,   515,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   516,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      517,    -1,    -1,    -1,   518,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   519,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   520,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   521,    -1,    -1,    -1,    -1,
      522,    -1,    -1,    -1,    -1,   523,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   524,    -1,    -1,    -1,    -1,
      525,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   526,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   527,    -1,   528,
       -1,    -1,    -1,    -1,    -1,    -1,   529,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   530,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   531,    -1,    -1,
       -1,    -1,   532,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   533,    -1,
       -1,    -1,    -1,   534,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      535,    -1,    -1,    -1,    -1,   536,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   537,
       -1,   538,    -1,    -1,    -1,    -1,   539,
       -1,    -1,    -1,    -1,   540,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   541,    -1,
      542,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   543,    -1,    -1,    -1,
       -1,   544,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      545,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   546,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   547,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   548,    -1,    -1,    -1,    -1,    -1,
       -1,   549,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   550,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   551,    -1,
       -1,    -1,    -1,    -1,    -1,   552,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   553,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   554,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   555,    -1,    -1,    -1,
       -1,    -1,    -1,   556,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   557,    -1,
       -1,    -1,    -1,    -1,    -1,   558,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   559,   560,    -1,    -1,    -1,   561,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      562,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   563,   564,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   565,    -1,
       -1,    -1,   566,    -1,    -1,   567,    -1,
       -1,   568,    -1,    -1,    -1,    -1,    -1,
       -1,   569,    -1,    -1,    -1,    -1,   570,
       -1,    -1,    -1,    -1,    -1,    -1,   571,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   572,    -1,    -1,    -1,
       -1,   573,    -1,   574,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      575,    -1,    -1,    -1,    -1,    -1,    -1,
      576,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   577,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   578,    -1,    -1,
      579,    -1,    -1,    -1,    -1,    -1,    -1,
      580,    -1,    -1,    -1,    -1,    -1,   581,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      582,    -1,   583,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   584,
       -1,    -1,   585,    -1,    -1,    -1,    -1,
      586,    -1,   587,    -1,    -1,    -1,    -1,
      588,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   589,    -1,    -1,   590,    -1,    -1,
       -1,   591,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   592,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   593,    -1,    -1,
       -1,    -1,    -1,    -1,   594,   595,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   596,
      597,   598,    -1,    -1,    -1,    -1,   599,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   600,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   601,    -1,
       -1,    -1,    -1,   602,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   603,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   604,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      605,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   606,   607,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   608,   609,    -1,    -1,
       -1,   610,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   611,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   612,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   613,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   614,
       -1,    -1,    -1,   615,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   616,
       -1,    -1,    -1,    -1,    -1,    -1,   617,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      618,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   619,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   620,    -1,
       -1,    -1,    -1,   621,    -1,    -1,    -1,
       -1,    -1,   622,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   623,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   624,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   625,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   626,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   627,    -1,
      628,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   629,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   630,    -1,    -1,    -1,
       -1,    -1,    -1,   631,   632,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   633,    -1,   634,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   635,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   636,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   637,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      638,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   639,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      640,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      641,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   642,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   643,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   644,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   645,    -1,    -1,    -1,    -1,   646,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   647,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   648,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      649,    -1,    -1,    -1,    -1,   650,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   651,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   652,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   653,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   654,   655,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   656,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   657,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      658,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      659,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   660,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   661,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   662,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   663,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   664,    -1,    -1,
       -1,    -1,    -1,    -1,   665,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   666,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      667,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      668,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      669,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   670,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   671,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   672,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   673,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   674,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   675,    -1,    -1,
       -1,    -1,   676,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   677,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   678,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   679,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      680,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   681,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   682,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      683,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   684,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   685,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   686,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   687,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   688,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      689,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   690,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      691,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      692,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   693,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   694,
       -1,    -1,    -1,   695,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   696,    -1,
      697,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   698,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      699,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   700,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   701,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   702,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   703,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   704,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   705,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
      706,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   707,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   708,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   709,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   710,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   711,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   712,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   713,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   714,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   715
  };

const struct CSSPropertyHashTableEntry *
CSSPropertyNamesHash::in_word_set (const char *str, size_t len)
{
  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      unsigned int key = hash (str, len);

      if (key <= MAX_HASH_VALUE)
        {
          int index = lookup[key];

          if (index >= 0)
            {
              const char *s = wordlist[index].name;

              if (*str == *s && !strncmp (str + 1, s + 1, len - 1) && s[len] == '\0')
                return &wordlist[index];
            }
          else if (index < -TOTAL_KEYWORDS)
            {
              int offset = - 1 - TOTAL_KEYWORDS - index;
              const struct CSSPropertyHashTableEntry *wordptr = &wordlist[TOTAL_KEYWORDS + lookup[offset]];
              const struct CSSPropertyHashTableEntry *wordendptr = wordptr + -lookup[offset + 1];

              while (wordptr < wordendptr)
                {
                  const char *s = wordptr->name;

                  if (*str == *s && !strncmp (str + 1, s + 1, len - 1) && s[len] == '\0')
                    return wordptr;
                  wordptr++;
                }
            }
        }
    }
  return 0;
}
#line 1791 "CSSPropertyNames.gperf"


CSSPropertyID findCSSProperty(const char* characters, unsigned length)
{
    auto* value = CSSPropertyNamesHash::in_word_set(characters, length);
    return value ? static_cast<CSSPropertyID>(value->id) : CSSPropertyID::CSSPropertyInvalid;
}

ASCIILiteral nameLiteral(CSSPropertyID id)
{
    if (id < firstCSSProperty)
        return { };
    unsigned index = id - firstCSSProperty;
    if (index >= numCSSProperties)
        return { };
    return propertyNameStrings[index];
}

const AtomString& nameString(CSSPropertyID id)
{
    if (id < firstCSSProperty)
        return nullAtom();
    unsigned index = id - firstCSSProperty;
    if (index >= numCSSProperties)
        return nullAtom();

    static NeverDestroyed<std::array<AtomString, numCSSProperties>> atomStrings;
    auto& string = atomStrings.get()[index];
    if (string.isNull())
        string = propertyNameStrings[index];
    return string;
}

String nameForIDL(CSSPropertyID id)
{
    LChar characters[maxCSSPropertyNameLength];
    const char* nameForCSS = nameLiteral(id);
    if (!nameForCSS)
        return emptyString();

    auto* propertyNamePointer = nameForCSS;
    auto* nextCharacter = characters;
    while (char character = *propertyNamePointer++) {
        if (character == '-') {
            char nextCharacter = *propertyNamePointer++;
            if (!nextCharacter)
                break;
            character = (propertyNamePointer - 2 != nameForCSS) ? toASCIIUpper(nextCharacter) : nextCharacter;
        }
        *nextCharacter++ = character;
    }
    return std::span<const LChar> { characters, nextCharacter };
}


bool isInternal(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyWebkitFontSizeDelta:
    case CSSPropertyID::CSSPropertyWebkitMarqueeDirection:
    case CSSPropertyID::CSSPropertyWebkitMarqueeIncrement:
    case CSSPropertyID::CSSPropertyWebkitMarqueeRepetition:
    case CSSPropertyID::CSSPropertyWebkitMarqueeSpeed:
    case CSSPropertyID::CSSPropertyWebkitMarqueeStyle:
        return true;
    default:
        return false;
    }
}

static bool isExposedNotInvalidAndNotInternal(CSSPropertyID id, const CSSPropertySettings& settings)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyFontVariantEmoji:
        return settings.cssFontVariantEmojiEnabled;
    case CSSPropertyID::CSSPropertyTextAutospace:
        return settings.cssTextAutospaceEnabled;
    case CSSPropertyID::CSSPropertyTextSpacingTrim:
        return settings.cssTextSpacingTrimEnabled;
    case CSSPropertyID::CSSPropertyAccentColor:
        return settings.accentColorEnabled;
    case CSSPropertyID::CSSPropertyAnchorName:
        return settings.cssAnchorPositioningEnabled;
    case CSSPropertyID::CSSPropertyAnchorScope:
        return settings.cssAnchorPositioningEnabled;
    case CSSPropertyID::CSSPropertyAnimationRangeEnd:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyAnimationRangeStart:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyAnimationTimeline:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyBackdropFilter:
        return settings.cssUnprefixedBackdropFilterEnabled;
    case CSSPropertyID::CSSPropertyBlockEllipsis:
        return settings.cssLineClampEnabled;
    case CSSPropertyID::CSSPropertyBlockStepAlign:
        return settings.cssRhythmicSizingEnabled;
    case CSSPropertyID::CSSPropertyBlockStepInsert:
        return settings.cssRhythmicSizingEnabled;
    case CSSPropertyID::CSSPropertyBlockStepRound:
        return settings.cssRhythmicSizingEnabled;
    case CSSPropertyID::CSSPropertyBlockStepSize:
        return settings.cssRhythmicSizingEnabled;
    case CSSPropertyID::CSSPropertyContinue:
        return settings.cssLineClampEnabled;
    case CSSPropertyID::CSSPropertyD:
        return settings.cssDPropertyEnabled;
    case CSSPropertyID::CSSPropertyDynamicRangeLimit:
        return settings.supportHDRDisplayEnabled;
    case CSSPropertyID::CSSPropertyFieldSizing:
        return settings.cssFieldSizingEnabled;
    case CSSPropertyID::CSSPropertyInputSecurity:
        return settings.cssInputSecurityEnabled;
    case CSSPropertyID::CSSPropertyLineFitEdge:
        return settings.cssLineFitEdgeEnabled;
    case CSSPropertyID::CSSPropertyMaxLines:
        return settings.cssLineClampEnabled;
    case CSSPropertyID::CSSPropertyNavigation:
        return settings.crossDocumentViewTransitionsEnabled;
    case CSSPropertyID::CSSPropertyOverflowAnchor:
        return settings.cssScrollAnchoringEnabled;
    case CSSPropertyID::CSSPropertyPositionAnchor:
        return settings.cssAnchorPositioningEnabled;
    case CSSPropertyID::CSSPropertyPositionArea:
        return settings.cssAnchorPositioningEnabled;
    case CSSPropertyID::CSSPropertyPositionTryFallbacks:
        return settings.cssAnchorPositioningEnabled;
    case CSSPropertyID::CSSPropertyPositionTryOrder:
        return settings.cssAnchorPositioningEnabled;
    case CSSPropertyID::CSSPropertyPositionVisibility:
        return settings.cssAnchorPositioningPositionVisibilityEnabled;
    case CSSPropertyID::CSSPropertyRubyAlign:
        return settings.cssRubyAlignEnabled;
    case CSSPropertyID::CSSPropertyRubyOverhang:
        return settings.cssRubyOverhangEnabled;
    case CSSPropertyID::CSSPropertyScrollTimelineAxis:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyScrollTimelineName:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyScrollbarColor:
        return settings.cssScrollbarColorEnabled;
    case CSSPropertyID::CSSPropertyScrollbarGutter:
        return settings.cssScrollbarGutterEnabled;
    case CSSPropertyID::CSSPropertyScrollbarWidth:
        return settings.cssScrollbarWidthEnabled;
    case CSSPropertyID::CSSPropertyTextBoxEdge:
        return settings.cssTextBoxTrimEnabled;
    case CSSPropertyID::CSSPropertyTextBoxTrim:
        return settings.cssTextBoxTrimEnabled;
    case CSSPropertyID::CSSPropertyTextGroupAlign:
        return settings.cssTextGroupAlignEnabled;
    case CSSPropertyID::CSSPropertyTextJustify:
        return settings.cssTextJustifyEnabled;
    case CSSPropertyID::CSSPropertyTimelineScope:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyTypes:
        return settings.crossDocumentViewTransitionsEnabled;
    case CSSPropertyID::CSSPropertyViewTimelineAxis:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyViewTimelineInset:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyViewTimelineName:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyViewTransitionClass:
        return settings.viewTransitionClassesEnabled;
    case CSSPropertyID::CSSPropertyViewTransitionName:
        return settings.viewTransitionsEnabled;
    case CSSPropertyID::CSSPropertyAppleColorFilter:
        return settings.colorFilterEnabled;
    case CSSPropertyID::CSSPropertyCornerBottomLeftShape:
        return settings.cssCornerShapeEnabled;
    case CSSPropertyID::CSSPropertyCornerBottomRightShape:
        return settings.cssCornerShapeEnabled;
    case CSSPropertyID::CSSPropertyCornerTopLeftShape:
        return settings.cssCornerShapeEnabled;
    case CSSPropertyID::CSSPropertyCornerTopRightShape:
        return settings.cssCornerShapeEnabled;
    case CSSPropertyID::CSSPropertyOverscrollBehaviorX:
        return settings.overscrollBehaviorEnabled;
    case CSSPropertyID::CSSPropertyOverscrollBehaviorY:
        return settings.overscrollBehaviorEnabled;
    case CSSPropertyID::CSSPropertyCornerEndEndShape:
        return settings.cssCornerShapeEnabled;
    case CSSPropertyID::CSSPropertyCornerEndStartShape:
        return settings.cssCornerShapeEnabled;
    case CSSPropertyID::CSSPropertyCornerStartEndShape:
        return settings.cssCornerShapeEnabled;
    case CSSPropertyID::CSSPropertyCornerStartStartShape:
        return settings.cssCornerShapeEnabled;
    case CSSPropertyID::CSSPropertyOverscrollBehaviorBlock:
        return settings.overscrollBehaviorEnabled;
    case CSSPropertyID::CSSPropertyOverscrollBehaviorInline:
        return settings.overscrollBehaviorEnabled;
    case CSSPropertyID::CSSPropertyAnimationRange:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyBlockStep:
        return settings.cssRhythmicSizingEnabled;
    case CSSPropertyID::CSSPropertyCornerShape:
        return settings.cssCornerShapeEnabled;
    case CSSPropertyID::CSSPropertyLineClamp:
        return settings.cssLineClampEnabled;
    case CSSPropertyID::CSSPropertyOverscrollBehavior:
        return settings.overscrollBehaviorEnabled;
    case CSSPropertyID::CSSPropertyPositionTry:
        return settings.cssAnchorPositioningEnabled;
    case CSSPropertyID::CSSPropertyScrollTimeline:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyTextBox:
        return settings.cssTextBoxTrimEnabled;
    case CSSPropertyID::CSSPropertyViewTimeline:
        return settings.scrollDrivenAnimationsEnabled;
    default:
        return true;
    }
}

static bool isExposedNotInvalidAndNotInternal(CSSPropertyID id, const Settings& settings)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyFontVariantEmoji:
        return settings.cssFontVariantEmojiEnabled();
    case CSSPropertyID::CSSPropertyTextAutospace:
        return settings.cssTextAutospaceEnabled();
    case CSSPropertyID::CSSPropertyTextSpacingTrim:
        return settings.cssTextSpacingTrimEnabled();
    case CSSPropertyID::CSSPropertyAccentColor:
        return settings.accentColorEnabled();
    case CSSPropertyID::CSSPropertyAnchorName:
        return settings.cssAnchorPositioningEnabled();
    case CSSPropertyID::CSSPropertyAnchorScope:
        return settings.cssAnchorPositioningEnabled();
    case CSSPropertyID::CSSPropertyAnimationRangeEnd:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyAnimationRangeStart:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyAnimationTimeline:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyBackdropFilter:
        return settings.cssUnprefixedBackdropFilterEnabled();
    case CSSPropertyID::CSSPropertyBlockEllipsis:
        return settings.cssLineClampEnabled();
    case CSSPropertyID::CSSPropertyBlockStepAlign:
        return settings.cssRhythmicSizingEnabled();
    case CSSPropertyID::CSSPropertyBlockStepInsert:
        return settings.cssRhythmicSizingEnabled();
    case CSSPropertyID::CSSPropertyBlockStepRound:
        return settings.cssRhythmicSizingEnabled();
    case CSSPropertyID::CSSPropertyBlockStepSize:
        return settings.cssRhythmicSizingEnabled();
    case CSSPropertyID::CSSPropertyContinue:
        return settings.cssLineClampEnabled();
    case CSSPropertyID::CSSPropertyD:
        return settings.cssDPropertyEnabled();
    case CSSPropertyID::CSSPropertyDynamicRangeLimit:
        return settings.supportHDRDisplayEnabled();
    case CSSPropertyID::CSSPropertyFieldSizing:
        return settings.cssFieldSizingEnabled();
    case CSSPropertyID::CSSPropertyInputSecurity:
        return settings.cssInputSecurityEnabled();
    case CSSPropertyID::CSSPropertyLineFitEdge:
        return settings.cssLineFitEdgeEnabled();
    case CSSPropertyID::CSSPropertyMaxLines:
        return settings.cssLineClampEnabled();
    case CSSPropertyID::CSSPropertyNavigation:
        return settings.crossDocumentViewTransitionsEnabled();
    case CSSPropertyID::CSSPropertyOverflowAnchor:
        return settings.cssScrollAnchoringEnabled();
    case CSSPropertyID::CSSPropertyPositionAnchor:
        return settings.cssAnchorPositioningEnabled();
    case CSSPropertyID::CSSPropertyPositionArea:
        return settings.cssAnchorPositioningEnabled();
    case CSSPropertyID::CSSPropertyPositionTryFallbacks:
        return settings.cssAnchorPositioningEnabled();
    case CSSPropertyID::CSSPropertyPositionTryOrder:
        return settings.cssAnchorPositioningEnabled();
    case CSSPropertyID::CSSPropertyPositionVisibility:
        return settings.cssAnchorPositioningPositionVisibilityEnabled();
    case CSSPropertyID::CSSPropertyRubyAlign:
        return settings.cssRubyAlignEnabled();
    case CSSPropertyID::CSSPropertyRubyOverhang:
        return settings.cssRubyOverhangEnabled();
    case CSSPropertyID::CSSPropertyScrollTimelineAxis:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyScrollTimelineName:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyScrollbarColor:
        return settings.cssScrollbarColorEnabled();
    case CSSPropertyID::CSSPropertyScrollbarGutter:
        return settings.cssScrollbarGutterEnabled();
    case CSSPropertyID::CSSPropertyScrollbarWidth:
        return settings.cssScrollbarWidthEnabled();
    case CSSPropertyID::CSSPropertyTextBoxEdge:
        return settings.cssTextBoxTrimEnabled();
    case CSSPropertyID::CSSPropertyTextBoxTrim:
        return settings.cssTextBoxTrimEnabled();
    case CSSPropertyID::CSSPropertyTextGroupAlign:
        return settings.cssTextGroupAlignEnabled();
    case CSSPropertyID::CSSPropertyTextJustify:
        return settings.cssTextJustifyEnabled();
    case CSSPropertyID::CSSPropertyTimelineScope:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyTypes:
        return settings.crossDocumentViewTransitionsEnabled();
    case CSSPropertyID::CSSPropertyViewTimelineAxis:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyViewTimelineInset:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyViewTimelineName:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyViewTransitionClass:
        return settings.viewTransitionClassesEnabled();
    case CSSPropertyID::CSSPropertyViewTransitionName:
        return settings.viewTransitionsEnabled();
    case CSSPropertyID::CSSPropertyAppleColorFilter:
        return settings.colorFilterEnabled();
    case CSSPropertyID::CSSPropertyCornerBottomLeftShape:
        return settings.cssCornerShapeEnabled();
    case CSSPropertyID::CSSPropertyCornerBottomRightShape:
        return settings.cssCornerShapeEnabled();
    case CSSPropertyID::CSSPropertyCornerTopLeftShape:
        return settings.cssCornerShapeEnabled();
    case CSSPropertyID::CSSPropertyCornerTopRightShape:
        return settings.cssCornerShapeEnabled();
    case CSSPropertyID::CSSPropertyOverscrollBehaviorX:
        return settings.overscrollBehaviorEnabled();
    case CSSPropertyID::CSSPropertyOverscrollBehaviorY:
        return settings.overscrollBehaviorEnabled();
    case CSSPropertyID::CSSPropertyCornerEndEndShape:
        return settings.cssCornerShapeEnabled();
    case CSSPropertyID::CSSPropertyCornerEndStartShape:
        return settings.cssCornerShapeEnabled();
    case CSSPropertyID::CSSPropertyCornerStartEndShape:
        return settings.cssCornerShapeEnabled();
    case CSSPropertyID::CSSPropertyCornerStartStartShape:
        return settings.cssCornerShapeEnabled();
    case CSSPropertyID::CSSPropertyOverscrollBehaviorBlock:
        return settings.overscrollBehaviorEnabled();
    case CSSPropertyID::CSSPropertyOverscrollBehaviorInline:
        return settings.overscrollBehaviorEnabled();
    case CSSPropertyID::CSSPropertyAnimationRange:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyBlockStep:
        return settings.cssRhythmicSizingEnabled();
    case CSSPropertyID::CSSPropertyCornerShape:
        return settings.cssCornerShapeEnabled();
    case CSSPropertyID::CSSPropertyLineClamp:
        return settings.cssLineClampEnabled();
    case CSSPropertyID::CSSPropertyOverscrollBehavior:
        return settings.overscrollBehaviorEnabled();
    case CSSPropertyID::CSSPropertyPositionTry:
        return settings.cssAnchorPositioningEnabled();
    case CSSPropertyID::CSSPropertyScrollTimeline:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyTextBox:
        return settings.cssTextBoxTrimEnabled();
    case CSSPropertyID::CSSPropertyViewTimeline:
        return settings.scrollDrivenAnimationsEnabled();
    default:
        return true;
    }
}

bool isExposed(CSSPropertyID id, const CSSPropertySettings* settings)
{
    if (id == CSSPropertyID::CSSPropertyInvalid || isInternal(id))
        return false;
    if (!settings)
        return true;
    return isExposedNotInvalidAndNotInternal(id, *settings);
}

bool isExposed(CSSPropertyID id, const CSSPropertySettings& settings)
{
    if (id == CSSPropertyID::CSSPropertyInvalid || isInternal(id))
        return false;
    return isExposedNotInvalidAndNotInternal(id, settings);
}

bool isExposed(CSSPropertyID id, const Settings* settings)
{
    if (id == CSSPropertyID::CSSPropertyInvalid || isInternal(id))
        return false;
    if (!settings)
        return true;
    return isExposedNotInvalidAndNotInternal(id, *settings);
}

bool isExposed(CSSPropertyID id, const Settings& settings)
{
    if (id == CSSPropertyID::CSSPropertyInvalid || isInternal(id))
        return false;
    return isExposedNotInvalidAndNotInternal(id, settings);
}

constexpr bool isInheritedPropertyTable[cssPropertyIDEnumValueCount] = {
    false, // CSSPropertyID::CSSPropertyInvalid
    true , // CSSPropertyID::CSSPropertyCustom
    true , // CSSPropertyID::CSSPropertyColorScheme
    true , // CSSPropertyID::CSSPropertyRubyPosition
    true , // CSSPropertyID::CSSPropertyWritingMode
    true , // CSSPropertyID::CSSPropertyDirection
    false, // CSSPropertyID::CSSPropertyDisplay
    true , // CSSPropertyID::CSSPropertyFontFamily
    true , // CSSPropertyID::CSSPropertyFontFeatureSettings
    true , // CSSPropertyID::CSSPropertyFontKerning
    true , // CSSPropertyID::CSSPropertyFontOpticalSizing
    true , // CSSPropertyID::CSSPropertyFontPalette
    true , // CSSPropertyID::CSSPropertyFontSize
    true , // CSSPropertyID::CSSPropertyFontSizeAdjust
    true , // CSSPropertyID::CSSPropertyFontStyle
    true , // CSSPropertyID::CSSPropertyFontSynthesisSmallCaps
    true , // CSSPropertyID::CSSPropertyFontSynthesisStyle
    true , // CSSPropertyID::CSSPropertyFontSynthesisWeight
    true , // CSSPropertyID::CSSPropertyFontVariantAlternates
    true , // CSSPropertyID::CSSPropertyFontVariantCaps
    true , // CSSPropertyID::CSSPropertyFontVariantEastAsian
    true , // CSSPropertyID::CSSPropertyFontVariantEmoji
    true , // CSSPropertyID::CSSPropertyFontVariantLigatures
    true , // CSSPropertyID::CSSPropertyFontVariantNumeric
    true , // CSSPropertyID::CSSPropertyFontVariantPosition
    true , // CSSPropertyID::CSSPropertyFontVariationSettings
    true , // CSSPropertyID::CSSPropertyFontWeight
    true , // CSSPropertyID::CSSPropertyFontWidth
    true , // CSSPropertyID::CSSPropertyTextOrientation
    true , // CSSPropertyID::CSSPropertyTextRendering
    false, // CSSPropertyID::CSSPropertyZoom
    true , // CSSPropertyID::CSSPropertyWebkitFontSmoothing
    true , // CSSPropertyID::CSSPropertyWebkitLocale
    true , // CSSPropertyID::CSSPropertyWebkitTextZoom
    true , // CSSPropertyID::CSSPropertyLetterSpacing
    true , // CSSPropertyID::CSSPropertyTextAutospace
    true , // CSSPropertyID::CSSPropertyTextSpacingTrim
    true , // CSSPropertyID::CSSPropertyAccentColor
    false, // CSSPropertyID::CSSPropertyAdditiveSymbols
    false, // CSSPropertyID::CSSPropertyAlignContent
    false, // CSSPropertyID::CSSPropertyAlignItems
    false, // CSSPropertyID::CSSPropertyAlignSelf
    false, // CSSPropertyID::CSSPropertyAlignmentBaseline
    false, // CSSPropertyID::CSSPropertyAnchorName
    false, // CSSPropertyID::CSSPropertyAnchorScope
    false, // CSSPropertyID::CSSPropertyAnimationComposition
    false, // CSSPropertyID::CSSPropertyAnimationDelay
    false, // CSSPropertyID::CSSPropertyAnimationDirection
    false, // CSSPropertyID::CSSPropertyAnimationDuration
    false, // CSSPropertyID::CSSPropertyAnimationFillMode
    false, // CSSPropertyID::CSSPropertyAnimationIterationCount
    false, // CSSPropertyID::CSSPropertyAnimationName
    false, // CSSPropertyID::CSSPropertyAnimationPlayState
    false, // CSSPropertyID::CSSPropertyAnimationRangeEnd
    false, // CSSPropertyID::CSSPropertyAnimationRangeStart
    false, // CSSPropertyID::CSSPropertyAnimationTimeline
    false, // CSSPropertyID::CSSPropertyAnimationTimingFunction
    false, // CSSPropertyID::CSSPropertyAppearance
    false, // CSSPropertyID::CSSPropertyAspectRatio
    false, // CSSPropertyID::CSSPropertyBackdropFilter
    false, // CSSPropertyID::CSSPropertyBackfaceVisibility
    false, // CSSPropertyID::CSSPropertyBackgroundAttachment
    false, // CSSPropertyID::CSSPropertyBackgroundBlendMode
    false, // CSSPropertyID::CSSPropertyBackgroundClip
    false, // CSSPropertyID::CSSPropertyBackgroundColor
    false, // CSSPropertyID::CSSPropertyBackgroundImage
    false, // CSSPropertyID::CSSPropertyBackgroundOrigin
    false, // CSSPropertyID::CSSPropertyBackgroundPositionX
    false, // CSSPropertyID::CSSPropertyBackgroundPositionY
    false, // CSSPropertyID::CSSPropertyBackgroundRepeat
    false, // CSSPropertyID::CSSPropertyBackgroundSize
    false, // CSSPropertyID::CSSPropertyBasePalette
    false, // CSSPropertyID::CSSPropertyBaselineShift
    true , // CSSPropertyID::CSSPropertyBlockEllipsis
    false, // CSSPropertyID::CSSPropertyBlockStepAlign
    false, // CSSPropertyID::CSSPropertyBlockStepInsert
    false, // CSSPropertyID::CSSPropertyBlockStepRound
    false, // CSSPropertyID::CSSPropertyBlockStepSize
    true , // CSSPropertyID::CSSPropertyBorderCollapse
    false, // CSSPropertyID::CSSPropertyBorderImageOutset
    false, // CSSPropertyID::CSSPropertyBorderImageRepeat
    false, // CSSPropertyID::CSSPropertyBorderImageSlice
    false, // CSSPropertyID::CSSPropertyBorderImageSource
    false, // CSSPropertyID::CSSPropertyBorderImageWidth
    false, // CSSPropertyID::CSSPropertyBoxShadow
    false, // CSSPropertyID::CSSPropertyBoxSizing
    false, // CSSPropertyID::CSSPropertyBreakAfter
    false, // CSSPropertyID::CSSPropertyBreakBefore
    false, // CSSPropertyID::CSSPropertyBreakInside
    false, // CSSPropertyID::CSSPropertyBufferedRendering
    true , // CSSPropertyID::CSSPropertyCaptionSide
    true , // CSSPropertyID::CSSPropertyCaretColor
    false, // CSSPropertyID::CSSPropertyClear
    false, // CSSPropertyID::CSSPropertyClip
    false, // CSSPropertyID::CSSPropertyClipPath
    true , // CSSPropertyID::CSSPropertyClipRule
    true , // CSSPropertyID::CSSPropertyColor
    true , // CSSPropertyID::CSSPropertyColorInterpolation
    true , // CSSPropertyID::CSSPropertyColorInterpolationFilters
    false, // CSSPropertyID::CSSPropertyColumnCount
    false, // CSSPropertyID::CSSPropertyColumnFill
    false, // CSSPropertyID::CSSPropertyColumnGap
    false, // CSSPropertyID::CSSPropertyColumnRuleColor
    false, // CSSPropertyID::CSSPropertyColumnRuleStyle
    false, // CSSPropertyID::CSSPropertyColumnRuleWidth
    false, // CSSPropertyID::CSSPropertyColumnSpan
    false, // CSSPropertyID::CSSPropertyColumnWidth
    false, // CSSPropertyID::CSSPropertyContain
    false, // CSSPropertyID::CSSPropertyContainerName
    false, // CSSPropertyID::CSSPropertyContainerType
    false, // CSSPropertyID::CSSPropertyContent
    false, // CSSPropertyID::CSSPropertyContentVisibility
    false, // CSSPropertyID::CSSPropertyContinue
    false, // CSSPropertyID::CSSPropertyCounterIncrement
    false, // CSSPropertyID::CSSPropertyCounterReset
    false, // CSSPropertyID::CSSPropertyCounterSet
    true , // CSSPropertyID::CSSPropertyCursor
    false, // CSSPropertyID::CSSPropertyCx
    false, // CSSPropertyID::CSSPropertyCy
    false, // CSSPropertyID::CSSPropertyD
    false, // CSSPropertyID::CSSPropertyDominantBaseline
    true , // CSSPropertyID::CSSPropertyDynamicRangeLimit
    true , // CSSPropertyID::CSSPropertyEmptyCells
    false, // CSSPropertyID::CSSPropertyFallback
    false, // CSSPropertyID::CSSPropertyFieldSizing
    true , // CSSPropertyID::CSSPropertyFill
    true , // CSSPropertyID::CSSPropertyFillOpacity
    true , // CSSPropertyID::CSSPropertyFillRule
    false, // CSSPropertyID::CSSPropertyFilter
    false, // CSSPropertyID::CSSPropertyFlexBasis
    false, // CSSPropertyID::CSSPropertyFlexDirection
    false, // CSSPropertyID::CSSPropertyFlexGrow
    false, // CSSPropertyID::CSSPropertyFlexShrink
    false, // CSSPropertyID::CSSPropertyFlexWrap
    false, // CSSPropertyID::CSSPropertyFloat
    false, // CSSPropertyID::CSSPropertyFloodColor
    false, // CSSPropertyID::CSSPropertyFloodOpacity
    false, // CSSPropertyID::CSSPropertyFontDisplay
    true , // CSSPropertyID::CSSPropertyGlyphOrientationHorizontal
    true , // CSSPropertyID::CSSPropertyGlyphOrientationVertical
    false, // CSSPropertyID::CSSPropertyGridAutoColumns
    false, // CSSPropertyID::CSSPropertyGridAutoFlow
    false, // CSSPropertyID::CSSPropertyGridAutoRows
    false, // CSSPropertyID::CSSPropertyGridColumnEnd
    false, // CSSPropertyID::CSSPropertyGridColumnStart
    false, // CSSPropertyID::CSSPropertyGridRowEnd
    false, // CSSPropertyID::CSSPropertyGridRowStart
    false, // CSSPropertyID::CSSPropertyGridTemplateAreas
    false, // CSSPropertyID::CSSPropertyGridTemplateColumns
    false, // CSSPropertyID::CSSPropertyGridTemplateRows
    true , // CSSPropertyID::CSSPropertyHangingPunctuation
    true , // CSSPropertyID::CSSPropertyHyphenateCharacter
    true , // CSSPropertyID::CSSPropertyHyphens
    true , // CSSPropertyID::CSSPropertyImageOrientation
    true , // CSSPropertyID::CSSPropertyImageRendering
    false, // CSSPropertyID::CSSPropertyInherits
    false, // CSSPropertyID::CSSPropertyInitialValue
    false, // CSSPropertyID::CSSPropertyInputSecurity
    false, // CSSPropertyID::CSSPropertyIsolation
    false, // CSSPropertyID::CSSPropertyJustifyContent
    false, // CSSPropertyID::CSSPropertyJustifyItems
    false, // CSSPropertyID::CSSPropertyJustifySelf
    false, // CSSPropertyID::CSSPropertyLightingColor
    true , // CSSPropertyID::CSSPropertyLineBreak
    true , // CSSPropertyID::CSSPropertyLineFitEdge
    true , // CSSPropertyID::CSSPropertyLineHeight
    true , // CSSPropertyID::CSSPropertyListStyleImage
    true , // CSSPropertyID::CSSPropertyListStylePosition
    true , // CSSPropertyID::CSSPropertyListStyleType
    false, // CSSPropertyID::CSSPropertyMarginTrim
    true , // CSSPropertyID::CSSPropertyMarkerEnd
    true , // CSSPropertyID::CSSPropertyMarkerMid
    true , // CSSPropertyID::CSSPropertyMarkerStart
    false, // CSSPropertyID::CSSPropertyMaskBorderOutset
    false, // CSSPropertyID::CSSPropertyMaskBorderRepeat
    false, // CSSPropertyID::CSSPropertyMaskBorderSlice
    false, // CSSPropertyID::CSSPropertyMaskBorderSource
    false, // CSSPropertyID::CSSPropertyMaskBorderWidth
    false, // CSSPropertyID::CSSPropertyMaskClip
    false, // CSSPropertyID::CSSPropertyMaskComposite
    false, // CSSPropertyID::CSSPropertyMaskImage
    false, // CSSPropertyID::CSSPropertyMaskMode
    false, // CSSPropertyID::CSSPropertyMaskOrigin
    false, // CSSPropertyID::CSSPropertyMaskRepeat
    false, // CSSPropertyID::CSSPropertyMaskSize
    false, // CSSPropertyID::CSSPropertyMaskType
    true , // CSSPropertyID::CSSPropertyMathStyle
    false, // CSSPropertyID::CSSPropertyMaxLines
    false, // CSSPropertyID::CSSPropertyMixBlendMode
    false, // CSSPropertyID::CSSPropertyNavigation
    false, // CSSPropertyID::CSSPropertyNegative
    false, // CSSPropertyID::CSSPropertyObjectFit
    false, // CSSPropertyID::CSSPropertyObjectPosition
    false, // CSSPropertyID::CSSPropertyOffsetAnchor
    false, // CSSPropertyID::CSSPropertyOffsetDistance
    false, // CSSPropertyID::CSSPropertyOffsetPath
    false, // CSSPropertyID::CSSPropertyOffsetPosition
    false, // CSSPropertyID::CSSPropertyOffsetRotate
    false, // CSSPropertyID::CSSPropertyOpacity
    false, // CSSPropertyID::CSSPropertyOrder
    true , // CSSPropertyID::CSSPropertyOrphans
    false, // CSSPropertyID::CSSPropertyOutlineColor
    false, // CSSPropertyID::CSSPropertyOutlineOffset
    false, // CSSPropertyID::CSSPropertyOutlineStyle
    false, // CSSPropertyID::CSSPropertyOutlineWidth
    false, // CSSPropertyID::CSSPropertyOverflowAnchor
    true , // CSSPropertyID::CSSPropertyOverflowWrap
    false, // CSSPropertyID::CSSPropertyOverrideColors
    false, // CSSPropertyID::CSSPropertyPad
    false, // CSSPropertyID::CSSPropertyPage
    true , // CSSPropertyID::CSSPropertyPaintOrder
    false, // CSSPropertyID::CSSPropertyPerspective
    false, // CSSPropertyID::CSSPropertyPerspectiveOriginX
    false, // CSSPropertyID::CSSPropertyPerspectiveOriginY
    true , // CSSPropertyID::CSSPropertyPointerEvents
    false, // CSSPropertyID::CSSPropertyPosition
    false, // CSSPropertyID::CSSPropertyPositionAnchor
    false, // CSSPropertyID::CSSPropertyPositionArea
    false, // CSSPropertyID::CSSPropertyPositionTryFallbacks
    false, // CSSPropertyID::CSSPropertyPositionTryOrder
    false, // CSSPropertyID::CSSPropertyPositionVisibility
    false, // CSSPropertyID::CSSPropertyPrefix
    true , // CSSPropertyID::CSSPropertyPrintColorAdjust
    true , // CSSPropertyID::CSSPropertyQuotes
    false, // CSSPropertyID::CSSPropertyR
    false, // CSSPropertyID::CSSPropertyRange
    false, // CSSPropertyID::CSSPropertyResize
    false, // CSSPropertyID::CSSPropertyRotate
    false, // CSSPropertyID::CSSPropertyRowGap
    true , // CSSPropertyID::CSSPropertyRubyAlign
    true , // CSSPropertyID::CSSPropertyRubyOverhang
    false, // CSSPropertyID::CSSPropertyRx
    false, // CSSPropertyID::CSSPropertyRy
    false, // CSSPropertyID::CSSPropertyScale
    false, // CSSPropertyID::CSSPropertyScrollBehavior
    false, // CSSPropertyID::CSSPropertyScrollSnapAlign
    false, // CSSPropertyID::CSSPropertyScrollSnapStop
    false, // CSSPropertyID::CSSPropertyScrollSnapType
    false, // CSSPropertyID::CSSPropertyScrollTimelineAxis
    false, // CSSPropertyID::CSSPropertyScrollTimelineName
    true , // CSSPropertyID::CSSPropertyScrollbarColor
    false, // CSSPropertyID::CSSPropertyScrollbarGutter
    false, // CSSPropertyID::CSSPropertyScrollbarWidth
    false, // CSSPropertyID::CSSPropertyShapeImageThreshold
    false, // CSSPropertyID::CSSPropertyShapeMargin
    false, // CSSPropertyID::CSSPropertyShapeOutside
    true , // CSSPropertyID::CSSPropertyShapeRendering
    false, // CSSPropertyID::CSSPropertySize
    false, // CSSPropertyID::CSSPropertySizeAdjust
    true , // CSSPropertyID::CSSPropertySpeakAs
    false, // CSSPropertyID::CSSPropertySrc
    false, // CSSPropertyID::CSSPropertyStopColor
    false, // CSSPropertyID::CSSPropertyStopOpacity
    true , // CSSPropertyID::CSSPropertyStroke
    true , // CSSPropertyID::CSSPropertyStrokeColor
    true , // CSSPropertyID::CSSPropertyStrokeDasharray
    true , // CSSPropertyID::CSSPropertyStrokeDashoffset
    true , // CSSPropertyID::CSSPropertyStrokeLinecap
    true , // CSSPropertyID::CSSPropertyStrokeLinejoin
    true , // CSSPropertyID::CSSPropertyStrokeMiterlimit
    true , // CSSPropertyID::CSSPropertyStrokeOpacity
    true , // CSSPropertyID::CSSPropertyStrokeWidth
    false, // CSSPropertyID::CSSPropertySuffix
    false, // CSSPropertyID::CSSPropertySymbols
    false, // CSSPropertyID::CSSPropertySyntax
    false, // CSSPropertyID::CSSPropertySystem
    true , // CSSPropertyID::CSSPropertyTabSize
    false, // CSSPropertyID::CSSPropertyTableLayout
    true , // CSSPropertyID::CSSPropertyTextAlign
    true , // CSSPropertyID::CSSPropertyTextAlignLast
    true , // CSSPropertyID::CSSPropertyTextAnchor
    true , // CSSPropertyID::CSSPropertyTextBoxEdge
    false, // CSSPropertyID::CSSPropertyTextBoxTrim
    true , // CSSPropertyID::CSSPropertyTextCombineUpright
    false, // CSSPropertyID::CSSPropertyTextDecorationColor
    false, // CSSPropertyID::CSSPropertyTextDecorationLine
    true , // CSSPropertyID::CSSPropertyTextDecorationSkipInk
    false, // CSSPropertyID::CSSPropertyTextDecorationStyle
    false, // CSSPropertyID::CSSPropertyTextDecorationThickness
    true , // CSSPropertyID::CSSPropertyTextEmphasisColor
    true , // CSSPropertyID::CSSPropertyTextEmphasisPosition
    true , // CSSPropertyID::CSSPropertyTextEmphasisStyle
    false, // CSSPropertyID::CSSPropertyTextGroupAlign
    true , // CSSPropertyID::CSSPropertyTextIndent
    true , // CSSPropertyID::CSSPropertyTextJustify
    false, // CSSPropertyID::CSSPropertyTextOverflow
    true , // CSSPropertyID::CSSPropertyTextShadow
    true , // CSSPropertyID::CSSPropertyTextTransform
    true , // CSSPropertyID::CSSPropertyTextUnderlineOffset
    true , // CSSPropertyID::CSSPropertyTextUnderlinePosition
    true , // CSSPropertyID::CSSPropertyTextWrapMode
    true , // CSSPropertyID::CSSPropertyTextWrapStyle
    false, // CSSPropertyID::CSSPropertyTimelineScope
    false, // CSSPropertyID::CSSPropertyTouchAction
    false, // CSSPropertyID::CSSPropertyTransform
    false, // CSSPropertyID::CSSPropertyTransformBox
    false, // CSSPropertyID::CSSPropertyTransformOriginX
    false, // CSSPropertyID::CSSPropertyTransformOriginY
    false, // CSSPropertyID::CSSPropertyTransformOriginZ
    false, // CSSPropertyID::CSSPropertyTransformStyle
    false, // CSSPropertyID::CSSPropertyTransitionBehavior
    false, // CSSPropertyID::CSSPropertyTransitionDelay
    false, // CSSPropertyID::CSSPropertyTransitionDuration
    false, // CSSPropertyID::CSSPropertyTransitionProperty
    false, // CSSPropertyID::CSSPropertyTransitionTimingFunction
    false, // CSSPropertyID::CSSPropertyTranslate
    false, // CSSPropertyID::CSSPropertyTypes
    false, // CSSPropertyID::CSSPropertyUnicodeBidi
    false, // CSSPropertyID::CSSPropertyUnicodeRange
    false, // CSSPropertyID::CSSPropertyVectorEffect
    false, // CSSPropertyID::CSSPropertyVerticalAlign
    false, // CSSPropertyID::CSSPropertyViewTimelineAxis
    false, // CSSPropertyID::CSSPropertyViewTimelineInset
    false, // CSSPropertyID::CSSPropertyViewTimelineName
    false, // CSSPropertyID::CSSPropertyViewTransitionClass
    false, // CSSPropertyID::CSSPropertyViewTransitionName
    true , // CSSPropertyID::CSSPropertyVisibility
    true , // CSSPropertyID::CSSPropertyWhiteSpaceCollapse
    true , // CSSPropertyID::CSSPropertyWidows
    false, // CSSPropertyID::CSSPropertyWillChange
    true , // CSSPropertyID::CSSPropertyWordBreak
    false, // CSSPropertyID::CSSPropertyX
    false, // CSSPropertyID::CSSPropertyY
    false, // CSSPropertyID::CSSPropertyZIndex
    true , // CSSPropertyID::CSSPropertyAppleColorFilter
    false, // CSSPropertyID::CSSPropertyWebkitBackdropFilter
    false, // CSSPropertyID::CSSPropertyWebkitBackgroundClip
    false, // CSSPropertyID::CSSPropertyWebkitBackgroundOrigin
    true , // CSSPropertyID::CSSPropertyWebkitBorderHorizontalSpacing
    true , // CSSPropertyID::CSSPropertyWebkitBorderVerticalSpacing
    false, // CSSPropertyID::CSSPropertyWebkitBoxAlign
    false, // CSSPropertyID::CSSPropertyWebkitBoxDecorationBreak
    true , // CSSPropertyID::CSSPropertyWebkitBoxDirection
    false, // CSSPropertyID::CSSPropertyWebkitBoxFlex
    false, // CSSPropertyID::CSSPropertyWebkitBoxFlexGroup
    false, // CSSPropertyID::CSSPropertyWebkitBoxLines
    false, // CSSPropertyID::CSSPropertyWebkitBoxOrdinalGroup
    false, // CSSPropertyID::CSSPropertyWebkitBoxOrient
    false, // CSSPropertyID::CSSPropertyWebkitBoxPack
    false, // CSSPropertyID::CSSPropertyWebkitBoxReflect
    false, // CSSPropertyID::CSSPropertyWebkitBoxShadow
    false, // CSSPropertyID::CSSPropertyWebkitColumnAxis
    false, // CSSPropertyID::CSSPropertyWebkitColumnProgression
    true , // CSSPropertyID::CSSPropertyWebkitCursorVisibility
    false, // CSSPropertyID::CSSPropertyWebkitFontSizeDelta
    true , // CSSPropertyID::CSSPropertyWebkitHyphenateLimitAfter
    true , // CSSPropertyID::CSSPropertyWebkitHyphenateLimitBefore
    true , // CSSPropertyID::CSSPropertyWebkitHyphenateLimitLines
    false, // CSSPropertyID::CSSPropertyWebkitInitialLetter
    true , // CSSPropertyID::CSSPropertyWebkitLineAlign
    true , // CSSPropertyID::CSSPropertyWebkitLineBoxContain
    false, // CSSPropertyID::CSSPropertyWebkitLineClamp
    true , // CSSPropertyID::CSSPropertyWebkitLineGrid
    true , // CSSPropertyID::CSSPropertyWebkitLineSnap
    false, // CSSPropertyID::CSSPropertyWebkitMarqueeDirection
    false, // CSSPropertyID::CSSPropertyWebkitMarqueeIncrement
    false, // CSSPropertyID::CSSPropertyWebkitMarqueeRepetition
    false, // CSSPropertyID::CSSPropertyWebkitMarqueeSpeed
    false, // CSSPropertyID::CSSPropertyWebkitMarqueeStyle
    false, // CSSPropertyID::CSSPropertyWebkitMaskClip
    false, // CSSPropertyID::CSSPropertyWebkitMaskComposite
    false, // CSSPropertyID::CSSPropertyWebkitMaskPositionX
    false, // CSSPropertyID::CSSPropertyWebkitMaskPositionY
    false, // CSSPropertyID::CSSPropertyWebkitMaskSourceType
    true , // CSSPropertyID::CSSPropertyWebkitNbspMode
    true , // CSSPropertyID::CSSPropertyWebkitRtlOrdering
    true , // CSSPropertyID::CSSPropertyWebkitRubyPosition
    true , // CSSPropertyID::CSSPropertyWebkitTextCombine
    true , // CSSPropertyID::CSSPropertyWebkitTextDecorationsInEffect
    true , // CSSPropertyID::CSSPropertyWebkitTextFillColor
    true , // CSSPropertyID::CSSPropertyWebkitTextSecurity
    true , // CSSPropertyID::CSSPropertyWebkitTextStrokeColor
    true , // CSSPropertyID::CSSPropertyWebkitTextStrokeWidth
    false, // CSSPropertyID::CSSPropertyWebkitUserDrag
    true , // CSSPropertyID::CSSPropertyWebkitUserModify
    true , // CSSPropertyID::CSSPropertyWebkitUserSelect
    true , // CSSPropertyID::CSSPropertyWordSpacing
    false, // CSSPropertyID::CSSPropertyBorderBottomColor
    false, // CSSPropertyID::CSSPropertyBorderBottomLeftRadius
    false, // CSSPropertyID::CSSPropertyBorderBottomRightRadius
    false, // CSSPropertyID::CSSPropertyBorderBottomStyle
    false, // CSSPropertyID::CSSPropertyBorderBottomWidth
    false, // CSSPropertyID::CSSPropertyBorderLeftColor
    false, // CSSPropertyID::CSSPropertyBorderLeftStyle
    false, // CSSPropertyID::CSSPropertyBorderLeftWidth
    false, // CSSPropertyID::CSSPropertyBorderRightColor
    false, // CSSPropertyID::CSSPropertyBorderRightStyle
    false, // CSSPropertyID::CSSPropertyBorderRightWidth
    false, // CSSPropertyID::CSSPropertyBorderTopColor
    false, // CSSPropertyID::CSSPropertyBorderTopLeftRadius
    false, // CSSPropertyID::CSSPropertyBorderTopRightRadius
    false, // CSSPropertyID::CSSPropertyBorderTopStyle
    false, // CSSPropertyID::CSSPropertyBorderTopWidth
    false, // CSSPropertyID::CSSPropertyBottom
    false, // CSSPropertyID::CSSPropertyContainIntrinsicHeight
    false, // CSSPropertyID::CSSPropertyContainIntrinsicWidth
    false, // CSSPropertyID::CSSPropertyCornerBottomLeftShape
    false, // CSSPropertyID::CSSPropertyCornerBottomRightShape
    false, // CSSPropertyID::CSSPropertyCornerTopLeftShape
    false, // CSSPropertyID::CSSPropertyCornerTopRightShape
    false, // CSSPropertyID::CSSPropertyHeight
    false, // CSSPropertyID::CSSPropertyLeft
    false, // CSSPropertyID::CSSPropertyMarginBottom
    false, // CSSPropertyID::CSSPropertyMarginLeft
    false, // CSSPropertyID::CSSPropertyMarginRight
    false, // CSSPropertyID::CSSPropertyMarginTop
    false, // CSSPropertyID::CSSPropertyMaxHeight
    false, // CSSPropertyID::CSSPropertyMaxWidth
    false, // CSSPropertyID::CSSPropertyMinHeight
    false, // CSSPropertyID::CSSPropertyMinWidth
    false, // CSSPropertyID::CSSPropertyOverflowX
    false, // CSSPropertyID::CSSPropertyOverflowY
    false, // CSSPropertyID::CSSPropertyOverscrollBehaviorX
    false, // CSSPropertyID::CSSPropertyOverscrollBehaviorY
    false, // CSSPropertyID::CSSPropertyPaddingBottom
    false, // CSSPropertyID::CSSPropertyPaddingLeft
    false, // CSSPropertyID::CSSPropertyPaddingRight
    false, // CSSPropertyID::CSSPropertyPaddingTop
    false, // CSSPropertyID::CSSPropertyRight
    false, // CSSPropertyID::CSSPropertyScrollMarginBottom
    false, // CSSPropertyID::CSSPropertyScrollMarginLeft
    false, // CSSPropertyID::CSSPropertyScrollMarginRight
    false, // CSSPropertyID::CSSPropertyScrollMarginTop
    false, // CSSPropertyID::CSSPropertyScrollPaddingBottom
    false, // CSSPropertyID::CSSPropertyScrollPaddingLeft
    false, // CSSPropertyID::CSSPropertyScrollPaddingRight
    false, // CSSPropertyID::CSSPropertyScrollPaddingTop
    false, // CSSPropertyID::CSSPropertyTop
    false, // CSSPropertyID::CSSPropertyWidth
    false, // CSSPropertyID::CSSPropertyBlockSize
    false, // CSSPropertyID::CSSPropertyBorderBlockEndColor
    false, // CSSPropertyID::CSSPropertyBorderBlockEndStyle
    false, // CSSPropertyID::CSSPropertyBorderBlockEndWidth
    false, // CSSPropertyID::CSSPropertyBorderBlockStartColor
    false, // CSSPropertyID::CSSPropertyBorderBlockStartStyle
    false, // CSSPropertyID::CSSPropertyBorderBlockStartWidth
    false, // CSSPropertyID::CSSPropertyBorderEndEndRadius
    false, // CSSPropertyID::CSSPropertyBorderEndStartRadius
    false, // CSSPropertyID::CSSPropertyBorderInlineEndColor
    false, // CSSPropertyID::CSSPropertyBorderInlineEndStyle
    false, // CSSPropertyID::CSSPropertyBorderInlineEndWidth
    false, // CSSPropertyID::CSSPropertyBorderInlineStartColor
    false, // CSSPropertyID::CSSPropertyBorderInlineStartStyle
    false, // CSSPropertyID::CSSPropertyBorderInlineStartWidth
    false, // CSSPropertyID::CSSPropertyBorderStartEndRadius
    false, // CSSPropertyID::CSSPropertyBorderStartStartRadius
    false, // CSSPropertyID::CSSPropertyContainIntrinsicBlockSize
    false, // CSSPropertyID::CSSPropertyContainIntrinsicInlineSize
    false, // CSSPropertyID::CSSPropertyCornerEndEndShape
    false, // CSSPropertyID::CSSPropertyCornerEndStartShape
    false, // CSSPropertyID::CSSPropertyCornerStartEndShape
    false, // CSSPropertyID::CSSPropertyCornerStartStartShape
    false, // CSSPropertyID::CSSPropertyInlineSize
    false, // CSSPropertyID::CSSPropertyInsetBlockEnd
    false, // CSSPropertyID::CSSPropertyInsetBlockStart
    false, // CSSPropertyID::CSSPropertyInsetInlineEnd
    false, // CSSPropertyID::CSSPropertyInsetInlineStart
    false, // CSSPropertyID::CSSPropertyMarginBlockEnd
    false, // CSSPropertyID::CSSPropertyMarginBlockStart
    false, // CSSPropertyID::CSSPropertyMarginInlineEnd
    false, // CSSPropertyID::CSSPropertyMarginInlineStart
    false, // CSSPropertyID::CSSPropertyMaxBlockSize
    false, // CSSPropertyID::CSSPropertyMaxInlineSize
    false, // CSSPropertyID::CSSPropertyMinBlockSize
    false, // CSSPropertyID::CSSPropertyMinInlineSize
    false, // CSSPropertyID::CSSPropertyOverflowBlock
    false, // CSSPropertyID::CSSPropertyOverflowInline
    false, // CSSPropertyID::CSSPropertyOverscrollBehaviorBlock
    false, // CSSPropertyID::CSSPropertyOverscrollBehaviorInline
    false, // CSSPropertyID::CSSPropertyPaddingBlockEnd
    false, // CSSPropertyID::CSSPropertyPaddingBlockStart
    false, // CSSPropertyID::CSSPropertyPaddingInlineEnd
    false, // CSSPropertyID::CSSPropertyPaddingInlineStart
    false, // CSSPropertyID::CSSPropertyScrollMarginBlockEnd
    false, // CSSPropertyID::CSSPropertyScrollMarginBlockStart
    false, // CSSPropertyID::CSSPropertyScrollMarginInlineEnd
    false, // CSSPropertyID::CSSPropertyScrollMarginInlineStart
    false, // CSSPropertyID::CSSPropertyScrollPaddingBlockEnd
    false, // CSSPropertyID::CSSPropertyScrollPaddingBlockStart
    false, // CSSPropertyID::CSSPropertyScrollPaddingInlineEnd
    false, // CSSPropertyID::CSSPropertyScrollPaddingInlineStart
    false, // CSSPropertyID::CSSPropertyAll
    false, // CSSPropertyID::CSSPropertyAnimation
    false, // CSSPropertyID::CSSPropertyAnimationRange
    false, // CSSPropertyID::CSSPropertyBackground
    false, // CSSPropertyID::CSSPropertyBackgroundPosition
    false, // CSSPropertyID::CSSPropertyBlockStep
    false, // CSSPropertyID::CSSPropertyBorder
    false, // CSSPropertyID::CSSPropertyBorderBlock
    false, // CSSPropertyID::CSSPropertyBorderBlockColor
    false, // CSSPropertyID::CSSPropertyBorderBlockEnd
    false, // CSSPropertyID::CSSPropertyBorderBlockStart
    false, // CSSPropertyID::CSSPropertyBorderBlockStyle
    false, // CSSPropertyID::CSSPropertyBorderBlockWidth
    false, // CSSPropertyID::CSSPropertyBorderBottom
    false, // CSSPropertyID::CSSPropertyBorderColor
    false, // CSSPropertyID::CSSPropertyBorderImage
    false, // CSSPropertyID::CSSPropertyBorderInline
    false, // CSSPropertyID::CSSPropertyBorderInlineColor
    false, // CSSPropertyID::CSSPropertyBorderInlineEnd
    false, // CSSPropertyID::CSSPropertyBorderInlineStart
    false, // CSSPropertyID::CSSPropertyBorderInlineStyle
    false, // CSSPropertyID::CSSPropertyBorderInlineWidth
    false, // CSSPropertyID::CSSPropertyBorderLeft
    false, // CSSPropertyID::CSSPropertyBorderRadius
    false, // CSSPropertyID::CSSPropertyBorderRight
    true , // CSSPropertyID::CSSPropertyBorderSpacing
    false, // CSSPropertyID::CSSPropertyBorderStyle
    false, // CSSPropertyID::CSSPropertyBorderTop
    false, // CSSPropertyID::CSSPropertyBorderWidth
    false, // CSSPropertyID::CSSPropertyColumnRule
    false, // CSSPropertyID::CSSPropertyColumns
    false, // CSSPropertyID::CSSPropertyContainIntrinsicSize
    false, // CSSPropertyID::CSSPropertyContainer
    false, // CSSPropertyID::CSSPropertyCornerShape
    false, // CSSPropertyID::CSSPropertyFlex
    false, // CSSPropertyID::CSSPropertyFlexFlow
    true , // CSSPropertyID::CSSPropertyFont
    true , // CSSPropertyID::CSSPropertyFontSynthesis
    true , // CSSPropertyID::CSSPropertyFontVariant
    false, // CSSPropertyID::CSSPropertyGap
    false, // CSSPropertyID::CSSPropertyGrid
    false, // CSSPropertyID::CSSPropertyGridArea
    false, // CSSPropertyID::CSSPropertyGridColumn
    false, // CSSPropertyID::CSSPropertyGridRow
    false, // CSSPropertyID::CSSPropertyGridTemplate
    false, // CSSPropertyID::CSSPropertyInset
    false, // CSSPropertyID::CSSPropertyInsetBlock
    false, // CSSPropertyID::CSSPropertyInsetInline
    false, // CSSPropertyID::CSSPropertyLineClamp
    true , // CSSPropertyID::CSSPropertyListStyle
    false, // CSSPropertyID::CSSPropertyMargin
    false, // CSSPropertyID::CSSPropertyMarginBlock
    false, // CSSPropertyID::CSSPropertyMarginInline
    true , // CSSPropertyID::CSSPropertyMarker
    false, // CSSPropertyID::CSSPropertyMask
    false, // CSSPropertyID::CSSPropertyMaskBorder
    false, // CSSPropertyID::CSSPropertyMaskPosition
    false, // CSSPropertyID::CSSPropertyOffset
    false, // CSSPropertyID::CSSPropertyOutline
    false, // CSSPropertyID::CSSPropertyOverflow
    false, // CSSPropertyID::CSSPropertyOverscrollBehavior
    false, // CSSPropertyID::CSSPropertyPadding
    false, // CSSPropertyID::CSSPropertyPaddingBlock
    false, // CSSPropertyID::CSSPropertyPaddingInline
    false, // CSSPropertyID::CSSPropertyPageBreakAfter
    false, // CSSPropertyID::CSSPropertyPageBreakBefore
    false, // CSSPropertyID::CSSPropertyPageBreakInside
    false, // CSSPropertyID::CSSPropertyPerspectiveOrigin
    false, // CSSPropertyID::CSSPropertyPlaceContent
    false, // CSSPropertyID::CSSPropertyPlaceItems
    false, // CSSPropertyID::CSSPropertyPlaceSelf
    false, // CSSPropertyID::CSSPropertyPositionTry
    false, // CSSPropertyID::CSSPropertyScrollMargin
    false, // CSSPropertyID::CSSPropertyScrollMarginBlock
    false, // CSSPropertyID::CSSPropertyScrollMarginInline
    false, // CSSPropertyID::CSSPropertyScrollPadding
    false, // CSSPropertyID::CSSPropertyScrollPaddingBlock
    false, // CSSPropertyID::CSSPropertyScrollPaddingInline
    false, // CSSPropertyID::CSSPropertyScrollTimeline
    false, // CSSPropertyID::CSSPropertyTextBox
    false, // CSSPropertyID::CSSPropertyTextDecoration
    true , // CSSPropertyID::CSSPropertyTextDecorationSkip
    true , // CSSPropertyID::CSSPropertyTextEmphasis
    true , // CSSPropertyID::CSSPropertyTextWrap
    false, // CSSPropertyID::CSSPropertyTransformOrigin
    false, // CSSPropertyID::CSSPropertyTransition
    false, // CSSPropertyID::CSSPropertyViewTimeline
    true , // CSSPropertyID::CSSPropertyWhiteSpace
    false, // CSSPropertyID::CSSPropertyWebkitBackgroundSize
    false, // CSSPropertyID::CSSPropertyWebkitBorderImage
    false, // CSSPropertyID::CSSPropertyWebkitBorderRadius
    false, // CSSPropertyID::CSSPropertyWebkitColumnBreakAfter
    false, // CSSPropertyID::CSSPropertyWebkitColumnBreakBefore
    false, // CSSPropertyID::CSSPropertyWebkitColumnBreakInside
    false, // CSSPropertyID::CSSPropertyWebkitMask
    false, // CSSPropertyID::CSSPropertyWebkitMaskBoxImage
    false, // CSSPropertyID::CSSPropertyWebkitMaskPosition
    false, // CSSPropertyID::CSSPropertyWebkitPerspective
    false, // CSSPropertyID::CSSPropertyWebkitTextDecoration
    true , // CSSPropertyID::CSSPropertyWebkitTextOrientation
    true , // CSSPropertyID::CSSPropertyWebkitTextStroke
};

bool CSSProperty::isInheritedProperty(CSSPropertyID id)
{
    ASSERT(id < cssPropertyIDEnumValueCount);
    ASSERT(id != CSSPropertyID::CSSPropertyInvalid);
    return isInheritedPropertyTable[id];
}

CSSPropertyID cascadeAliasProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyWebkitBackdropFilter:
        return CSSPropertyID::CSSPropertyBackdropFilter;
    case CSSPropertyID::CSSPropertyWebkitBackgroundClip:
        return CSSPropertyID::CSSPropertyBackgroundClip;
    case CSSPropertyID::CSSPropertyWebkitBackgroundOrigin:
        return CSSPropertyID::CSSPropertyBackgroundOrigin;
    case CSSPropertyID::CSSPropertyWebkitBoxShadow:
        return CSSPropertyID::CSSPropertyBoxShadow;
    case CSSPropertyID::CSSPropertyWebkitMaskClip:
        return CSSPropertyID::CSSPropertyMaskClip;
    case CSSPropertyID::CSSPropertyWebkitMaskComposite:
        return CSSPropertyID::CSSPropertyMaskComposite;
    case CSSPropertyID::CSSPropertyWebkitMaskSourceType:
        return CSSPropertyID::CSSPropertyMaskMode;
    case CSSPropertyID::CSSPropertyWebkitRubyPosition:
        return CSSPropertyID::CSSPropertyRubyPosition;
    case CSSPropertyID::CSSPropertyWebkitTextCombine:
        return CSSPropertyID::CSSPropertyTextCombineUpright;
    default:
        return id;
    }
}

Vector<String> CSSProperty::aliasesForProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyColorScheme:
        return { "supported-color-schemes"_s };
    case CSSPropertyID::CSSPropertyWritingMode:
        return { "-webkit-writing-mode"_s, "-epub-writing-mode"_s };
    case CSSPropertyID::CSSPropertyFontKerning:
        return { "-webkit-font-kerning"_s };
    case CSSPropertyID::CSSPropertyFontWidth:
        return { "font-stretch"_s };
    case CSSPropertyID::CSSPropertyAlignContent:
        return { "-webkit-align-content"_s };
    case CSSPropertyID::CSSPropertyAlignItems:
        return { "-webkit-align-items"_s };
    case CSSPropertyID::CSSPropertyAlignSelf:
        return { "-webkit-align-self"_s };
    case CSSPropertyID::CSSPropertyAnimationDelay:
        return { "-webkit-animation-delay"_s };
    case CSSPropertyID::CSSPropertyAnimationDirection:
        return { "-webkit-animation-direction"_s };
    case CSSPropertyID::CSSPropertyAnimationDuration:
        return { "-webkit-animation-duration"_s };
    case CSSPropertyID::CSSPropertyAnimationFillMode:
        return { "-webkit-animation-fill-mode"_s };
    case CSSPropertyID::CSSPropertyAnimationIterationCount:
        return { "-webkit-animation-iteration-count"_s };
    case CSSPropertyID::CSSPropertyAnimationName:
        return { "-webkit-animation-name"_s };
    case CSSPropertyID::CSSPropertyAnimationPlayState:
        return { "-webkit-animation-play-state"_s };
    case CSSPropertyID::CSSPropertyAnimationTimingFunction:
        return { "-webkit-animation-timing-function"_s };
    case CSSPropertyID::CSSPropertyAppearance:
        return { "-webkit-appearance"_s };
    case CSSPropertyID::CSSPropertyBackfaceVisibility:
        return { "-webkit-backface-visibility"_s };
    case CSSPropertyID::CSSPropertyBoxSizing:
        return { "-webkit-box-sizing"_s };
    case CSSPropertyID::CSSPropertyCaptionSide:
        return { "-epub-caption-side"_s };
    case CSSPropertyID::CSSPropertyClipPath:
        return { "-webkit-clip-path"_s };
    case CSSPropertyID::CSSPropertyColumnCount:
        return { "-webkit-column-count"_s };
    case CSSPropertyID::CSSPropertyColumnFill:
        return { "-webkit-column-fill"_s };
    case CSSPropertyID::CSSPropertyColumnGap:
        return { "grid-column-gap"_s, "-webkit-column-gap"_s };
    case CSSPropertyID::CSSPropertyColumnRuleColor:
        return { "-webkit-column-rule-color"_s };
    case CSSPropertyID::CSSPropertyColumnRuleStyle:
        return { "-webkit-column-rule-style"_s };
    case CSSPropertyID::CSSPropertyColumnRuleWidth:
        return { "-webkit-column-rule-width"_s };
    case CSSPropertyID::CSSPropertyColumnSpan:
        return { "-webkit-column-span"_s };
    case CSSPropertyID::CSSPropertyColumnWidth:
        return { "-webkit-column-width"_s };
    case CSSPropertyID::CSSPropertyFilter:
        return { "-webkit-filter"_s };
    case CSSPropertyID::CSSPropertyFlexBasis:
        return { "-webkit-flex-basis"_s };
    case CSSPropertyID::CSSPropertyFlexDirection:
        return { "-webkit-flex-direction"_s };
    case CSSPropertyID::CSSPropertyFlexGrow:
        return { "-webkit-flex-grow"_s };
    case CSSPropertyID::CSSPropertyFlexShrink:
        return { "-webkit-flex-shrink"_s };
    case CSSPropertyID::CSSPropertyFlexWrap:
        return { "-webkit-flex-wrap"_s };
    case CSSPropertyID::CSSPropertyHyphenateCharacter:
        return { "-webkit-hyphenate-character"_s };
    case CSSPropertyID::CSSPropertyHyphens:
        return { "-epub-hyphens"_s, "-webkit-hyphens"_s };
    case CSSPropertyID::CSSPropertyJustifyContent:
        return { "-webkit-justify-content"_s };
    case CSSPropertyID::CSSPropertyJustifyItems:
        return { "-webkit-justify-items"_s };
    case CSSPropertyID::CSSPropertyLineBreak:
        return { "-webkit-line-break"_s };
    case CSSPropertyID::CSSPropertyMaskBorderOutset:
        return { "-webkit-mask-box-image-outset"_s };
    case CSSPropertyID::CSSPropertyMaskBorderRepeat:
        return { "-webkit-mask-box-image-repeat"_s };
    case CSSPropertyID::CSSPropertyMaskBorderSlice:
        return { "-webkit-mask-box-image-slice"_s };
    case CSSPropertyID::CSSPropertyMaskBorderSource:
        return { "-webkit-mask-box-image-source"_s };
    case CSSPropertyID::CSSPropertyMaskBorderWidth:
        return { "-webkit-mask-box-image-width"_s };
    case CSSPropertyID::CSSPropertyMaskImage:
        return { "-webkit-mask-image"_s };
    case CSSPropertyID::CSSPropertyMaskOrigin:
        return { "-webkit-mask-origin"_s };
    case CSSPropertyID::CSSPropertyMaskRepeat:
        return { "-webkit-mask-repeat"_s };
    case CSSPropertyID::CSSPropertyMaskSize:
        return { "-webkit-mask-size"_s };
    case CSSPropertyID::CSSPropertyOpacity:
        return { "-webkit-opacity"_s };
    case CSSPropertyID::CSSPropertyOrder:
        return { "-webkit-order"_s };
    case CSSPropertyID::CSSPropertyOverflowWrap:
        return { "word-wrap"_s };
    case CSSPropertyID::CSSPropertyPerspectiveOriginX:
        return { "-webkit-perspective-origin-x"_s };
    case CSSPropertyID::CSSPropertyPerspectiveOriginY:
        return { "-webkit-perspective-origin-y"_s };
    case CSSPropertyID::CSSPropertyPrintColorAdjust:
        return { "-webkit-print-color-adjust"_s, "color-adjust"_s };
    case CSSPropertyID::CSSPropertyRowGap:
        return { "grid-row-gap"_s };
    case CSSPropertyID::CSSPropertyShapeImageThreshold:
        return { "-webkit-shape-image-threshold"_s };
    case CSSPropertyID::CSSPropertyShapeMargin:
        return { "-webkit-shape-margin"_s };
    case CSSPropertyID::CSSPropertyShapeOutside:
        return { "-webkit-shape-outside"_s };
    case CSSPropertyID::CSSPropertyTextDecorationColor:
        return { "-webkit-text-decoration-color"_s };
    case CSSPropertyID::CSSPropertyTextDecorationLine:
        return { "-webkit-text-decoration-line"_s };
    case CSSPropertyID::CSSPropertyTextDecorationStyle:
        return { "-webkit-text-decoration-style"_s };
    case CSSPropertyID::CSSPropertyTextEmphasisColor:
        return { "-epub-text-emphasis-color"_s, "-webkit-text-emphasis-color"_s };
    case CSSPropertyID::CSSPropertyTextEmphasisPosition:
        return { "-webkit-text-emphasis-position"_s };
    case CSSPropertyID::CSSPropertyTextEmphasisStyle:
        return { "-epub-text-emphasis-style"_s, "-webkit-text-emphasis-style"_s };
    case CSSPropertyID::CSSPropertyTextTransform:
        return { "-epub-text-transform"_s };
    case CSSPropertyID::CSSPropertyTextUnderlinePosition:
        return { "-webkit-text-underline-position"_s };
    case CSSPropertyID::CSSPropertyTransform:
        return { "-webkit-transform"_s };
    case CSSPropertyID::CSSPropertyTransformOriginX:
        return { "-webkit-transform-origin-x"_s };
    case CSSPropertyID::CSSPropertyTransformOriginY:
        return { "-webkit-transform-origin-y"_s };
    case CSSPropertyID::CSSPropertyTransformOriginZ:
        return { "-webkit-transform-origin-z"_s };
    case CSSPropertyID::CSSPropertyTransformStyle:
        return { "-webkit-transform-style"_s };
    case CSSPropertyID::CSSPropertyTransitionDelay:
        return { "-webkit-transition-delay"_s };
    case CSSPropertyID::CSSPropertyTransitionDuration:
        return { "-webkit-transition-duration"_s };
    case CSSPropertyID::CSSPropertyTransitionProperty:
        return { "-webkit-transition-property"_s };
    case CSSPropertyID::CSSPropertyTransitionTimingFunction:
        return { "-webkit-transition-timing-function"_s };
    case CSSPropertyID::CSSPropertyWordBreak:
        return { "-epub-word-break"_s };
    case CSSPropertyID::CSSPropertyWebkitTextCombine:
        return { "-epub-text-combine"_s };
    case CSSPropertyID::CSSPropertyBorderBottomLeftRadius:
        return { "-webkit-border-bottom-left-radius"_s };
    case CSSPropertyID::CSSPropertyBorderBottomRightRadius:
        return { "-webkit-border-bottom-right-radius"_s };
    case CSSPropertyID::CSSPropertyBorderTopLeftRadius:
        return { "-webkit-border-top-left-radius"_s };
    case CSSPropertyID::CSSPropertyBorderTopRightRadius:
        return { "-webkit-border-top-right-radius"_s };
    case CSSPropertyID::CSSPropertyScrollMarginBottom:
        return { "scroll-snap-margin-bottom"_s };
    case CSSPropertyID::CSSPropertyScrollMarginLeft:
        return { "scroll-snap-margin-left"_s };
    case CSSPropertyID::CSSPropertyScrollMarginRight:
        return { "scroll-snap-margin-right"_s };
    case CSSPropertyID::CSSPropertyScrollMarginTop:
        return { "scroll-snap-margin-top"_s };
    case CSSPropertyID::CSSPropertyBlockSize:
        return { "-webkit-logical-height"_s };
    case CSSPropertyID::CSSPropertyBorderBlockEndColor:
        return { "-webkit-border-after-color"_s };
    case CSSPropertyID::CSSPropertyBorderBlockEndStyle:
        return { "-webkit-border-after-style"_s };
    case CSSPropertyID::CSSPropertyBorderBlockEndWidth:
        return { "-webkit-border-after-width"_s };
    case CSSPropertyID::CSSPropertyBorderBlockStartColor:
        return { "-webkit-border-before-color"_s };
    case CSSPropertyID::CSSPropertyBorderBlockStartStyle:
        return { "-webkit-border-before-style"_s };
    case CSSPropertyID::CSSPropertyBorderBlockStartWidth:
        return { "-webkit-border-before-width"_s };
    case CSSPropertyID::CSSPropertyBorderInlineEndColor:
        return { "-webkit-border-end-color"_s };
    case CSSPropertyID::CSSPropertyBorderInlineEndStyle:
        return { "-webkit-border-end-style"_s };
    case CSSPropertyID::CSSPropertyBorderInlineEndWidth:
        return { "-webkit-border-end-width"_s };
    case CSSPropertyID::CSSPropertyBorderInlineStartColor:
        return { "-webkit-border-start-color"_s };
    case CSSPropertyID::CSSPropertyBorderInlineStartStyle:
        return { "-webkit-border-start-style"_s };
    case CSSPropertyID::CSSPropertyBorderInlineStartWidth:
        return { "-webkit-border-start-width"_s };
    case CSSPropertyID::CSSPropertyInlineSize:
        return { "-webkit-logical-width"_s };
    case CSSPropertyID::CSSPropertyMarginBlockEnd:
        return { "-webkit-margin-after"_s };
    case CSSPropertyID::CSSPropertyMarginBlockStart:
        return { "-webkit-margin-before"_s };
    case CSSPropertyID::CSSPropertyMarginInlineEnd:
        return { "-webkit-margin-end"_s };
    case CSSPropertyID::CSSPropertyMarginInlineStart:
        return { "-webkit-margin-start"_s };
    case CSSPropertyID::CSSPropertyMaxBlockSize:
        return { "-webkit-max-logical-height"_s };
    case CSSPropertyID::CSSPropertyMaxInlineSize:
        return { "-webkit-max-logical-width"_s };
    case CSSPropertyID::CSSPropertyMinBlockSize:
        return { "-webkit-min-logical-height"_s };
    case CSSPropertyID::CSSPropertyMinInlineSize:
        return { "-webkit-min-logical-width"_s };
    case CSSPropertyID::CSSPropertyPaddingBlockEnd:
        return { "-webkit-padding-after"_s };
    case CSSPropertyID::CSSPropertyPaddingBlockStart:
        return { "-webkit-padding-before"_s };
    case CSSPropertyID::CSSPropertyPaddingInlineEnd:
        return { "-webkit-padding-end"_s };
    case CSSPropertyID::CSSPropertyPaddingInlineStart:
        return { "-webkit-padding-start"_s };
    case CSSPropertyID::CSSPropertyAnimation:
        return { "-webkit-animation"_s };
    case CSSPropertyID::CSSPropertyBorderBlockEnd:
        return { "-webkit-border-after"_s };
    case CSSPropertyID::CSSPropertyBorderBlockStart:
        return { "-webkit-border-before"_s };
    case CSSPropertyID::CSSPropertyBorderInlineEnd:
        return { "-webkit-border-end"_s };
    case CSSPropertyID::CSSPropertyBorderInlineStart:
        return { "-webkit-border-start"_s };
    case CSSPropertyID::CSSPropertyColumnRule:
        return { "-webkit-column-rule"_s };
    case CSSPropertyID::CSSPropertyColumns:
        return { "-webkit-columns"_s };
    case CSSPropertyID::CSSPropertyFlex:
        return { "-webkit-flex"_s };
    case CSSPropertyID::CSSPropertyFlexFlow:
        return { "-webkit-flex-flow"_s };
    case CSSPropertyID::CSSPropertyGap:
        return { "grid-gap"_s };
    case CSSPropertyID::CSSPropertyPerspectiveOrigin:
        return { "-webkit-perspective-origin"_s };
    case CSSPropertyID::CSSPropertyScrollMargin:
        return { "scroll-snap-margin"_s };
    case CSSPropertyID::CSSPropertyTextDecorationSkip:
        return { "-webkit-text-decoration-skip"_s };
    case CSSPropertyID::CSSPropertyTextEmphasis:
        return { "-epub-text-emphasis"_s, "-webkit-text-emphasis"_s };
    case CSSPropertyID::CSSPropertyTransformOrigin:
        return { "-webkit-transform-origin"_s };
    case CSSPropertyID::CSSPropertyTransition:
        return { "-webkit-transition"_s };
    case CSSPropertyID::CSSPropertyWebkitTextOrientation:
        return { "-epub-text-orientation"_s };
    default:
        return { };
    }
}

const WTF::BitSet<cssPropertyIDEnumValueCount> CSSProperty::colorProperties = ([]() -> WTF::BitSet<cssPropertyIDEnumValueCount> {
    WTF::BitSet<cssPropertyIDEnumValueCount> result;
    result.set(CSSPropertyID::CSSPropertyAccentColor);
    result.set(CSSPropertyID::CSSPropertyBackgroundColor);
    result.set(CSSPropertyID::CSSPropertyCaretColor);
    result.set(CSSPropertyID::CSSPropertyColor);
    result.set(CSSPropertyID::CSSPropertyColumnRuleColor);
    result.set(CSSPropertyID::CSSPropertyFill);
    result.set(CSSPropertyID::CSSPropertyFloodColor);
    result.set(CSSPropertyID::CSSPropertyLightingColor);
    result.set(CSSPropertyID::CSSPropertyOutlineColor);
    result.set(CSSPropertyID::CSSPropertyStopColor);
    result.set(CSSPropertyID::CSSPropertyStroke);
    result.set(CSSPropertyID::CSSPropertyStrokeColor);
    result.set(CSSPropertyID::CSSPropertyTextDecorationColor);
    result.set(CSSPropertyID::CSSPropertyTextEmphasisColor);
    result.set(CSSPropertyID::CSSPropertyWebkitTextFillColor);
    result.set(CSSPropertyID::CSSPropertyWebkitTextStrokeColor);
    result.set(CSSPropertyID::CSSPropertyBorderBottomColor);
    result.set(CSSPropertyID::CSSPropertyBorderLeftColor);
    result.set(CSSPropertyID::CSSPropertyBorderRightColor);
    result.set(CSSPropertyID::CSSPropertyBorderTopColor);
    result.set(CSSPropertyID::CSSPropertyBorderBlockEndColor);
    result.set(CSSPropertyID::CSSPropertyBorderBlockStartColor);
    result.set(CSSPropertyID::CSSPropertyBorderInlineEndColor);
    result.set(CSSPropertyID::CSSPropertyBorderInlineStartColor);
    return result;
})();

const WTF::BitSet<cssPropertyIDEnumValueCount> CSSProperty::physicalProperties = ([]() -> WTF::BitSet<cssPropertyIDEnumValueCount> {
    WTF::BitSet<cssPropertyIDEnumValueCount> result;
    result.set(CSSPropertyID::CSSPropertyBorderBottomColor);
    result.set(CSSPropertyID::CSSPropertyBorderBottomLeftRadius);
    result.set(CSSPropertyID::CSSPropertyBorderBottomRightRadius);
    result.set(CSSPropertyID::CSSPropertyBorderBottomStyle);
    result.set(CSSPropertyID::CSSPropertyBorderBottomWidth);
    result.set(CSSPropertyID::CSSPropertyBorderLeftColor);
    result.set(CSSPropertyID::CSSPropertyBorderLeftStyle);
    result.set(CSSPropertyID::CSSPropertyBorderLeftWidth);
    result.set(CSSPropertyID::CSSPropertyBorderRightColor);
    result.set(CSSPropertyID::CSSPropertyBorderRightStyle);
    result.set(CSSPropertyID::CSSPropertyBorderRightWidth);
    result.set(CSSPropertyID::CSSPropertyBorderTopColor);
    result.set(CSSPropertyID::CSSPropertyBorderTopLeftRadius);
    result.set(CSSPropertyID::CSSPropertyBorderTopRightRadius);
    result.set(CSSPropertyID::CSSPropertyBorderTopStyle);
    result.set(CSSPropertyID::CSSPropertyBorderTopWidth);
    result.set(CSSPropertyID::CSSPropertyBottom);
    result.set(CSSPropertyID::CSSPropertyContainIntrinsicHeight);
    result.set(CSSPropertyID::CSSPropertyContainIntrinsicWidth);
    result.set(CSSPropertyID::CSSPropertyCornerBottomLeftShape);
    result.set(CSSPropertyID::CSSPropertyCornerBottomRightShape);
    result.set(CSSPropertyID::CSSPropertyCornerTopLeftShape);
    result.set(CSSPropertyID::CSSPropertyCornerTopRightShape);
    result.set(CSSPropertyID::CSSPropertyHeight);
    result.set(CSSPropertyID::CSSPropertyLeft);
    result.set(CSSPropertyID::CSSPropertyMarginBottom);
    result.set(CSSPropertyID::CSSPropertyMarginLeft);
    result.set(CSSPropertyID::CSSPropertyMarginRight);
    result.set(CSSPropertyID::CSSPropertyMarginTop);
    result.set(CSSPropertyID::CSSPropertyMaxHeight);
    result.set(CSSPropertyID::CSSPropertyMaxWidth);
    result.set(CSSPropertyID::CSSPropertyMinHeight);
    result.set(CSSPropertyID::CSSPropertyMinWidth);
    result.set(CSSPropertyID::CSSPropertyOverflowX);
    result.set(CSSPropertyID::CSSPropertyOverflowY);
    result.set(CSSPropertyID::CSSPropertyOverscrollBehaviorX);
    result.set(CSSPropertyID::CSSPropertyOverscrollBehaviorY);
    result.set(CSSPropertyID::CSSPropertyPaddingBottom);
    result.set(CSSPropertyID::CSSPropertyPaddingLeft);
    result.set(CSSPropertyID::CSSPropertyPaddingRight);
    result.set(CSSPropertyID::CSSPropertyPaddingTop);
    result.set(CSSPropertyID::CSSPropertyRight);
    result.set(CSSPropertyID::CSSPropertyScrollMarginBottom);
    result.set(CSSPropertyID::CSSPropertyScrollMarginLeft);
    result.set(CSSPropertyID::CSSPropertyScrollMarginRight);
    result.set(CSSPropertyID::CSSPropertyScrollMarginTop);
    result.set(CSSPropertyID::CSSPropertyScrollPaddingBottom);
    result.set(CSSPropertyID::CSSPropertyScrollPaddingLeft);
    result.set(CSSPropertyID::CSSPropertyScrollPaddingRight);
    result.set(CSSPropertyID::CSSPropertyScrollPaddingTop);
    result.set(CSSPropertyID::CSSPropertyTop);
    result.set(CSSPropertyID::CSSPropertyWidth);
    return result;
})();

char16_t CSSProperty::listValuedPropertySeparator(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyFontSizeAdjust:
        return ' ';
    case CSSPropertyID::CSSPropertyAnimationDelay:
        return ',';
    case CSSPropertyID::CSSPropertyAnimationDirection:
        return ',';
    case CSSPropertyID::CSSPropertyAnimationDuration:
        return ',';
    case CSSPropertyID::CSSPropertyAnimationFillMode:
        return ',';
    case CSSPropertyID::CSSPropertyAnimationIterationCount:
        return ',';
    case CSSPropertyID::CSSPropertyAnimationName:
        return ',';
    case CSSPropertyID::CSSPropertyAnimationPlayState:
        return ',';
    case CSSPropertyID::CSSPropertyAnimationRangeEnd:
        return ',';
    case CSSPropertyID::CSSPropertyAnimationRangeStart:
        return ',';
    case CSSPropertyID::CSSPropertyAnimationTimingFunction:
        return ',';
    case CSSPropertyID::CSSPropertyBackgroundAttachment:
        return ',';
    case CSSPropertyID::CSSPropertyBackgroundBlendMode:
        return ',';
    case CSSPropertyID::CSSPropertyBackgroundClip:
        return ' ';
    case CSSPropertyID::CSSPropertyBackgroundImage:
        return ' ';
    case CSSPropertyID::CSSPropertyBackgroundOrigin:
        return ' ';
    case CSSPropertyID::CSSPropertyBackgroundSize:
        return ' ';
    case CSSPropertyID::CSSPropertyContent:
        return ' ';
    case CSSPropertyID::CSSPropertyGridAutoColumns:
        return ' ';
    case CSSPropertyID::CSSPropertyGridAutoRows:
        return ' ';
    case CSSPropertyID::CSSPropertyTransitionBehavior:
        return ',';
    case CSSPropertyID::CSSPropertyTransitionDelay:
        return ',';
    case CSSPropertyID::CSSPropertyTransitionDuration:
        return ',';
    case CSSPropertyID::CSSPropertyAnimationRange:
        return ',';
    default:
        break;
    }
    return '\0';
}

bool CSSProperty::allowsNumberOrIntegerInput(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyFontSizeAdjust:
    case CSSPropertyID::CSSPropertyFontWeight:
    case CSSPropertyID::CSSPropertyZoom:
    case CSSPropertyID::CSSPropertyAnimationIterationCount:
    case CSSPropertyID::CSSPropertyBorderImageOutset:
    case CSSPropertyID::CSSPropertyBorderImageSlice:
    case CSSPropertyID::CSSPropertyBorderImageWidth:
    case CSSPropertyID::CSSPropertyColumnCount:
    case CSSPropertyID::CSSPropertyFillOpacity:
    case CSSPropertyID::CSSPropertyFlexGrow:
    case CSSPropertyID::CSSPropertyFlexShrink:
    case CSSPropertyID::CSSPropertyFloodOpacity:
    case CSSPropertyID::CSSPropertyLineHeight:
    case CSSPropertyID::CSSPropertyMaskBorderOutset:
    case CSSPropertyID::CSSPropertyMaxLines:
    case CSSPropertyID::CSSPropertyOpacity:
    case CSSPropertyID::CSSPropertyOrder:
    case CSSPropertyID::CSSPropertyOrphans:
    case CSSPropertyID::CSSPropertyShapeImageThreshold:
    case CSSPropertyID::CSSPropertyStopOpacity:
    case CSSPropertyID::CSSPropertyStrokeDasharray:
    case CSSPropertyID::CSSPropertyStrokeDashoffset:
    case CSSPropertyID::CSSPropertyStrokeMiterlimit:
    case CSSPropertyID::CSSPropertyStrokeOpacity:
    case CSSPropertyID::CSSPropertyStrokeWidth:
    case CSSPropertyID::CSSPropertyTabSize:
    case CSSPropertyID::CSSPropertyWidows:
    case CSSPropertyID::CSSPropertyZIndex:
    case CSSPropertyID::CSSPropertyWebkitBoxFlex:
    case CSSPropertyID::CSSPropertyWebkitBoxFlexGroup:
    case CSSPropertyID::CSSPropertyWebkitBoxOrdinalGroup:
    case CSSPropertyID::CSSPropertyWebkitHyphenateLimitAfter:
    case CSSPropertyID::CSSPropertyWebkitHyphenateLimitBefore:
    case CSSPropertyID::CSSPropertyWebkitHyphenateLimitLines:
    case CSSPropertyID::CSSPropertyWebkitInitialLetter:
    case CSSPropertyID::CSSPropertyWebkitLineClamp:
    case CSSPropertyID::CSSPropertyWebkitMarqueeRepetition:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::disablesNativeAppearance(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBackgroundAttachment:
    case CSSPropertyID::CSSPropertyBackgroundClip:
    case CSSPropertyID::CSSPropertyBackgroundColor:
    case CSSPropertyID::CSSPropertyBackgroundImage:
    case CSSPropertyID::CSSPropertyBackgroundOrigin:
    case CSSPropertyID::CSSPropertyBackgroundPositionX:
    case CSSPropertyID::CSSPropertyBackgroundPositionY:
    case CSSPropertyID::CSSPropertyBackgroundSize:
    case CSSPropertyID::CSSPropertyBorderImageOutset:
    case CSSPropertyID::CSSPropertyBorderImageRepeat:
    case CSSPropertyID::CSSPropertyBorderImageSlice:
    case CSSPropertyID::CSSPropertyBorderImageSource:
    case CSSPropertyID::CSSPropertyBorderImageWidth:
    case CSSPropertyID::CSSPropertyBorderBottomColor:
    case CSSPropertyID::CSSPropertyBorderBottomLeftRadius:
    case CSSPropertyID::CSSPropertyBorderBottomRightRadius:
    case CSSPropertyID::CSSPropertyBorderBottomStyle:
    case CSSPropertyID::CSSPropertyBorderBottomWidth:
    case CSSPropertyID::CSSPropertyBorderLeftColor:
    case CSSPropertyID::CSSPropertyBorderLeftStyle:
    case CSSPropertyID::CSSPropertyBorderLeftWidth:
    case CSSPropertyID::CSSPropertyBorderRightColor:
    case CSSPropertyID::CSSPropertyBorderRightStyle:
    case CSSPropertyID::CSSPropertyBorderRightWidth:
    case CSSPropertyID::CSSPropertyBorderTopColor:
    case CSSPropertyID::CSSPropertyBorderTopLeftRadius:
    case CSSPropertyID::CSSPropertyBorderTopRightRadius:
    case CSSPropertyID::CSSPropertyBorderTopStyle:
    case CSSPropertyID::CSSPropertyBorderTopWidth:
    case CSSPropertyID::CSSPropertyCornerBottomLeftShape:
    case CSSPropertyID::CSSPropertyCornerBottomRightShape:
    case CSSPropertyID::CSSPropertyCornerTopLeftShape:
    case CSSPropertyID::CSSPropertyCornerTopRightShape:
    case CSSPropertyID::CSSPropertyBorderBlockEndColor:
    case CSSPropertyID::CSSPropertyBorderBlockEndStyle:
    case CSSPropertyID::CSSPropertyBorderBlockEndWidth:
    case CSSPropertyID::CSSPropertyBorderBlockStartColor:
    case CSSPropertyID::CSSPropertyBorderBlockStartStyle:
    case CSSPropertyID::CSSPropertyBorderBlockStartWidth:
    case CSSPropertyID::CSSPropertyBorderEndEndRadius:
    case CSSPropertyID::CSSPropertyBorderEndStartRadius:
    case CSSPropertyID::CSSPropertyBorderInlineEndColor:
    case CSSPropertyID::CSSPropertyBorderInlineEndStyle:
    case CSSPropertyID::CSSPropertyBorderInlineEndWidth:
    case CSSPropertyID::CSSPropertyBorderInlineStartColor:
    case CSSPropertyID::CSSPropertyBorderInlineStartStyle:
    case CSSPropertyID::CSSPropertyBorderInlineStartWidth:
    case CSSPropertyID::CSSPropertyBorderStartEndRadius:
    case CSSPropertyID::CSSPropertyBorderStartStartRadius:
    case CSSPropertyID::CSSPropertyCornerEndEndShape:
    case CSSPropertyID::CSSPropertyCornerEndStartShape:
    case CSSPropertyID::CSSPropertyCornerStartEndShape:
    case CSSPropertyID::CSSPropertyCornerStartStartShape:
    case CSSPropertyID::CSSPropertyCornerShape:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isBorderColorProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBorderBlockEnd:
    case CSSPropertyID::CSSPropertyBorderBlockEndColor:
    case CSSPropertyID::CSSPropertyBorderBlockStart:
    case CSSPropertyID::CSSPropertyBorderBlockStartColor:
    case CSSPropertyID::CSSPropertyBorderBottomColor:
    case CSSPropertyID::CSSPropertyBorderColor:
    case CSSPropertyID::CSSPropertyBorderInlineEnd:
    case CSSPropertyID::CSSPropertyBorderInlineEndColor:
    case CSSPropertyID::CSSPropertyBorderInlineStart:
    case CSSPropertyID::CSSPropertyBorderInlineStartColor:
    case CSSPropertyID::CSSPropertyBorderLeft:
    case CSSPropertyID::CSSPropertyBorderLeftColor:
    case CSSPropertyID::CSSPropertyBorderRight:
    case CSSPropertyID::CSSPropertyBorderRightColor:
    case CSSPropertyID::CSSPropertyBorderTop:
    case CSSPropertyID::CSSPropertyBorderTopColor:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isBorderRadiusProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyWebkitBorderRadius:
    case CSSPropertyID::CSSPropertyBorderBottomLeftRadius:
    case CSSPropertyID::CSSPropertyBorderBottomRightRadius:
    case CSSPropertyID::CSSPropertyBorderEndEndRadius:
    case CSSPropertyID::CSSPropertyBorderEndStartRadius:
    case CSSPropertyID::CSSPropertyBorderStartEndRadius:
    case CSSPropertyID::CSSPropertyBorderStartStartRadius:
    case CSSPropertyID::CSSPropertyBorderTopLeftRadius:
    case CSSPropertyID::CSSPropertyBorderTopRightRadius:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isBorderStyleProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBorderBlockEndStyle:
    case CSSPropertyID::CSSPropertyBorderBlockStartStyle:
    case CSSPropertyID::CSSPropertyBorderBlockStyle:
    case CSSPropertyID::CSSPropertyBorderBottomStyle:
    case CSSPropertyID::CSSPropertyBorderInlineEndStyle:
    case CSSPropertyID::CSSPropertyBorderInlineStartStyle:
    case CSSPropertyID::CSSPropertyBorderInlineStyle:
    case CSSPropertyID::CSSPropertyBorderLeftStyle:
    case CSSPropertyID::CSSPropertyBorderRightStyle:
    case CSSPropertyID::CSSPropertyBorderStyle:
    case CSSPropertyID::CSSPropertyBorderTop:
    case CSSPropertyID::CSSPropertyBorderTopStyle:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isBorderWidthProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBorderBlockEndWidth:
    case CSSPropertyID::CSSPropertyBorderBlockStartWidth:
    case CSSPropertyID::CSSPropertyBorderBlockWidth:
    case CSSPropertyID::CSSPropertyBorderBottomWidth:
    case CSSPropertyID::CSSPropertyBorderInlineEndWidth:
    case CSSPropertyID::CSSPropertyBorderInlineStartWidth:
    case CSSPropertyID::CSSPropertyBorderInlineWidth:
    case CSSPropertyID::CSSPropertyBorderLeftWidth:
    case CSSPropertyID::CSSPropertyBorderRightWidth:
    case CSSPropertyID::CSSPropertyBorderTopWidth:
    case CSSPropertyID::CSSPropertyBorderWidth:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isContainIntrinsicSizeProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyContainIntrinsicBlockSize:
    case CSSPropertyID::CSSPropertyContainIntrinsicHeight:
    case CSSPropertyID::CSSPropertyContainIntrinsicInlineSize:
    case CSSPropertyID::CSSPropertyContainIntrinsicSize:
    case CSSPropertyID::CSSPropertyContainIntrinsicWidth:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isCornerShapeProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyCornerBottomLeftShape:
    case CSSPropertyID::CSSPropertyCornerBottomRightShape:
    case CSSPropertyID::CSSPropertyCornerEndEndShape:
    case CSSPropertyID::CSSPropertyCornerEndStartShape:
    case CSSPropertyID::CSSPropertyCornerShape:
    case CSSPropertyID::CSSPropertyCornerStartEndShape:
    case CSSPropertyID::CSSPropertyCornerStartStartShape:
    case CSSPropertyID::CSSPropertyCornerTopLeftShape:
    case CSSPropertyID::CSSPropertyCornerTopRightShape:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isInsetProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBottom:
    case CSSPropertyID::CSSPropertyInset:
    case CSSPropertyID::CSSPropertyInsetBlock:
    case CSSPropertyID::CSSPropertyInsetBlockEnd:
    case CSSPropertyID::CSSPropertyInsetBlockStart:
    case CSSPropertyID::CSSPropertyInsetInline:
    case CSSPropertyID::CSSPropertyInsetInlineEnd:
    case CSSPropertyID::CSSPropertyInsetInlineStart:
    case CSSPropertyID::CSSPropertyLeft:
    case CSSPropertyID::CSSPropertyRight:
    case CSSPropertyID::CSSPropertyTop:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isMarginProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyMargin:
    case CSSPropertyID::CSSPropertyMarginBlock:
    case CSSPropertyID::CSSPropertyMarginBlockEnd:
    case CSSPropertyID::CSSPropertyMarginBlockStart:
    case CSSPropertyID::CSSPropertyMarginBottom:
    case CSSPropertyID::CSSPropertyMarginInline:
    case CSSPropertyID::CSSPropertyMarginInlineEnd:
    case CSSPropertyID::CSSPropertyMarginInlineStart:
    case CSSPropertyID::CSSPropertyMarginLeft:
    case CSSPropertyID::CSSPropertyMarginRight:
    case CSSPropertyID::CSSPropertyMarginTop:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isMaxSizeProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyMaxBlockSize:
    case CSSPropertyID::CSSPropertyMaxHeight:
    case CSSPropertyID::CSSPropertyMaxInlineSize:
    case CSSPropertyID::CSSPropertyMaxWidth:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isMinSizeProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyMinBlockSize:
    case CSSPropertyID::CSSPropertyMinHeight:
    case CSSPropertyID::CSSPropertyMinInlineSize:
    case CSSPropertyID::CSSPropertyMinWidth:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isOverflowProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyOverflow:
    case CSSPropertyID::CSSPropertyOverflowBlock:
    case CSSPropertyID::CSSPropertyOverflowInline:
    case CSSPropertyID::CSSPropertyOverflowX:
    case CSSPropertyID::CSSPropertyOverflowY:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isOverscrollBehaviorProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyOverscrollBehavior:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorBlock:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorInline:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorX:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorY:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isPaddingProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyPadding:
    case CSSPropertyID::CSSPropertyPaddingBlock:
    case CSSPropertyID::CSSPropertyPaddingBlockEnd:
    case CSSPropertyID::CSSPropertyPaddingBlockStart:
    case CSSPropertyID::CSSPropertyPaddingBottom:
    case CSSPropertyID::CSSPropertyPaddingInline:
    case CSSPropertyID::CSSPropertyPaddingInlineEnd:
    case CSSPropertyID::CSSPropertyPaddingInlineStart:
    case CSSPropertyID::CSSPropertyPaddingLeft:
    case CSSPropertyID::CSSPropertyPaddingRight:
    case CSSPropertyID::CSSPropertyPaddingTop:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isScrollMarginProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyScrollMargin:
    case CSSPropertyID::CSSPropertyScrollMarginBlock:
    case CSSPropertyID::CSSPropertyScrollMarginBlockEnd:
    case CSSPropertyID::CSSPropertyScrollMarginBlockStart:
    case CSSPropertyID::CSSPropertyScrollMarginBottom:
    case CSSPropertyID::CSSPropertyScrollMarginInline:
    case CSSPropertyID::CSSPropertyScrollMarginInlineEnd:
    case CSSPropertyID::CSSPropertyScrollMarginInlineStart:
    case CSSPropertyID::CSSPropertyScrollMarginLeft:
    case CSSPropertyID::CSSPropertyScrollMarginRight:
    case CSSPropertyID::CSSPropertyScrollMarginTop:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isScrollPaddingProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyScrollPadding:
    case CSSPropertyID::CSSPropertyScrollPaddingBlock:
    case CSSPropertyID::CSSPropertyScrollPaddingBlockEnd:
    case CSSPropertyID::CSSPropertyScrollPaddingBlockStart:
    case CSSPropertyID::CSSPropertyScrollPaddingBottom:
    case CSSPropertyID::CSSPropertyScrollPaddingInline:
    case CSSPropertyID::CSSPropertyScrollPaddingInlineEnd:
    case CSSPropertyID::CSSPropertyScrollPaddingInlineStart:
    case CSSPropertyID::CSSPropertyScrollPaddingLeft:
    case CSSPropertyID::CSSPropertyScrollPaddingRight:
    case CSSPropertyID::CSSPropertyScrollPaddingTop:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isSizeProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBlockSize:
    case CSSPropertyID::CSSPropertyHeight:
    case CSSPropertyID::CSSPropertyInlineSize:
    case CSSPropertyID::CSSPropertyWidth:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isInLogicalPropertyGroup(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBorderBlockEndColor:
    case CSSPropertyID::CSSPropertyBorderBlockStartColor:
    case CSSPropertyID::CSSPropertyBorderInlineEndColor:
    case CSSPropertyID::CSSPropertyBorderInlineStartColor:
    case CSSPropertyID::CSSPropertyBorderBottomColor:
    case CSSPropertyID::CSSPropertyBorderLeftColor:
    case CSSPropertyID::CSSPropertyBorderRightColor:
    case CSSPropertyID::CSSPropertyBorderTopColor:
    case CSSPropertyID::CSSPropertyBorderEndEndRadius:
    case CSSPropertyID::CSSPropertyBorderEndStartRadius:
    case CSSPropertyID::CSSPropertyBorderStartEndRadius:
    case CSSPropertyID::CSSPropertyBorderStartStartRadius:
    case CSSPropertyID::CSSPropertyBorderBottomLeftRadius:
    case CSSPropertyID::CSSPropertyBorderBottomRightRadius:
    case CSSPropertyID::CSSPropertyBorderTopLeftRadius:
    case CSSPropertyID::CSSPropertyBorderTopRightRadius:
    case CSSPropertyID::CSSPropertyBorderBlockEndStyle:
    case CSSPropertyID::CSSPropertyBorderBlockStartStyle:
    case CSSPropertyID::CSSPropertyBorderInlineEndStyle:
    case CSSPropertyID::CSSPropertyBorderInlineStartStyle:
    case CSSPropertyID::CSSPropertyBorderBottomStyle:
    case CSSPropertyID::CSSPropertyBorderLeftStyle:
    case CSSPropertyID::CSSPropertyBorderRightStyle:
    case CSSPropertyID::CSSPropertyBorderTopStyle:
    case CSSPropertyID::CSSPropertyBorderBlockEndWidth:
    case CSSPropertyID::CSSPropertyBorderBlockStartWidth:
    case CSSPropertyID::CSSPropertyBorderInlineEndWidth:
    case CSSPropertyID::CSSPropertyBorderInlineStartWidth:
    case CSSPropertyID::CSSPropertyBorderBottomWidth:
    case CSSPropertyID::CSSPropertyBorderLeftWidth:
    case CSSPropertyID::CSSPropertyBorderRightWidth:
    case CSSPropertyID::CSSPropertyBorderTopWidth:
    case CSSPropertyID::CSSPropertyContainIntrinsicBlockSize:
    case CSSPropertyID::CSSPropertyContainIntrinsicInlineSize:
    case CSSPropertyID::CSSPropertyContainIntrinsicHeight:
    case CSSPropertyID::CSSPropertyContainIntrinsicWidth:
    case CSSPropertyID::CSSPropertyCornerEndEndShape:
    case CSSPropertyID::CSSPropertyCornerEndStartShape:
    case CSSPropertyID::CSSPropertyCornerStartEndShape:
    case CSSPropertyID::CSSPropertyCornerStartStartShape:
    case CSSPropertyID::CSSPropertyCornerBottomLeftShape:
    case CSSPropertyID::CSSPropertyCornerBottomRightShape:
    case CSSPropertyID::CSSPropertyCornerTopLeftShape:
    case CSSPropertyID::CSSPropertyCornerTopRightShape:
    case CSSPropertyID::CSSPropertyInsetBlockEnd:
    case CSSPropertyID::CSSPropertyInsetBlockStart:
    case CSSPropertyID::CSSPropertyInsetInlineEnd:
    case CSSPropertyID::CSSPropertyInsetInlineStart:
    case CSSPropertyID::CSSPropertyBottom:
    case CSSPropertyID::CSSPropertyLeft:
    case CSSPropertyID::CSSPropertyRight:
    case CSSPropertyID::CSSPropertyTop:
    case CSSPropertyID::CSSPropertyMarginBlockEnd:
    case CSSPropertyID::CSSPropertyMarginBlockStart:
    case CSSPropertyID::CSSPropertyMarginInlineEnd:
    case CSSPropertyID::CSSPropertyMarginInlineStart:
    case CSSPropertyID::CSSPropertyMarginBottom:
    case CSSPropertyID::CSSPropertyMarginLeft:
    case CSSPropertyID::CSSPropertyMarginRight:
    case CSSPropertyID::CSSPropertyMarginTop:
    case CSSPropertyID::CSSPropertyMaxBlockSize:
    case CSSPropertyID::CSSPropertyMaxInlineSize:
    case CSSPropertyID::CSSPropertyMaxHeight:
    case CSSPropertyID::CSSPropertyMaxWidth:
    case CSSPropertyID::CSSPropertyMinBlockSize:
    case CSSPropertyID::CSSPropertyMinInlineSize:
    case CSSPropertyID::CSSPropertyMinHeight:
    case CSSPropertyID::CSSPropertyMinWidth:
    case CSSPropertyID::CSSPropertyOverflowBlock:
    case CSSPropertyID::CSSPropertyOverflowInline:
    case CSSPropertyID::CSSPropertyOverflowX:
    case CSSPropertyID::CSSPropertyOverflowY:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorBlock:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorInline:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorX:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorY:
    case CSSPropertyID::CSSPropertyPaddingBlockEnd:
    case CSSPropertyID::CSSPropertyPaddingBlockStart:
    case CSSPropertyID::CSSPropertyPaddingInlineEnd:
    case CSSPropertyID::CSSPropertyPaddingInlineStart:
    case CSSPropertyID::CSSPropertyPaddingBottom:
    case CSSPropertyID::CSSPropertyPaddingLeft:
    case CSSPropertyID::CSSPropertyPaddingRight:
    case CSSPropertyID::CSSPropertyPaddingTop:
    case CSSPropertyID::CSSPropertyScrollMarginBlockEnd:
    case CSSPropertyID::CSSPropertyScrollMarginBlockStart:
    case CSSPropertyID::CSSPropertyScrollMarginInlineEnd:
    case CSSPropertyID::CSSPropertyScrollMarginInlineStart:
    case CSSPropertyID::CSSPropertyScrollMarginBottom:
    case CSSPropertyID::CSSPropertyScrollMarginLeft:
    case CSSPropertyID::CSSPropertyScrollMarginRight:
    case CSSPropertyID::CSSPropertyScrollMarginTop:
    case CSSPropertyID::CSSPropertyScrollPaddingBlockEnd:
    case CSSPropertyID::CSSPropertyScrollPaddingBlockStart:
    case CSSPropertyID::CSSPropertyScrollPaddingInlineEnd:
    case CSSPropertyID::CSSPropertyScrollPaddingInlineStart:
    case CSSPropertyID::CSSPropertyScrollPaddingBottom:
    case CSSPropertyID::CSSPropertyScrollPaddingLeft:
    case CSSPropertyID::CSSPropertyScrollPaddingRight:
    case CSSPropertyID::CSSPropertyScrollPaddingTop:
    case CSSPropertyID::CSSPropertyBlockSize:
    case CSSPropertyID::CSSPropertyInlineSize:
    case CSSPropertyID::CSSPropertyHeight:
    case CSSPropertyID::CSSPropertyWidth:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::areInSameLogicalPropertyGroupWithDifferentMappingLogic(CSSPropertyID id1, CSSPropertyID id2)
{
    switch (id1) {
    case CSSPropertyID::CSSPropertyBorderBlockEndColor:
    case CSSPropertyID::CSSPropertyBorderBlockStartColor:
    case CSSPropertyID::CSSPropertyBorderInlineEndColor:
    case CSSPropertyID::CSSPropertyBorderInlineStartColor:
        switch (id2) {
        case CSSPropertyID::CSSPropertyBorderBottomColor:
        case CSSPropertyID::CSSPropertyBorderLeftColor:
        case CSSPropertyID::CSSPropertyBorderRightColor:
        case CSSPropertyID::CSSPropertyBorderTopColor:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyBorderBottomColor:
    case CSSPropertyID::CSSPropertyBorderLeftColor:
    case CSSPropertyID::CSSPropertyBorderRightColor:
    case CSSPropertyID::CSSPropertyBorderTopColor:
        switch (id2) {
        case CSSPropertyID::CSSPropertyBorderBlockEndColor:
        case CSSPropertyID::CSSPropertyBorderBlockStartColor:
        case CSSPropertyID::CSSPropertyBorderInlineEndColor:
        case CSSPropertyID::CSSPropertyBorderInlineStartColor:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyBorderEndEndRadius:
    case CSSPropertyID::CSSPropertyBorderEndStartRadius:
    case CSSPropertyID::CSSPropertyBorderStartEndRadius:
    case CSSPropertyID::CSSPropertyBorderStartStartRadius:
        switch (id2) {
        case CSSPropertyID::CSSPropertyBorderBottomLeftRadius:
        case CSSPropertyID::CSSPropertyBorderBottomRightRadius:
        case CSSPropertyID::CSSPropertyBorderTopLeftRadius:
        case CSSPropertyID::CSSPropertyBorderTopRightRadius:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyBorderBottomLeftRadius:
    case CSSPropertyID::CSSPropertyBorderBottomRightRadius:
    case CSSPropertyID::CSSPropertyBorderTopLeftRadius:
    case CSSPropertyID::CSSPropertyBorderTopRightRadius:
        switch (id2) {
        case CSSPropertyID::CSSPropertyBorderEndEndRadius:
        case CSSPropertyID::CSSPropertyBorderEndStartRadius:
        case CSSPropertyID::CSSPropertyBorderStartEndRadius:
        case CSSPropertyID::CSSPropertyBorderStartStartRadius:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyBorderBlockEndStyle:
    case CSSPropertyID::CSSPropertyBorderBlockStartStyle:
    case CSSPropertyID::CSSPropertyBorderInlineEndStyle:
    case CSSPropertyID::CSSPropertyBorderInlineStartStyle:
        switch (id2) {
        case CSSPropertyID::CSSPropertyBorderBottomStyle:
        case CSSPropertyID::CSSPropertyBorderLeftStyle:
        case CSSPropertyID::CSSPropertyBorderRightStyle:
        case CSSPropertyID::CSSPropertyBorderTopStyle:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyBorderBottomStyle:
    case CSSPropertyID::CSSPropertyBorderLeftStyle:
    case CSSPropertyID::CSSPropertyBorderRightStyle:
    case CSSPropertyID::CSSPropertyBorderTopStyle:
        switch (id2) {
        case CSSPropertyID::CSSPropertyBorderBlockEndStyle:
        case CSSPropertyID::CSSPropertyBorderBlockStartStyle:
        case CSSPropertyID::CSSPropertyBorderInlineEndStyle:
        case CSSPropertyID::CSSPropertyBorderInlineStartStyle:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyBorderBlockEndWidth:
    case CSSPropertyID::CSSPropertyBorderBlockStartWidth:
    case CSSPropertyID::CSSPropertyBorderInlineEndWidth:
    case CSSPropertyID::CSSPropertyBorderInlineStartWidth:
        switch (id2) {
        case CSSPropertyID::CSSPropertyBorderBottomWidth:
        case CSSPropertyID::CSSPropertyBorderLeftWidth:
        case CSSPropertyID::CSSPropertyBorderRightWidth:
        case CSSPropertyID::CSSPropertyBorderTopWidth:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyBorderBottomWidth:
    case CSSPropertyID::CSSPropertyBorderLeftWidth:
    case CSSPropertyID::CSSPropertyBorderRightWidth:
    case CSSPropertyID::CSSPropertyBorderTopWidth:
        switch (id2) {
        case CSSPropertyID::CSSPropertyBorderBlockEndWidth:
        case CSSPropertyID::CSSPropertyBorderBlockStartWidth:
        case CSSPropertyID::CSSPropertyBorderInlineEndWidth:
        case CSSPropertyID::CSSPropertyBorderInlineStartWidth:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyContainIntrinsicBlockSize:
    case CSSPropertyID::CSSPropertyContainIntrinsicInlineSize:
        switch (id2) {
        case CSSPropertyID::CSSPropertyContainIntrinsicHeight:
        case CSSPropertyID::CSSPropertyContainIntrinsicWidth:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyContainIntrinsicHeight:
    case CSSPropertyID::CSSPropertyContainIntrinsicWidth:
        switch (id2) {
        case CSSPropertyID::CSSPropertyContainIntrinsicBlockSize:
        case CSSPropertyID::CSSPropertyContainIntrinsicInlineSize:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyCornerEndEndShape:
    case CSSPropertyID::CSSPropertyCornerEndStartShape:
    case CSSPropertyID::CSSPropertyCornerStartEndShape:
    case CSSPropertyID::CSSPropertyCornerStartStartShape:
        switch (id2) {
        case CSSPropertyID::CSSPropertyCornerBottomLeftShape:
        case CSSPropertyID::CSSPropertyCornerBottomRightShape:
        case CSSPropertyID::CSSPropertyCornerTopLeftShape:
        case CSSPropertyID::CSSPropertyCornerTopRightShape:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyCornerBottomLeftShape:
    case CSSPropertyID::CSSPropertyCornerBottomRightShape:
    case CSSPropertyID::CSSPropertyCornerTopLeftShape:
    case CSSPropertyID::CSSPropertyCornerTopRightShape:
        switch (id2) {
        case CSSPropertyID::CSSPropertyCornerEndEndShape:
        case CSSPropertyID::CSSPropertyCornerEndStartShape:
        case CSSPropertyID::CSSPropertyCornerStartEndShape:
        case CSSPropertyID::CSSPropertyCornerStartStartShape:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyInsetBlockEnd:
    case CSSPropertyID::CSSPropertyInsetBlockStart:
    case CSSPropertyID::CSSPropertyInsetInlineEnd:
    case CSSPropertyID::CSSPropertyInsetInlineStart:
        switch (id2) {
        case CSSPropertyID::CSSPropertyBottom:
        case CSSPropertyID::CSSPropertyLeft:
        case CSSPropertyID::CSSPropertyRight:
        case CSSPropertyID::CSSPropertyTop:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyBottom:
    case CSSPropertyID::CSSPropertyLeft:
    case CSSPropertyID::CSSPropertyRight:
    case CSSPropertyID::CSSPropertyTop:
        switch (id2) {
        case CSSPropertyID::CSSPropertyInsetBlockEnd:
        case CSSPropertyID::CSSPropertyInsetBlockStart:
        case CSSPropertyID::CSSPropertyInsetInlineEnd:
        case CSSPropertyID::CSSPropertyInsetInlineStart:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyMarginBlockEnd:
    case CSSPropertyID::CSSPropertyMarginBlockStart:
    case CSSPropertyID::CSSPropertyMarginInlineEnd:
    case CSSPropertyID::CSSPropertyMarginInlineStart:
        switch (id2) {
        case CSSPropertyID::CSSPropertyMarginBottom:
        case CSSPropertyID::CSSPropertyMarginLeft:
        case CSSPropertyID::CSSPropertyMarginRight:
        case CSSPropertyID::CSSPropertyMarginTop:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyMarginBottom:
    case CSSPropertyID::CSSPropertyMarginLeft:
    case CSSPropertyID::CSSPropertyMarginRight:
    case CSSPropertyID::CSSPropertyMarginTop:
        switch (id2) {
        case CSSPropertyID::CSSPropertyMarginBlockEnd:
        case CSSPropertyID::CSSPropertyMarginBlockStart:
        case CSSPropertyID::CSSPropertyMarginInlineEnd:
        case CSSPropertyID::CSSPropertyMarginInlineStart:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyMaxBlockSize:
    case CSSPropertyID::CSSPropertyMaxInlineSize:
        switch (id2) {
        case CSSPropertyID::CSSPropertyMaxHeight:
        case CSSPropertyID::CSSPropertyMaxWidth:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyMaxHeight:
    case CSSPropertyID::CSSPropertyMaxWidth:
        switch (id2) {
        case CSSPropertyID::CSSPropertyMaxBlockSize:
        case CSSPropertyID::CSSPropertyMaxInlineSize:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyMinBlockSize:
    case CSSPropertyID::CSSPropertyMinInlineSize:
        switch (id2) {
        case CSSPropertyID::CSSPropertyMinHeight:
        case CSSPropertyID::CSSPropertyMinWidth:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyMinHeight:
    case CSSPropertyID::CSSPropertyMinWidth:
        switch (id2) {
        case CSSPropertyID::CSSPropertyMinBlockSize:
        case CSSPropertyID::CSSPropertyMinInlineSize:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyOverflowBlock:
    case CSSPropertyID::CSSPropertyOverflowInline:
        switch (id2) {
        case CSSPropertyID::CSSPropertyOverflowX:
        case CSSPropertyID::CSSPropertyOverflowY:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyOverflowX:
    case CSSPropertyID::CSSPropertyOverflowY:
        switch (id2) {
        case CSSPropertyID::CSSPropertyOverflowBlock:
        case CSSPropertyID::CSSPropertyOverflowInline:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyOverscrollBehaviorBlock:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorInline:
        switch (id2) {
        case CSSPropertyID::CSSPropertyOverscrollBehaviorX:
        case CSSPropertyID::CSSPropertyOverscrollBehaviorY:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyOverscrollBehaviorX:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorY:
        switch (id2) {
        case CSSPropertyID::CSSPropertyOverscrollBehaviorBlock:
        case CSSPropertyID::CSSPropertyOverscrollBehaviorInline:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyPaddingBlockEnd:
    case CSSPropertyID::CSSPropertyPaddingBlockStart:
    case CSSPropertyID::CSSPropertyPaddingInlineEnd:
    case CSSPropertyID::CSSPropertyPaddingInlineStart:
        switch (id2) {
        case CSSPropertyID::CSSPropertyPaddingBottom:
        case CSSPropertyID::CSSPropertyPaddingLeft:
        case CSSPropertyID::CSSPropertyPaddingRight:
        case CSSPropertyID::CSSPropertyPaddingTop:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyPaddingBottom:
    case CSSPropertyID::CSSPropertyPaddingLeft:
    case CSSPropertyID::CSSPropertyPaddingRight:
    case CSSPropertyID::CSSPropertyPaddingTop:
        switch (id2) {
        case CSSPropertyID::CSSPropertyPaddingBlockEnd:
        case CSSPropertyID::CSSPropertyPaddingBlockStart:
        case CSSPropertyID::CSSPropertyPaddingInlineEnd:
        case CSSPropertyID::CSSPropertyPaddingInlineStart:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyScrollMarginBlockEnd:
    case CSSPropertyID::CSSPropertyScrollMarginBlockStart:
    case CSSPropertyID::CSSPropertyScrollMarginInlineEnd:
    case CSSPropertyID::CSSPropertyScrollMarginInlineStart:
        switch (id2) {
        case CSSPropertyID::CSSPropertyScrollMarginBottom:
        case CSSPropertyID::CSSPropertyScrollMarginLeft:
        case CSSPropertyID::CSSPropertyScrollMarginRight:
        case CSSPropertyID::CSSPropertyScrollMarginTop:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyScrollMarginBottom:
    case CSSPropertyID::CSSPropertyScrollMarginLeft:
    case CSSPropertyID::CSSPropertyScrollMarginRight:
    case CSSPropertyID::CSSPropertyScrollMarginTop:
        switch (id2) {
        case CSSPropertyID::CSSPropertyScrollMarginBlockEnd:
        case CSSPropertyID::CSSPropertyScrollMarginBlockStart:
        case CSSPropertyID::CSSPropertyScrollMarginInlineEnd:
        case CSSPropertyID::CSSPropertyScrollMarginInlineStart:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyScrollPaddingBlockEnd:
    case CSSPropertyID::CSSPropertyScrollPaddingBlockStart:
    case CSSPropertyID::CSSPropertyScrollPaddingInlineEnd:
    case CSSPropertyID::CSSPropertyScrollPaddingInlineStart:
        switch (id2) {
        case CSSPropertyID::CSSPropertyScrollPaddingBottom:
        case CSSPropertyID::CSSPropertyScrollPaddingLeft:
        case CSSPropertyID::CSSPropertyScrollPaddingRight:
        case CSSPropertyID::CSSPropertyScrollPaddingTop:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyScrollPaddingBottom:
    case CSSPropertyID::CSSPropertyScrollPaddingLeft:
    case CSSPropertyID::CSSPropertyScrollPaddingRight:
    case CSSPropertyID::CSSPropertyScrollPaddingTop:
        switch (id2) {
        case CSSPropertyID::CSSPropertyScrollPaddingBlockEnd:
        case CSSPropertyID::CSSPropertyScrollPaddingBlockStart:
        case CSSPropertyID::CSSPropertyScrollPaddingInlineEnd:
        case CSSPropertyID::CSSPropertyScrollPaddingInlineStart:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyBlockSize:
    case CSSPropertyID::CSSPropertyInlineSize:
        switch (id2) {
        case CSSPropertyID::CSSPropertyHeight:
        case CSSPropertyID::CSSPropertyWidth:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyHeight:
    case CSSPropertyID::CSSPropertyWidth:
        switch (id2) {
        case CSSPropertyID::CSSPropertyBlockSize:
        case CSSPropertyID::CSSPropertyInlineSize:
            return true;
        default:
            return false;
        }
    default:
        return false;
    }
}

CSSPropertyID CSSProperty::resolveDirectionAwareProperty(CSSPropertyID id, WritingMode writingMode)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBorderBlockEndColor: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopColor, CSSPropertyID::CSSPropertyBorderRightColor, CSSPropertyID::CSSPropertyBorderBottomColor, CSSPropertyID::CSSPropertyBorderLeftColor };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockEnd))];
    }
    case CSSPropertyID::CSSPropertyBorderBlockStartColor: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopColor, CSSPropertyID::CSSPropertyBorderRightColor, CSSPropertyID::CSSPropertyBorderBottomColor, CSSPropertyID::CSSPropertyBorderLeftColor };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockStart))];
    }
    case CSSPropertyID::CSSPropertyBorderInlineEndColor: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopColor, CSSPropertyID::CSSPropertyBorderRightColor, CSSPropertyID::CSSPropertyBorderBottomColor, CSSPropertyID::CSSPropertyBorderLeftColor };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineEnd))];
    }
    case CSSPropertyID::CSSPropertyBorderInlineStartColor: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopColor, CSSPropertyID::CSSPropertyBorderRightColor, CSSPropertyID::CSSPropertyBorderBottomColor, CSSPropertyID::CSSPropertyBorderLeftColor };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineStart))];
    }
    case CSSPropertyID::CSSPropertyBorderEndEndRadius: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopLeftRadius, CSSPropertyID::CSSPropertyBorderTopRightRadius, CSSPropertyID::CSSPropertyBorderBottomLeftRadius, CSSPropertyID::CSSPropertyBorderBottomRightRadius };
        return properties[static_cast<size_t>(mapCornerLogicalToPhysical(writingMode, LogicalBoxCorner::EndEnd))];
    }
    case CSSPropertyID::CSSPropertyBorderEndStartRadius: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopLeftRadius, CSSPropertyID::CSSPropertyBorderTopRightRadius, CSSPropertyID::CSSPropertyBorderBottomLeftRadius, CSSPropertyID::CSSPropertyBorderBottomRightRadius };
        return properties[static_cast<size_t>(mapCornerLogicalToPhysical(writingMode, LogicalBoxCorner::EndStart))];
    }
    case CSSPropertyID::CSSPropertyBorderStartEndRadius: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopLeftRadius, CSSPropertyID::CSSPropertyBorderTopRightRadius, CSSPropertyID::CSSPropertyBorderBottomLeftRadius, CSSPropertyID::CSSPropertyBorderBottomRightRadius };
        return properties[static_cast<size_t>(mapCornerLogicalToPhysical(writingMode, LogicalBoxCorner::StartEnd))];
    }
    case CSSPropertyID::CSSPropertyBorderStartStartRadius: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopLeftRadius, CSSPropertyID::CSSPropertyBorderTopRightRadius, CSSPropertyID::CSSPropertyBorderBottomLeftRadius, CSSPropertyID::CSSPropertyBorderBottomRightRadius };
        return properties[static_cast<size_t>(mapCornerLogicalToPhysical(writingMode, LogicalBoxCorner::StartStart))];
    }
    case CSSPropertyID::CSSPropertyBorderBlockEndStyle: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopStyle, CSSPropertyID::CSSPropertyBorderRightStyle, CSSPropertyID::CSSPropertyBorderBottomStyle, CSSPropertyID::CSSPropertyBorderLeftStyle };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockEnd))];
    }
    case CSSPropertyID::CSSPropertyBorderBlockStartStyle: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopStyle, CSSPropertyID::CSSPropertyBorderRightStyle, CSSPropertyID::CSSPropertyBorderBottomStyle, CSSPropertyID::CSSPropertyBorderLeftStyle };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockStart))];
    }
    case CSSPropertyID::CSSPropertyBorderInlineEndStyle: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopStyle, CSSPropertyID::CSSPropertyBorderRightStyle, CSSPropertyID::CSSPropertyBorderBottomStyle, CSSPropertyID::CSSPropertyBorderLeftStyle };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineEnd))];
    }
    case CSSPropertyID::CSSPropertyBorderInlineStartStyle: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopStyle, CSSPropertyID::CSSPropertyBorderRightStyle, CSSPropertyID::CSSPropertyBorderBottomStyle, CSSPropertyID::CSSPropertyBorderLeftStyle };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineStart))];
    }
    case CSSPropertyID::CSSPropertyBorderBlockEndWidth: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopWidth, CSSPropertyID::CSSPropertyBorderRightWidth, CSSPropertyID::CSSPropertyBorderBottomWidth, CSSPropertyID::CSSPropertyBorderLeftWidth };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockEnd))];
    }
    case CSSPropertyID::CSSPropertyBorderBlockStartWidth: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopWidth, CSSPropertyID::CSSPropertyBorderRightWidth, CSSPropertyID::CSSPropertyBorderBottomWidth, CSSPropertyID::CSSPropertyBorderLeftWidth };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockStart))];
    }
    case CSSPropertyID::CSSPropertyBorderInlineEndWidth: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopWidth, CSSPropertyID::CSSPropertyBorderRightWidth, CSSPropertyID::CSSPropertyBorderBottomWidth, CSSPropertyID::CSSPropertyBorderLeftWidth };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineEnd))];
    }
    case CSSPropertyID::CSSPropertyBorderInlineStartWidth: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopWidth, CSSPropertyID::CSSPropertyBorderRightWidth, CSSPropertyID::CSSPropertyBorderBottomWidth, CSSPropertyID::CSSPropertyBorderLeftWidth };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineStart))];
    }
    case CSSPropertyID::CSSPropertyContainIntrinsicBlockSize: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyContainIntrinsicWidth, CSSPropertyID::CSSPropertyContainIntrinsicHeight };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Block))];
    }
    case CSSPropertyID::CSSPropertyContainIntrinsicInlineSize: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyContainIntrinsicWidth, CSSPropertyID::CSSPropertyContainIntrinsicHeight };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Inline))];
    }
    case CSSPropertyID::CSSPropertyCornerEndEndShape: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyCornerTopLeftShape, CSSPropertyID::CSSPropertyCornerTopRightShape, CSSPropertyID::CSSPropertyCornerBottomLeftShape, CSSPropertyID::CSSPropertyCornerBottomRightShape };
        return properties[static_cast<size_t>(mapCornerLogicalToPhysical(writingMode, LogicalBoxCorner::EndEnd))];
    }
    case CSSPropertyID::CSSPropertyCornerEndStartShape: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyCornerTopLeftShape, CSSPropertyID::CSSPropertyCornerTopRightShape, CSSPropertyID::CSSPropertyCornerBottomLeftShape, CSSPropertyID::CSSPropertyCornerBottomRightShape };
        return properties[static_cast<size_t>(mapCornerLogicalToPhysical(writingMode, LogicalBoxCorner::EndStart))];
    }
    case CSSPropertyID::CSSPropertyCornerStartEndShape: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyCornerTopLeftShape, CSSPropertyID::CSSPropertyCornerTopRightShape, CSSPropertyID::CSSPropertyCornerBottomLeftShape, CSSPropertyID::CSSPropertyCornerBottomRightShape };
        return properties[static_cast<size_t>(mapCornerLogicalToPhysical(writingMode, LogicalBoxCorner::StartEnd))];
    }
    case CSSPropertyID::CSSPropertyCornerStartStartShape: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyCornerTopLeftShape, CSSPropertyID::CSSPropertyCornerTopRightShape, CSSPropertyID::CSSPropertyCornerBottomLeftShape, CSSPropertyID::CSSPropertyCornerBottomRightShape };
        return properties[static_cast<size_t>(mapCornerLogicalToPhysical(writingMode, LogicalBoxCorner::StartStart))];
    }
    case CSSPropertyID::CSSPropertyInsetBlockEnd: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyTop, CSSPropertyID::CSSPropertyRight, CSSPropertyID::CSSPropertyBottom, CSSPropertyID::CSSPropertyLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockEnd))];
    }
    case CSSPropertyID::CSSPropertyInsetBlockStart: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyTop, CSSPropertyID::CSSPropertyRight, CSSPropertyID::CSSPropertyBottom, CSSPropertyID::CSSPropertyLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockStart))];
    }
    case CSSPropertyID::CSSPropertyInsetInlineEnd: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyTop, CSSPropertyID::CSSPropertyRight, CSSPropertyID::CSSPropertyBottom, CSSPropertyID::CSSPropertyLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineEnd))];
    }
    case CSSPropertyID::CSSPropertyInsetInlineStart: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyTop, CSSPropertyID::CSSPropertyRight, CSSPropertyID::CSSPropertyBottom, CSSPropertyID::CSSPropertyLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineStart))];
    }
    case CSSPropertyID::CSSPropertyMarginBlockEnd: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyMarginTop, CSSPropertyID::CSSPropertyMarginRight, CSSPropertyID::CSSPropertyMarginBottom, CSSPropertyID::CSSPropertyMarginLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockEnd))];
    }
    case CSSPropertyID::CSSPropertyMarginBlockStart: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyMarginTop, CSSPropertyID::CSSPropertyMarginRight, CSSPropertyID::CSSPropertyMarginBottom, CSSPropertyID::CSSPropertyMarginLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockStart))];
    }
    case CSSPropertyID::CSSPropertyMarginInlineEnd: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyMarginTop, CSSPropertyID::CSSPropertyMarginRight, CSSPropertyID::CSSPropertyMarginBottom, CSSPropertyID::CSSPropertyMarginLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineEnd))];
    }
    case CSSPropertyID::CSSPropertyMarginInlineStart: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyMarginTop, CSSPropertyID::CSSPropertyMarginRight, CSSPropertyID::CSSPropertyMarginBottom, CSSPropertyID::CSSPropertyMarginLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineStart))];
    }
    case CSSPropertyID::CSSPropertyMaxBlockSize: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyMaxWidth, CSSPropertyID::CSSPropertyMaxHeight };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Block))];
    }
    case CSSPropertyID::CSSPropertyMaxInlineSize: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyMaxWidth, CSSPropertyID::CSSPropertyMaxHeight };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Inline))];
    }
    case CSSPropertyID::CSSPropertyMinBlockSize: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyMinWidth, CSSPropertyID::CSSPropertyMinHeight };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Block))];
    }
    case CSSPropertyID::CSSPropertyMinInlineSize: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyMinWidth, CSSPropertyID::CSSPropertyMinHeight };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Inline))];
    }
    case CSSPropertyID::CSSPropertyOverflowBlock: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyOverflowX, CSSPropertyID::CSSPropertyOverflowY };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Block))];
    }
    case CSSPropertyID::CSSPropertyOverflowInline: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyOverflowX, CSSPropertyID::CSSPropertyOverflowY };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Inline))];
    }
    case CSSPropertyID::CSSPropertyOverscrollBehaviorBlock: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyOverscrollBehaviorX, CSSPropertyID::CSSPropertyOverscrollBehaviorY };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Block))];
    }
    case CSSPropertyID::CSSPropertyOverscrollBehaviorInline: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyOverscrollBehaviorX, CSSPropertyID::CSSPropertyOverscrollBehaviorY };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Inline))];
    }
    case CSSPropertyID::CSSPropertyPaddingBlockEnd: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyPaddingTop, CSSPropertyID::CSSPropertyPaddingRight, CSSPropertyID::CSSPropertyPaddingBottom, CSSPropertyID::CSSPropertyPaddingLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockEnd))];
    }
    case CSSPropertyID::CSSPropertyPaddingBlockStart: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyPaddingTop, CSSPropertyID::CSSPropertyPaddingRight, CSSPropertyID::CSSPropertyPaddingBottom, CSSPropertyID::CSSPropertyPaddingLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockStart))];
    }
    case CSSPropertyID::CSSPropertyPaddingInlineEnd: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyPaddingTop, CSSPropertyID::CSSPropertyPaddingRight, CSSPropertyID::CSSPropertyPaddingBottom, CSSPropertyID::CSSPropertyPaddingLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineEnd))];
    }
    case CSSPropertyID::CSSPropertyPaddingInlineStart: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyPaddingTop, CSSPropertyID::CSSPropertyPaddingRight, CSSPropertyID::CSSPropertyPaddingBottom, CSSPropertyID::CSSPropertyPaddingLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineStart))];
    }
    case CSSPropertyID::CSSPropertyScrollMarginBlockEnd: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollMarginTop, CSSPropertyID::CSSPropertyScrollMarginRight, CSSPropertyID::CSSPropertyScrollMarginBottom, CSSPropertyID::CSSPropertyScrollMarginLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockEnd))];
    }
    case CSSPropertyID::CSSPropertyScrollMarginBlockStart: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollMarginTop, CSSPropertyID::CSSPropertyScrollMarginRight, CSSPropertyID::CSSPropertyScrollMarginBottom, CSSPropertyID::CSSPropertyScrollMarginLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockStart))];
    }
    case CSSPropertyID::CSSPropertyScrollMarginInlineEnd: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollMarginTop, CSSPropertyID::CSSPropertyScrollMarginRight, CSSPropertyID::CSSPropertyScrollMarginBottom, CSSPropertyID::CSSPropertyScrollMarginLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineEnd))];
    }
    case CSSPropertyID::CSSPropertyScrollMarginInlineStart: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollMarginTop, CSSPropertyID::CSSPropertyScrollMarginRight, CSSPropertyID::CSSPropertyScrollMarginBottom, CSSPropertyID::CSSPropertyScrollMarginLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineStart))];
    }
    case CSSPropertyID::CSSPropertyScrollPaddingBlockEnd: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollPaddingTop, CSSPropertyID::CSSPropertyScrollPaddingRight, CSSPropertyID::CSSPropertyScrollPaddingBottom, CSSPropertyID::CSSPropertyScrollPaddingLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockEnd))];
    }
    case CSSPropertyID::CSSPropertyScrollPaddingBlockStart: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollPaddingTop, CSSPropertyID::CSSPropertyScrollPaddingRight, CSSPropertyID::CSSPropertyScrollPaddingBottom, CSSPropertyID::CSSPropertyScrollPaddingLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockStart))];
    }
    case CSSPropertyID::CSSPropertyScrollPaddingInlineEnd: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollPaddingTop, CSSPropertyID::CSSPropertyScrollPaddingRight, CSSPropertyID::CSSPropertyScrollPaddingBottom, CSSPropertyID::CSSPropertyScrollPaddingLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineEnd))];
    }
    case CSSPropertyID::CSSPropertyScrollPaddingInlineStart: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollPaddingTop, CSSPropertyID::CSSPropertyScrollPaddingRight, CSSPropertyID::CSSPropertyScrollPaddingBottom, CSSPropertyID::CSSPropertyScrollPaddingLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineStart))];
    }
    case CSSPropertyID::CSSPropertyBlockSize: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyWidth, CSSPropertyID::CSSPropertyHeight };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Block))];
    }
    case CSSPropertyID::CSSPropertyInlineSize: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyWidth, CSSPropertyID::CSSPropertyHeight };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Inline))];
    }
    default:
        return id;
    }
}

CSSPropertyID CSSProperty::unresolvePhysicalProperty(CSSPropertyID id, WritingMode writingMode)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBorderBottomColor: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartColor, CSSPropertyID::CSSPropertyBorderInlineEndColor, CSSPropertyID::CSSPropertyBorderBlockEndColor, CSSPropertyID::CSSPropertyBorderInlineStartColor };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Bottom))];
    }
    case CSSPropertyID::CSSPropertyBorderLeftColor: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartColor, CSSPropertyID::CSSPropertyBorderInlineEndColor, CSSPropertyID::CSSPropertyBorderBlockEndColor, CSSPropertyID::CSSPropertyBorderInlineStartColor };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Left))];
    }
    case CSSPropertyID::CSSPropertyBorderRightColor: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartColor, CSSPropertyID::CSSPropertyBorderInlineEndColor, CSSPropertyID::CSSPropertyBorderBlockEndColor, CSSPropertyID::CSSPropertyBorderInlineStartColor };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Right))];
    }
    case CSSPropertyID::CSSPropertyBorderTopColor: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartColor, CSSPropertyID::CSSPropertyBorderInlineEndColor, CSSPropertyID::CSSPropertyBorderBlockEndColor, CSSPropertyID::CSSPropertyBorderInlineStartColor };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Top))];
    }
    case CSSPropertyID::CSSPropertyBorderBottomLeftRadius: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderStartStartRadius, CSSPropertyID::CSSPropertyBorderStartEndRadius, CSSPropertyID::CSSPropertyBorderEndStartRadius, CSSPropertyID::CSSPropertyBorderEndEndRadius };
        return properties[static_cast<size_t>(mapCornerPhysicalToLogical(writingMode, BoxCorner::BottomLeft))];
    }
    case CSSPropertyID::CSSPropertyBorderBottomRightRadius: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderStartStartRadius, CSSPropertyID::CSSPropertyBorderStartEndRadius, CSSPropertyID::CSSPropertyBorderEndStartRadius, CSSPropertyID::CSSPropertyBorderEndEndRadius };
        return properties[static_cast<size_t>(mapCornerPhysicalToLogical(writingMode, BoxCorner::BottomRight))];
    }
    case CSSPropertyID::CSSPropertyBorderTopLeftRadius: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderStartStartRadius, CSSPropertyID::CSSPropertyBorderStartEndRadius, CSSPropertyID::CSSPropertyBorderEndStartRadius, CSSPropertyID::CSSPropertyBorderEndEndRadius };
        return properties[static_cast<size_t>(mapCornerPhysicalToLogical(writingMode, BoxCorner::TopLeft))];
    }
    case CSSPropertyID::CSSPropertyBorderTopRightRadius: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderStartStartRadius, CSSPropertyID::CSSPropertyBorderStartEndRadius, CSSPropertyID::CSSPropertyBorderEndStartRadius, CSSPropertyID::CSSPropertyBorderEndEndRadius };
        return properties[static_cast<size_t>(mapCornerPhysicalToLogical(writingMode, BoxCorner::TopRight))];
    }
    case CSSPropertyID::CSSPropertyBorderBottomStyle: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartStyle, CSSPropertyID::CSSPropertyBorderInlineEndStyle, CSSPropertyID::CSSPropertyBorderBlockEndStyle, CSSPropertyID::CSSPropertyBorderInlineStartStyle };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Bottom))];
    }
    case CSSPropertyID::CSSPropertyBorderLeftStyle: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartStyle, CSSPropertyID::CSSPropertyBorderInlineEndStyle, CSSPropertyID::CSSPropertyBorderBlockEndStyle, CSSPropertyID::CSSPropertyBorderInlineStartStyle };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Left))];
    }
    case CSSPropertyID::CSSPropertyBorderRightStyle: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartStyle, CSSPropertyID::CSSPropertyBorderInlineEndStyle, CSSPropertyID::CSSPropertyBorderBlockEndStyle, CSSPropertyID::CSSPropertyBorderInlineStartStyle };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Right))];
    }
    case CSSPropertyID::CSSPropertyBorderTopStyle: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartStyle, CSSPropertyID::CSSPropertyBorderInlineEndStyle, CSSPropertyID::CSSPropertyBorderBlockEndStyle, CSSPropertyID::CSSPropertyBorderInlineStartStyle };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Top))];
    }
    case CSSPropertyID::CSSPropertyBorderBottomWidth: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartWidth, CSSPropertyID::CSSPropertyBorderInlineEndWidth, CSSPropertyID::CSSPropertyBorderBlockEndWidth, CSSPropertyID::CSSPropertyBorderInlineStartWidth };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Bottom))];
    }
    case CSSPropertyID::CSSPropertyBorderLeftWidth: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartWidth, CSSPropertyID::CSSPropertyBorderInlineEndWidth, CSSPropertyID::CSSPropertyBorderBlockEndWidth, CSSPropertyID::CSSPropertyBorderInlineStartWidth };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Left))];
    }
    case CSSPropertyID::CSSPropertyBorderRightWidth: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartWidth, CSSPropertyID::CSSPropertyBorderInlineEndWidth, CSSPropertyID::CSSPropertyBorderBlockEndWidth, CSSPropertyID::CSSPropertyBorderInlineStartWidth };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Right))];
    }
    case CSSPropertyID::CSSPropertyBorderTopWidth: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartWidth, CSSPropertyID::CSSPropertyBorderInlineEndWidth, CSSPropertyID::CSSPropertyBorderBlockEndWidth, CSSPropertyID::CSSPropertyBorderInlineStartWidth };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Top))];
    }
    case CSSPropertyID::CSSPropertyContainIntrinsicWidth: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyContainIntrinsicInlineSize, CSSPropertyID::CSSPropertyContainIntrinsicBlockSize };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Horizontal))];
    }
    case CSSPropertyID::CSSPropertyContainIntrinsicHeight: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyContainIntrinsicInlineSize, CSSPropertyID::CSSPropertyContainIntrinsicBlockSize };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Vertical))];
    }
    case CSSPropertyID::CSSPropertyCornerBottomLeftShape: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyCornerStartStartShape, CSSPropertyID::CSSPropertyCornerStartEndShape, CSSPropertyID::CSSPropertyCornerEndStartShape, CSSPropertyID::CSSPropertyCornerEndEndShape };
        return properties[static_cast<size_t>(mapCornerPhysicalToLogical(writingMode, BoxCorner::BottomLeft))];
    }
    case CSSPropertyID::CSSPropertyCornerBottomRightShape: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyCornerStartStartShape, CSSPropertyID::CSSPropertyCornerStartEndShape, CSSPropertyID::CSSPropertyCornerEndStartShape, CSSPropertyID::CSSPropertyCornerEndEndShape };
        return properties[static_cast<size_t>(mapCornerPhysicalToLogical(writingMode, BoxCorner::BottomRight))];
    }
    case CSSPropertyID::CSSPropertyCornerTopLeftShape: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyCornerStartStartShape, CSSPropertyID::CSSPropertyCornerStartEndShape, CSSPropertyID::CSSPropertyCornerEndStartShape, CSSPropertyID::CSSPropertyCornerEndEndShape };
        return properties[static_cast<size_t>(mapCornerPhysicalToLogical(writingMode, BoxCorner::TopLeft))];
    }
    case CSSPropertyID::CSSPropertyCornerTopRightShape: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyCornerStartStartShape, CSSPropertyID::CSSPropertyCornerStartEndShape, CSSPropertyID::CSSPropertyCornerEndStartShape, CSSPropertyID::CSSPropertyCornerEndEndShape };
        return properties[static_cast<size_t>(mapCornerPhysicalToLogical(writingMode, BoxCorner::TopRight))];
    }
    case CSSPropertyID::CSSPropertyBottom: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyInsetBlockStart, CSSPropertyID::CSSPropertyInsetInlineEnd, CSSPropertyID::CSSPropertyInsetBlockEnd, CSSPropertyID::CSSPropertyInsetInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Bottom))];
    }
    case CSSPropertyID::CSSPropertyLeft: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyInsetBlockStart, CSSPropertyID::CSSPropertyInsetInlineEnd, CSSPropertyID::CSSPropertyInsetBlockEnd, CSSPropertyID::CSSPropertyInsetInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Left))];
    }
    case CSSPropertyID::CSSPropertyRight: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyInsetBlockStart, CSSPropertyID::CSSPropertyInsetInlineEnd, CSSPropertyID::CSSPropertyInsetBlockEnd, CSSPropertyID::CSSPropertyInsetInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Right))];
    }
    case CSSPropertyID::CSSPropertyTop: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyInsetBlockStart, CSSPropertyID::CSSPropertyInsetInlineEnd, CSSPropertyID::CSSPropertyInsetBlockEnd, CSSPropertyID::CSSPropertyInsetInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Top))];
    }
    case CSSPropertyID::CSSPropertyMarginBottom: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyMarginBlockStart, CSSPropertyID::CSSPropertyMarginInlineEnd, CSSPropertyID::CSSPropertyMarginBlockEnd, CSSPropertyID::CSSPropertyMarginInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Bottom))];
    }
    case CSSPropertyID::CSSPropertyMarginLeft: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyMarginBlockStart, CSSPropertyID::CSSPropertyMarginInlineEnd, CSSPropertyID::CSSPropertyMarginBlockEnd, CSSPropertyID::CSSPropertyMarginInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Left))];
    }
    case CSSPropertyID::CSSPropertyMarginRight: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyMarginBlockStart, CSSPropertyID::CSSPropertyMarginInlineEnd, CSSPropertyID::CSSPropertyMarginBlockEnd, CSSPropertyID::CSSPropertyMarginInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Right))];
    }
    case CSSPropertyID::CSSPropertyMarginTop: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyMarginBlockStart, CSSPropertyID::CSSPropertyMarginInlineEnd, CSSPropertyID::CSSPropertyMarginBlockEnd, CSSPropertyID::CSSPropertyMarginInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Top))];
    }
    case CSSPropertyID::CSSPropertyMaxWidth: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyMaxInlineSize, CSSPropertyID::CSSPropertyMaxBlockSize };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Horizontal))];
    }
    case CSSPropertyID::CSSPropertyMaxHeight: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyMaxInlineSize, CSSPropertyID::CSSPropertyMaxBlockSize };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Vertical))];
    }
    case CSSPropertyID::CSSPropertyMinWidth: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyMinInlineSize, CSSPropertyID::CSSPropertyMinBlockSize };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Horizontal))];
    }
    case CSSPropertyID::CSSPropertyMinHeight: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyMinInlineSize, CSSPropertyID::CSSPropertyMinBlockSize };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Vertical))];
    }
    case CSSPropertyID::CSSPropertyOverflowX: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyOverflowInline, CSSPropertyID::CSSPropertyOverflowBlock };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Horizontal))];
    }
    case CSSPropertyID::CSSPropertyOverflowY: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyOverflowInline, CSSPropertyID::CSSPropertyOverflowBlock };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Vertical))];
    }
    case CSSPropertyID::CSSPropertyOverscrollBehaviorX: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyOverscrollBehaviorInline, CSSPropertyID::CSSPropertyOverscrollBehaviorBlock };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Horizontal))];
    }
    case CSSPropertyID::CSSPropertyOverscrollBehaviorY: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyOverscrollBehaviorInline, CSSPropertyID::CSSPropertyOverscrollBehaviorBlock };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Vertical))];
    }
    case CSSPropertyID::CSSPropertyPaddingBottom: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyPaddingBlockStart, CSSPropertyID::CSSPropertyPaddingInlineEnd, CSSPropertyID::CSSPropertyPaddingBlockEnd, CSSPropertyID::CSSPropertyPaddingInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Bottom))];
    }
    case CSSPropertyID::CSSPropertyPaddingLeft: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyPaddingBlockStart, CSSPropertyID::CSSPropertyPaddingInlineEnd, CSSPropertyID::CSSPropertyPaddingBlockEnd, CSSPropertyID::CSSPropertyPaddingInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Left))];
    }
    case CSSPropertyID::CSSPropertyPaddingRight: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyPaddingBlockStart, CSSPropertyID::CSSPropertyPaddingInlineEnd, CSSPropertyID::CSSPropertyPaddingBlockEnd, CSSPropertyID::CSSPropertyPaddingInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Right))];
    }
    case CSSPropertyID::CSSPropertyPaddingTop: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyPaddingBlockStart, CSSPropertyID::CSSPropertyPaddingInlineEnd, CSSPropertyID::CSSPropertyPaddingBlockEnd, CSSPropertyID::CSSPropertyPaddingInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Top))];
    }
    case CSSPropertyID::CSSPropertyScrollMarginBottom: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollMarginBlockStart, CSSPropertyID::CSSPropertyScrollMarginInlineEnd, CSSPropertyID::CSSPropertyScrollMarginBlockEnd, CSSPropertyID::CSSPropertyScrollMarginInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Bottom))];
    }
    case CSSPropertyID::CSSPropertyScrollMarginLeft: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollMarginBlockStart, CSSPropertyID::CSSPropertyScrollMarginInlineEnd, CSSPropertyID::CSSPropertyScrollMarginBlockEnd, CSSPropertyID::CSSPropertyScrollMarginInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Left))];
    }
    case CSSPropertyID::CSSPropertyScrollMarginRight: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollMarginBlockStart, CSSPropertyID::CSSPropertyScrollMarginInlineEnd, CSSPropertyID::CSSPropertyScrollMarginBlockEnd, CSSPropertyID::CSSPropertyScrollMarginInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Right))];
    }
    case CSSPropertyID::CSSPropertyScrollMarginTop: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollMarginBlockStart, CSSPropertyID::CSSPropertyScrollMarginInlineEnd, CSSPropertyID::CSSPropertyScrollMarginBlockEnd, CSSPropertyID::CSSPropertyScrollMarginInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Top))];
    }
    case CSSPropertyID::CSSPropertyScrollPaddingBottom: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollPaddingBlockStart, CSSPropertyID::CSSPropertyScrollPaddingInlineEnd, CSSPropertyID::CSSPropertyScrollPaddingBlockEnd, CSSPropertyID::CSSPropertyScrollPaddingInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Bottom))];
    }
    case CSSPropertyID::CSSPropertyScrollPaddingLeft: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollPaddingBlockStart, CSSPropertyID::CSSPropertyScrollPaddingInlineEnd, CSSPropertyID::CSSPropertyScrollPaddingBlockEnd, CSSPropertyID::CSSPropertyScrollPaddingInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Left))];
    }
    case CSSPropertyID::CSSPropertyScrollPaddingRight: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollPaddingBlockStart, CSSPropertyID::CSSPropertyScrollPaddingInlineEnd, CSSPropertyID::CSSPropertyScrollPaddingBlockEnd, CSSPropertyID::CSSPropertyScrollPaddingInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Right))];
    }
    case CSSPropertyID::CSSPropertyScrollPaddingTop: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollPaddingBlockStart, CSSPropertyID::CSSPropertyScrollPaddingInlineEnd, CSSPropertyID::CSSPropertyScrollPaddingBlockEnd, CSSPropertyID::CSSPropertyScrollPaddingInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Top))];
    }
    case CSSPropertyID::CSSPropertyWidth: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyInlineSize, CSSPropertyID::CSSPropertyBlockSize };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Horizontal))];
    }
    case CSSPropertyID::CSSPropertyHeight: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyInlineSize, CSSPropertyID::CSSPropertyBlockSize };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Vertical))];
    }
    default:
        return id;
    }
}

bool CSSProperty::isDescriptorOnly(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyAdditiveSymbols:
    case CSSPropertyID::CSSPropertyFallback:
    case CSSPropertyID::CSSPropertyNegative:
    case CSSPropertyID::CSSPropertyPad:
    case CSSPropertyID::CSSPropertyPrefix:
    case CSSPropertyID::CSSPropertyRange:
    case CSSPropertyID::CSSPropertySuffix:
    case CSSPropertyID::CSSPropertySymbols:
    case CSSPropertyID::CSSPropertySystem:
    case CSSPropertyID::CSSPropertyFontDisplay:
    case CSSPropertyID::CSSPropertySizeAdjust:
    case CSSPropertyID::CSSPropertySrc:
    case CSSPropertyID::CSSPropertyUnicodeRange:
    case CSSPropertyID::CSSPropertyBasePalette:
    case CSSPropertyID::CSSPropertyOverrideColors:
    case CSSPropertyID::CSSPropertySize:
    case CSSPropertyID::CSSPropertyInherits:
    case CSSPropertyID::CSSPropertyInitialValue:
    case CSSPropertyID::CSSPropertySyntax:
    case CSSPropertyID::CSSPropertyNavigation:
    case CSSPropertyID::CSSPropertyTypes:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::acceptsQuirkyColor(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBackgroundColor:
    case CSSPropertyID::CSSPropertyColor:
    case CSSPropertyID::CSSPropertyBorderBottomColor:
    case CSSPropertyID::CSSPropertyBorderLeftColor:
    case CSSPropertyID::CSSPropertyBorderRightColor:
    case CSSPropertyID::CSSPropertyBorderTopColor:
    case CSSPropertyID::CSSPropertyBorderColor:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::acceptsQuirkyLength(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyFontSize:
    case CSSPropertyID::CSSPropertyLetterSpacing:
    case CSSPropertyID::CSSPropertyClip:
    case CSSPropertyID::CSSPropertyTextIndent:
    case CSSPropertyID::CSSPropertyVerticalAlign:
    case CSSPropertyID::CSSPropertyWebkitFontSizeDelta:
    case CSSPropertyID::CSSPropertyWebkitMarqueeIncrement:
    case CSSPropertyID::CSSPropertyWordSpacing:
    case CSSPropertyID::CSSPropertyBorderBottomWidth:
    case CSSPropertyID::CSSPropertyBorderLeftWidth:
    case CSSPropertyID::CSSPropertyBorderRightWidth:
    case CSSPropertyID::CSSPropertyBorderTopWidth:
    case CSSPropertyID::CSSPropertyBottom:
    case CSSPropertyID::CSSPropertyHeight:
    case CSSPropertyID::CSSPropertyLeft:
    case CSSPropertyID::CSSPropertyMarginBottom:
    case CSSPropertyID::CSSPropertyMarginLeft:
    case CSSPropertyID::CSSPropertyMarginRight:
    case CSSPropertyID::CSSPropertyMarginTop:
    case CSSPropertyID::CSSPropertyMaxHeight:
    case CSSPropertyID::CSSPropertyMaxWidth:
    case CSSPropertyID::CSSPropertyMinHeight:
    case CSSPropertyID::CSSPropertyMinWidth:
    case CSSPropertyID::CSSPropertyPaddingBottom:
    case CSSPropertyID::CSSPropertyPaddingLeft:
    case CSSPropertyID::CSSPropertyPaddingRight:
    case CSSPropertyID::CSSPropertyPaddingTop:
    case CSSPropertyID::CSSPropertyRight:
    case CSSPropertyID::CSSPropertyTop:
    case CSSPropertyID::CSSPropertyWidth:
    case CSSPropertyID::CSSPropertyBackgroundPosition:
    case CSSPropertyID::CSSPropertyBorderSpacing:
    case CSSPropertyID::CSSPropertyBorderWidth:
    case CSSPropertyID::CSSPropertyMargin:
    case CSSPropertyID::CSSPropertyPadding:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::acceptsQuirkyAngle(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyGlyphOrientationHorizontal:
    case CSSPropertyID::CSSPropertyGlyphOrientationVertical:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::animationUsesNonAdditiveOrCumulativeInterpolation(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyStrokeDasharray:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::animationUsesNonNormalizedDiscreteInterpolation(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyDisplay:
    case CSSPropertyID::CSSPropertyContentVisibility:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::animationIsAccelerated(CSSPropertyID id, [[maybe_unused]] const Settings& settings)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBackdropFilter:
        return true;
    case CSSPropertyID::CSSPropertyFilter:
        return true;
    case CSSPropertyID::CSSPropertyOpacity:
        return true;
    case CSSPropertyID::CSSPropertyRotate:
        return true;
    case CSSPropertyID::CSSPropertyScale:
        return true;
    case CSSPropertyID::CSSPropertyTransform:
        return true;
    case CSSPropertyID::CSSPropertyTranslate:
        return true;
    default:
        return false;
    }
}

std::span<const CSSPropertyID> CSSProperty::allAcceleratedAnimationProperties([[maybe_unused]] const Settings& settings)
{
    static constexpr std::array propertiesExcludingThreadedOnly {
        CSSPropertyID::CSSPropertyBackdropFilter,
        CSSPropertyID::CSSPropertyFilter,
        CSSPropertyID::CSSPropertyOpacity,
        CSSPropertyID::CSSPropertyRotate,
        CSSPropertyID::CSSPropertyScale,
        CSSPropertyID::CSSPropertyTransform,
        CSSPropertyID::CSSPropertyTranslate,
    };
    return std::span<const CSSPropertyID> { propertiesExcludingThreadedOnly };
}

CSSPropertySettings::CSSPropertySettings(const Settings& settings)
    : accentColorEnabled { settings.accentColorEnabled() }
    , colorFilterEnabled { settings.colorFilterEnabled() }
    , crossDocumentViewTransitionsEnabled { settings.crossDocumentViewTransitionsEnabled() }
    , cssAnchorPositioningEnabled { settings.cssAnchorPositioningEnabled() }
    , cssAnchorPositioningPositionVisibilityEnabled { settings.cssAnchorPositioningPositionVisibilityEnabled() }
    , cssCornerShapeEnabled { settings.cssCornerShapeEnabled() }
    , cssDPropertyEnabled { settings.cssDPropertyEnabled() }
    , cssFieldSizingEnabled { settings.cssFieldSizingEnabled() }
    , cssFontVariantEmojiEnabled { settings.cssFontVariantEmojiEnabled() }
    , cssInputSecurityEnabled { settings.cssInputSecurityEnabled() }
    , cssLineClampEnabled { settings.cssLineClampEnabled() }
    , cssLineFitEdgeEnabled { settings.cssLineFitEdgeEnabled() }
    , cssRhythmicSizingEnabled { settings.cssRhythmicSizingEnabled() }
    , cssRubyAlignEnabled { settings.cssRubyAlignEnabled() }
    , cssRubyOverhangEnabled { settings.cssRubyOverhangEnabled() }
    , cssScrollAnchoringEnabled { settings.cssScrollAnchoringEnabled() }
    , cssScrollbarColorEnabled { settings.cssScrollbarColorEnabled() }
    , cssScrollbarGutterEnabled { settings.cssScrollbarGutterEnabled() }
    , cssScrollbarWidthEnabled { settings.cssScrollbarWidthEnabled() }
    , cssTextAutospaceEnabled { settings.cssTextAutospaceEnabled() }
    , cssTextBoxTrimEnabled { settings.cssTextBoxTrimEnabled() }
    , cssTextGroupAlignEnabled { settings.cssTextGroupAlignEnabled() }
    , cssTextJustifyEnabled { settings.cssTextJustifyEnabled() }
    , cssTextSpacingTrimEnabled { settings.cssTextSpacingTrimEnabled() }
    , cssUnprefixedBackdropFilterEnabled { settings.cssUnprefixedBackdropFilterEnabled() }
    , overscrollBehaviorEnabled { settings.overscrollBehaviorEnabled() }
    , scrollDrivenAnimationsEnabled { settings.scrollDrivenAnimationsEnabled() }
    , supportHDRDisplayEnabled { settings.supportHDRDisplayEnabled() }
    , viewTransitionClassesEnabled { settings.viewTransitionClassesEnabled() }
    , viewTransitionsEnabled { settings.viewTransitionsEnabled() }
{
}

bool operator==(const CSSPropertySettings& a, const CSSPropertySettings& b)
{
    return a.accentColorEnabled == b.accentColorEnabled
        && a.colorFilterEnabled == b.colorFilterEnabled
        && a.crossDocumentViewTransitionsEnabled == b.crossDocumentViewTransitionsEnabled
        && a.cssAnchorPositioningEnabled == b.cssAnchorPositioningEnabled
        && a.cssAnchorPositioningPositionVisibilityEnabled == b.cssAnchorPositioningPositionVisibilityEnabled
        && a.cssCornerShapeEnabled == b.cssCornerShapeEnabled
        && a.cssDPropertyEnabled == b.cssDPropertyEnabled
        && a.cssFieldSizingEnabled == b.cssFieldSizingEnabled
        && a.cssFontVariantEmojiEnabled == b.cssFontVariantEmojiEnabled
        && a.cssInputSecurityEnabled == b.cssInputSecurityEnabled
        && a.cssLineClampEnabled == b.cssLineClampEnabled
        && a.cssLineFitEdgeEnabled == b.cssLineFitEdgeEnabled
        && a.cssRhythmicSizingEnabled == b.cssRhythmicSizingEnabled
        && a.cssRubyAlignEnabled == b.cssRubyAlignEnabled
        && a.cssRubyOverhangEnabled == b.cssRubyOverhangEnabled
        && a.cssScrollAnchoringEnabled == b.cssScrollAnchoringEnabled
        && a.cssScrollbarColorEnabled == b.cssScrollbarColorEnabled
        && a.cssScrollbarGutterEnabled == b.cssScrollbarGutterEnabled
        && a.cssScrollbarWidthEnabled == b.cssScrollbarWidthEnabled
        && a.cssTextAutospaceEnabled == b.cssTextAutospaceEnabled
        && a.cssTextBoxTrimEnabled == b.cssTextBoxTrimEnabled
        && a.cssTextGroupAlignEnabled == b.cssTextGroupAlignEnabled
        && a.cssTextJustifyEnabled == b.cssTextJustifyEnabled
        && a.cssTextSpacingTrimEnabled == b.cssTextSpacingTrimEnabled
        && a.cssUnprefixedBackdropFilterEnabled == b.cssUnprefixedBackdropFilterEnabled
        && a.overscrollBehaviorEnabled == b.overscrollBehaviorEnabled
        && a.scrollDrivenAnimationsEnabled == b.scrollDrivenAnimationsEnabled
        && a.supportHDRDisplayEnabled == b.supportHDRDisplayEnabled
        && a.viewTransitionClassesEnabled == b.viewTransitionClassesEnabled
        && a.viewTransitionsEnabled == b.viewTransitionsEnabled;
}

void add(Hasher& hasher, const CSSPropertySettings& settings)
{
    uint64_t bits = settings.accentColorEnabled << 0
        | settings.colorFilterEnabled << 1
        | settings.crossDocumentViewTransitionsEnabled << 2
        | settings.cssAnchorPositioningEnabled << 3
        | settings.cssAnchorPositioningPositionVisibilityEnabled << 4
        | settings.cssCornerShapeEnabled << 5
        | settings.cssDPropertyEnabled << 6
        | settings.cssFieldSizingEnabled << 7
        | settings.cssFontVariantEmojiEnabled << 8
        | settings.cssInputSecurityEnabled << 9
        | settings.cssLineClampEnabled << 10
        | settings.cssLineFitEdgeEnabled << 11
        | settings.cssRhythmicSizingEnabled << 12
        | settings.cssRubyAlignEnabled << 13
        | settings.cssRubyOverhangEnabled << 14
        | settings.cssScrollAnchoringEnabled << 15
        | settings.cssScrollbarColorEnabled << 16
        | settings.cssScrollbarGutterEnabled << 17
        | settings.cssScrollbarWidthEnabled << 18
        | settings.cssTextAutospaceEnabled << 19
        | settings.cssTextBoxTrimEnabled << 20
        | settings.cssTextGroupAlignEnabled << 21
        | settings.cssTextJustifyEnabled << 22
        | settings.cssTextSpacingTrimEnabled << 23
        | settings.cssUnprefixedBackdropFilterEnabled << 24
        | settings.overscrollBehaviorEnabled << 25
        | settings.scrollDrivenAnimationsEnabled << 26
        | settings.supportHDRDisplayEnabled << 27
        | settings.viewTransitionClassesEnabled << 28
        | settings.viewTransitionsEnabled << 29;
    add(hasher, bits);
}


TextStream& operator<<(TextStream& stream, CSSPropertyID property)
{
    return stream << nameLiteral(property);
}

} // namespace WebCore

WTF_ALLOW_UNSAFE_BUFFER_USAGE_END
IGNORE_WARNINGS_END
