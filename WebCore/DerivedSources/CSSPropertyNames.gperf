%{
// This file is automatically generated from CSSProperties.json by the process-css-properties.py script. Do not edit it.

#include "config.h"
#include "CSSPropertyNames.h"

#include "BoxSides.h"
#include "CSSProperty.h"
#include "Settings.h"
#include <string.h>
#include <wtf/ASCIICType.h>
#include <wtf/Hasher.h>
#include <wtf/text/AtomString.h>
#include <wtf/text/TextStream.h>


IGNORE_WARNINGS_BEGIN("implicit-fallthrough")
WTF_ALLOW_UNSAFE_BUFFER_USAGE_BEGIN

// Older versions of gperf like to use the `register` keyword.
#define register

namespace WebCore {

static_assert(cssPropertyIDEnumValueCount <= (std::numeric_limits<uint16_t>::max() + 1), "CSSPropertyID should fit into uint16_t.");

const std::array<CSSPropertyID, 447> computedPropertyIDs {
    CSSPropertyID::CSSPropertyAccentColor,
    CSSPropertyID::CSSPropertyAlignContent,
    CSSPropertyID::CSSPropertyAlignItems,
    CSSPropertyID::CSSPropertyAlignSelf,
    CSSPropertyID::CSSPropertyAlignmentBaseline,
    CSSPropertyID::CSSPropertyAnchorName,
    CSSPropertyID::CSSPropertyAnchorScope,
    CSSPropertyID::CSSPropertyAnimationComposition,
    CSSPropertyID::CSSPropertyAnimationDelay,
    CSSPropertyID::CSSPropertyAnimationDirection,
    CSSPropertyID::CSSPropertyAnimationDuration,
    CSSPropertyID::CSSPropertyAnimationFillMode,
    CSSPropertyID::CSSPropertyAnimationIterationCount,
    CSSPropertyID::CSSPropertyAnimationName,
    CSSPropertyID::CSSPropertyAnimationPlayState,
    CSSPropertyID::CSSPropertyAnimationRangeEnd,
    CSSPropertyID::CSSPropertyAnimationRangeStart,
    CSSPropertyID::CSSPropertyAnimationTimeline,
    CSSPropertyID::CSSPropertyAnimationTimingFunction,
    CSSPropertyID::CSSPropertyAppearance,
    CSSPropertyID::CSSPropertyAspectRatio,
    CSSPropertyID::CSSPropertyBackdropFilter,
    CSSPropertyID::CSSPropertyBackfaceVisibility,
    CSSPropertyID::CSSPropertyBackgroundAttachment,
    CSSPropertyID::CSSPropertyBackgroundBlendMode,
    CSSPropertyID::CSSPropertyBackgroundClip,
    CSSPropertyID::CSSPropertyBackgroundColor,
    CSSPropertyID::CSSPropertyBackgroundImage,
    CSSPropertyID::CSSPropertyBackgroundOrigin,
    CSSPropertyID::CSSPropertyBackgroundPositionX,
    CSSPropertyID::CSSPropertyBackgroundPositionY,
    CSSPropertyID::CSSPropertyBackgroundRepeat,
    CSSPropertyID::CSSPropertyBackgroundSize,
    CSSPropertyID::CSSPropertyBaselineShift,
    CSSPropertyID::CSSPropertyBlockEllipsis,
    CSSPropertyID::CSSPropertyBlockSize,
    CSSPropertyID::CSSPropertyBlockStepAlign,
    CSSPropertyID::CSSPropertyBlockStepInsert,
    CSSPropertyID::CSSPropertyBlockStepRound,
    CSSPropertyID::CSSPropertyBlockStepSize,
    CSSPropertyID::CSSPropertyBorderBlockEndColor,
    CSSPropertyID::CSSPropertyBorderBlockEndStyle,
    CSSPropertyID::CSSPropertyBorderBlockEndWidth,
    CSSPropertyID::CSSPropertyBorderBlockStartColor,
    CSSPropertyID::CSSPropertyBorderBlockStartStyle,
    CSSPropertyID::CSSPropertyBorderBlockStartWidth,
    CSSPropertyID::CSSPropertyBorderBottomColor,
    CSSPropertyID::CSSPropertyBorderBottomLeftRadius,
    CSSPropertyID::CSSPropertyBorderBottomRightRadius,
    CSSPropertyID::CSSPropertyBorderBottomStyle,
    CSSPropertyID::CSSPropertyBorderBottomWidth,
    CSSPropertyID::CSSPropertyBorderCollapse,
    CSSPropertyID::CSSPropertyBorderEndEndRadius,
    CSSPropertyID::CSSPropertyBorderEndStartRadius,
    CSSPropertyID::CSSPropertyBorderImageOutset,
    CSSPropertyID::CSSPropertyBorderImageRepeat,
    CSSPropertyID::CSSPropertyBorderImageSlice,
    CSSPropertyID::CSSPropertyBorderImageSource,
    CSSPropertyID::CSSPropertyBorderImageWidth,
    CSSPropertyID::CSSPropertyBorderInlineEndColor,
    CSSPropertyID::CSSPropertyBorderInlineEndStyle,
    CSSPropertyID::CSSPropertyBorderInlineEndWidth,
    CSSPropertyID::CSSPropertyBorderInlineStartColor,
    CSSPropertyID::CSSPropertyBorderInlineStartStyle,
    CSSPropertyID::CSSPropertyBorderInlineStartWidth,
    CSSPropertyID::CSSPropertyBorderLeftColor,
    CSSPropertyID::CSSPropertyBorderLeftStyle,
    CSSPropertyID::CSSPropertyBorderLeftWidth,
    CSSPropertyID::CSSPropertyBorderRightColor,
    CSSPropertyID::CSSPropertyBorderRightStyle,
    CSSPropertyID::CSSPropertyBorderRightWidth,
    CSSPropertyID::CSSPropertyBorderStartEndRadius,
    CSSPropertyID::CSSPropertyBorderStartStartRadius,
    CSSPropertyID::CSSPropertyBorderTopColor,
    CSSPropertyID::CSSPropertyBorderTopLeftRadius,
    CSSPropertyID::CSSPropertyBorderTopRightRadius,
    CSSPropertyID::CSSPropertyBorderTopStyle,
    CSSPropertyID::CSSPropertyBorderTopWidth,
    CSSPropertyID::CSSPropertyBottom,
    CSSPropertyID::CSSPropertyBoxShadow,
    CSSPropertyID::CSSPropertyBoxSizing,
    CSSPropertyID::CSSPropertyBreakAfter,
    CSSPropertyID::CSSPropertyBreakBefore,
    CSSPropertyID::CSSPropertyBreakInside,
    CSSPropertyID::CSSPropertyBufferedRendering,
    CSSPropertyID::CSSPropertyCaptionSide,
    CSSPropertyID::CSSPropertyCaretColor,
    CSSPropertyID::CSSPropertyClear,
    CSSPropertyID::CSSPropertyClip,
    CSSPropertyID::CSSPropertyClipPath,
    CSSPropertyID::CSSPropertyClipRule,
    CSSPropertyID::CSSPropertyColor,
    CSSPropertyID::CSSPropertyColorInterpolation,
    CSSPropertyID::CSSPropertyColorInterpolationFilters,
    CSSPropertyID::CSSPropertyColorScheme,
    CSSPropertyID::CSSPropertyColumnCount,
    CSSPropertyID::CSSPropertyColumnFill,
    CSSPropertyID::CSSPropertyColumnGap,
    CSSPropertyID::CSSPropertyColumnRuleColor,
    CSSPropertyID::CSSPropertyColumnRuleStyle,
    CSSPropertyID::CSSPropertyColumnRuleWidth,
    CSSPropertyID::CSSPropertyColumnSpan,
    CSSPropertyID::CSSPropertyColumnWidth,
    CSSPropertyID::CSSPropertyContain,
    CSSPropertyID::CSSPropertyContainIntrinsicBlockSize,
    CSSPropertyID::CSSPropertyContainIntrinsicHeight,
    CSSPropertyID::CSSPropertyContainIntrinsicInlineSize,
    CSSPropertyID::CSSPropertyContainIntrinsicWidth,
    CSSPropertyID::CSSPropertyContainerName,
    CSSPropertyID::CSSPropertyContainerType,
    CSSPropertyID::CSSPropertyContent,
    CSSPropertyID::CSSPropertyContentVisibility,
    CSSPropertyID::CSSPropertyContinue,
    CSSPropertyID::CSSPropertyCornerBottomLeftShape,
    CSSPropertyID::CSSPropertyCornerBottomRightShape,
    CSSPropertyID::CSSPropertyCornerEndEndShape,
    CSSPropertyID::CSSPropertyCornerEndStartShape,
    CSSPropertyID::CSSPropertyCornerStartEndShape,
    CSSPropertyID::CSSPropertyCornerStartStartShape,
    CSSPropertyID::CSSPropertyCornerTopLeftShape,
    CSSPropertyID::CSSPropertyCornerTopRightShape,
    CSSPropertyID::CSSPropertyCounterIncrement,
    CSSPropertyID::CSSPropertyCounterReset,
    CSSPropertyID::CSSPropertyCounterSet,
    CSSPropertyID::CSSPropertyCursor,
    CSSPropertyID::CSSPropertyCx,
    CSSPropertyID::CSSPropertyCy,
    CSSPropertyID::CSSPropertyD,
    CSSPropertyID::CSSPropertyDirection,
    CSSPropertyID::CSSPropertyDisplay,
    CSSPropertyID::CSSPropertyDominantBaseline,
    CSSPropertyID::CSSPropertyDynamicRangeLimit,
    CSSPropertyID::CSSPropertyEmptyCells,
    CSSPropertyID::CSSPropertyFieldSizing,
    CSSPropertyID::CSSPropertyFill,
    CSSPropertyID::CSSPropertyFillOpacity,
    CSSPropertyID::CSSPropertyFillRule,
    CSSPropertyID::CSSPropertyFilter,
    CSSPropertyID::CSSPropertyFlexBasis,
    CSSPropertyID::CSSPropertyFlexDirection,
    CSSPropertyID::CSSPropertyFlexGrow,
    CSSPropertyID::CSSPropertyFlexShrink,
    CSSPropertyID::CSSPropertyFlexWrap,
    CSSPropertyID::CSSPropertyFloat,
    CSSPropertyID::CSSPropertyFloodColor,
    CSSPropertyID::CSSPropertyFloodOpacity,
    CSSPropertyID::CSSPropertyFontFamily,
    CSSPropertyID::CSSPropertyFontFeatureSettings,
    CSSPropertyID::CSSPropertyFontKerning,
    CSSPropertyID::CSSPropertyFontOpticalSizing,
    CSSPropertyID::CSSPropertyFontPalette,
    CSSPropertyID::CSSPropertyFontSize,
    CSSPropertyID::CSSPropertyFontSizeAdjust,
    CSSPropertyID::CSSPropertyFontStyle,
    CSSPropertyID::CSSPropertyFontSynthesisSmallCaps,
    CSSPropertyID::CSSPropertyFontSynthesisStyle,
    CSSPropertyID::CSSPropertyFontSynthesisWeight,
    CSSPropertyID::CSSPropertyFontVariantAlternates,
    CSSPropertyID::CSSPropertyFontVariantCaps,
    CSSPropertyID::CSSPropertyFontVariantEastAsian,
    CSSPropertyID::CSSPropertyFontVariantEmoji,
    CSSPropertyID::CSSPropertyFontVariantLigatures,
    CSSPropertyID::CSSPropertyFontVariantNumeric,
    CSSPropertyID::CSSPropertyFontVariantPosition,
    CSSPropertyID::CSSPropertyFontVariationSettings,
    CSSPropertyID::CSSPropertyFontWeight,
    CSSPropertyID::CSSPropertyFontWidth,
    CSSPropertyID::CSSPropertyGlyphOrientationHorizontal,
    CSSPropertyID::CSSPropertyGlyphOrientationVertical,
    CSSPropertyID::CSSPropertyGridAutoColumns,
    CSSPropertyID::CSSPropertyGridAutoFlow,
    CSSPropertyID::CSSPropertyGridAutoRows,
    CSSPropertyID::CSSPropertyGridColumnEnd,
    CSSPropertyID::CSSPropertyGridColumnStart,
    CSSPropertyID::CSSPropertyGridRowEnd,
    CSSPropertyID::CSSPropertyGridRowStart,
    CSSPropertyID::CSSPropertyGridTemplateAreas,
    CSSPropertyID::CSSPropertyGridTemplateColumns,
    CSSPropertyID::CSSPropertyGridTemplateRows,
    CSSPropertyID::CSSPropertyHangingPunctuation,
    CSSPropertyID::CSSPropertyHeight,
    CSSPropertyID::CSSPropertyHyphenateCharacter,
    CSSPropertyID::CSSPropertyHyphens,
    CSSPropertyID::CSSPropertyImageOrientation,
    CSSPropertyID::CSSPropertyImageRendering,
    CSSPropertyID::CSSPropertyInlineSize,
    CSSPropertyID::CSSPropertyInputSecurity,
    CSSPropertyID::CSSPropertyInsetBlockEnd,
    CSSPropertyID::CSSPropertyInsetBlockStart,
    CSSPropertyID::CSSPropertyInsetInlineEnd,
    CSSPropertyID::CSSPropertyInsetInlineStart,
    CSSPropertyID::CSSPropertyIsolation,
    CSSPropertyID::CSSPropertyJustifyContent,
    CSSPropertyID::CSSPropertyJustifyItems,
    CSSPropertyID::CSSPropertyJustifySelf,
    CSSPropertyID::CSSPropertyLeft,
    CSSPropertyID::CSSPropertyLetterSpacing,
    CSSPropertyID::CSSPropertyLightingColor,
    CSSPropertyID::CSSPropertyLineBreak,
    CSSPropertyID::CSSPropertyLineFitEdge,
    CSSPropertyID::CSSPropertyLineHeight,
    CSSPropertyID::CSSPropertyListStyleImage,
    CSSPropertyID::CSSPropertyListStylePosition,
    CSSPropertyID::CSSPropertyListStyleType,
    CSSPropertyID::CSSPropertyMarginBlockEnd,
    CSSPropertyID::CSSPropertyMarginBlockStart,
    CSSPropertyID::CSSPropertyMarginBottom,
    CSSPropertyID::CSSPropertyMarginInlineEnd,
    CSSPropertyID::CSSPropertyMarginInlineStart,
    CSSPropertyID::CSSPropertyMarginLeft,
    CSSPropertyID::CSSPropertyMarginRight,
    CSSPropertyID::CSSPropertyMarginTop,
    CSSPropertyID::CSSPropertyMarginTrim,
    CSSPropertyID::CSSPropertyMarkerEnd,
    CSSPropertyID::CSSPropertyMarkerMid,
    CSSPropertyID::CSSPropertyMarkerStart,
    CSSPropertyID::CSSPropertyMaskBorderOutset,
    CSSPropertyID::CSSPropertyMaskBorderRepeat,
    CSSPropertyID::CSSPropertyMaskBorderSlice,
    CSSPropertyID::CSSPropertyMaskBorderSource,
    CSSPropertyID::CSSPropertyMaskBorderWidth,
    CSSPropertyID::CSSPropertyMaskClip,
    CSSPropertyID::CSSPropertyMaskComposite,
    CSSPropertyID::CSSPropertyMaskImage,
    CSSPropertyID::CSSPropertyMaskMode,
    CSSPropertyID::CSSPropertyMaskOrigin,
    CSSPropertyID::CSSPropertyMaskRepeat,
    CSSPropertyID::CSSPropertyMaskSize,
    CSSPropertyID::CSSPropertyMaskType,
    CSSPropertyID::CSSPropertyMathStyle,
    CSSPropertyID::CSSPropertyMaxBlockSize,
    CSSPropertyID::CSSPropertyMaxHeight,
    CSSPropertyID::CSSPropertyMaxInlineSize,
    CSSPropertyID::CSSPropertyMaxLines,
    CSSPropertyID::CSSPropertyMaxWidth,
    CSSPropertyID::CSSPropertyMinBlockSize,
    CSSPropertyID::CSSPropertyMinHeight,
    CSSPropertyID::CSSPropertyMinInlineSize,
    CSSPropertyID::CSSPropertyMinWidth,
    CSSPropertyID::CSSPropertyMixBlendMode,
    CSSPropertyID::CSSPropertyObjectFit,
    CSSPropertyID::CSSPropertyObjectPosition,
    CSSPropertyID::CSSPropertyOffsetAnchor,
    CSSPropertyID::CSSPropertyOffsetDistance,
    CSSPropertyID::CSSPropertyOffsetPath,
    CSSPropertyID::CSSPropertyOffsetPosition,
    CSSPropertyID::CSSPropertyOffsetRotate,
    CSSPropertyID::CSSPropertyOpacity,
    CSSPropertyID::CSSPropertyOrder,
    CSSPropertyID::CSSPropertyOrphans,
    CSSPropertyID::CSSPropertyOutlineColor,
    CSSPropertyID::CSSPropertyOutlineOffset,
    CSSPropertyID::CSSPropertyOutlineStyle,
    CSSPropertyID::CSSPropertyOutlineWidth,
    CSSPropertyID::CSSPropertyOverflowAnchor,
    CSSPropertyID::CSSPropertyOverflowBlock,
    CSSPropertyID::CSSPropertyOverflowInline,
    CSSPropertyID::CSSPropertyOverflowWrap,
    CSSPropertyID::CSSPropertyOverflowX,
    CSSPropertyID::CSSPropertyOverflowY,
    CSSPropertyID::CSSPropertyOverscrollBehaviorBlock,
    CSSPropertyID::CSSPropertyOverscrollBehaviorInline,
    CSSPropertyID::CSSPropertyOverscrollBehaviorX,
    CSSPropertyID::CSSPropertyOverscrollBehaviorY,
    CSSPropertyID::CSSPropertyPaddingBlockEnd,
    CSSPropertyID::CSSPropertyPaddingBlockStart,
    CSSPropertyID::CSSPropertyPaddingBottom,
    CSSPropertyID::CSSPropertyPaddingInlineEnd,
    CSSPropertyID::CSSPropertyPaddingInlineStart,
    CSSPropertyID::CSSPropertyPaddingLeft,
    CSSPropertyID::CSSPropertyPaddingRight,
    CSSPropertyID::CSSPropertyPaddingTop,
    CSSPropertyID::CSSPropertyPaintOrder,
    CSSPropertyID::CSSPropertyPerspective,
    CSSPropertyID::CSSPropertyPerspectiveOrigin,
    CSSPropertyID::CSSPropertyPointerEvents,
    CSSPropertyID::CSSPropertyPosition,
    CSSPropertyID::CSSPropertyPositionAnchor,
    CSSPropertyID::CSSPropertyPositionArea,
    CSSPropertyID::CSSPropertyPositionTryFallbacks,
    CSSPropertyID::CSSPropertyPositionTryOrder,
    CSSPropertyID::CSSPropertyPositionVisibility,
    CSSPropertyID::CSSPropertyPrintColorAdjust,
    CSSPropertyID::CSSPropertyQuotes,
    CSSPropertyID::CSSPropertyR,
    CSSPropertyID::CSSPropertyResize,
    CSSPropertyID::CSSPropertyRight,
    CSSPropertyID::CSSPropertyRotate,
    CSSPropertyID::CSSPropertyRowGap,
    CSSPropertyID::CSSPropertyRubyAlign,
    CSSPropertyID::CSSPropertyRubyOverhang,
    CSSPropertyID::CSSPropertyRubyPosition,
    CSSPropertyID::CSSPropertyRx,
    CSSPropertyID::CSSPropertyRy,
    CSSPropertyID::CSSPropertyScale,
    CSSPropertyID::CSSPropertyScrollBehavior,
    CSSPropertyID::CSSPropertyScrollMarginBlockEnd,
    CSSPropertyID::CSSPropertyScrollMarginBlockStart,
    CSSPropertyID::CSSPropertyScrollMarginBottom,
    CSSPropertyID::CSSPropertyScrollMarginInlineEnd,
    CSSPropertyID::CSSPropertyScrollMarginInlineStart,
    CSSPropertyID::CSSPropertyScrollMarginLeft,
    CSSPropertyID::CSSPropertyScrollMarginRight,
    CSSPropertyID::CSSPropertyScrollMarginTop,
    CSSPropertyID::CSSPropertyScrollPaddingBlockEnd,
    CSSPropertyID::CSSPropertyScrollPaddingBlockStart,
    CSSPropertyID::CSSPropertyScrollPaddingBottom,
    CSSPropertyID::CSSPropertyScrollPaddingInlineEnd,
    CSSPropertyID::CSSPropertyScrollPaddingInlineStart,
    CSSPropertyID::CSSPropertyScrollPaddingLeft,
    CSSPropertyID::CSSPropertyScrollPaddingRight,
    CSSPropertyID::CSSPropertyScrollPaddingTop,
    CSSPropertyID::CSSPropertyScrollSnapAlign,
    CSSPropertyID::CSSPropertyScrollSnapStop,
    CSSPropertyID::CSSPropertyScrollSnapType,
    CSSPropertyID::CSSPropertyScrollTimelineAxis,
    CSSPropertyID::CSSPropertyScrollTimelineName,
    CSSPropertyID::CSSPropertyScrollbarColor,
    CSSPropertyID::CSSPropertyScrollbarGutter,
    CSSPropertyID::CSSPropertyScrollbarWidth,
    CSSPropertyID::CSSPropertyShapeImageThreshold,
    CSSPropertyID::CSSPropertyShapeMargin,
    CSSPropertyID::CSSPropertyShapeOutside,
    CSSPropertyID::CSSPropertyShapeRendering,
    CSSPropertyID::CSSPropertySpeakAs,
    CSSPropertyID::CSSPropertyStopColor,
    CSSPropertyID::CSSPropertyStopOpacity,
    CSSPropertyID::CSSPropertyStroke,
    CSSPropertyID::CSSPropertyStrokeColor,
    CSSPropertyID::CSSPropertyStrokeDasharray,
    CSSPropertyID::CSSPropertyStrokeDashoffset,
    CSSPropertyID::CSSPropertyStrokeLinecap,
    CSSPropertyID::CSSPropertyStrokeLinejoin,
    CSSPropertyID::CSSPropertyStrokeMiterlimit,
    CSSPropertyID::CSSPropertyStrokeOpacity,
    CSSPropertyID::CSSPropertyStrokeWidth,
    CSSPropertyID::CSSPropertyTabSize,
    CSSPropertyID::CSSPropertyTableLayout,
    CSSPropertyID::CSSPropertyTextAlign,
    CSSPropertyID::CSSPropertyTextAlignLast,
    CSSPropertyID::CSSPropertyTextAnchor,
    CSSPropertyID::CSSPropertyTextAutospace,
    CSSPropertyID::CSSPropertyTextBoxEdge,
    CSSPropertyID::CSSPropertyTextBoxTrim,
    CSSPropertyID::CSSPropertyTextCombineUpright,
    CSSPropertyID::CSSPropertyTextDecorationColor,
    CSSPropertyID::CSSPropertyTextDecorationLine,
    CSSPropertyID::CSSPropertyTextDecorationSkipInk,
    CSSPropertyID::CSSPropertyTextDecorationStyle,
    CSSPropertyID::CSSPropertyTextDecorationThickness,
    CSSPropertyID::CSSPropertyTextEmphasisColor,
    CSSPropertyID::CSSPropertyTextEmphasisPosition,
    CSSPropertyID::CSSPropertyTextEmphasisStyle,
    CSSPropertyID::CSSPropertyTextGroupAlign,
    CSSPropertyID::CSSPropertyTextIndent,
    CSSPropertyID::CSSPropertyTextJustify,
    CSSPropertyID::CSSPropertyTextOrientation,
    CSSPropertyID::CSSPropertyTextOverflow,
    CSSPropertyID::CSSPropertyTextRendering,
    CSSPropertyID::CSSPropertyTextShadow,
    CSSPropertyID::CSSPropertyTextSpacingTrim,
    CSSPropertyID::CSSPropertyTextTransform,
    CSSPropertyID::CSSPropertyTextUnderlineOffset,
    CSSPropertyID::CSSPropertyTextUnderlinePosition,
    CSSPropertyID::CSSPropertyTextWrapMode,
    CSSPropertyID::CSSPropertyTextWrapStyle,
    CSSPropertyID::CSSPropertyTimelineScope,
    CSSPropertyID::CSSPropertyTop,
    CSSPropertyID::CSSPropertyTouchAction,
    CSSPropertyID::CSSPropertyTransform,
    CSSPropertyID::CSSPropertyTransformBox,
    CSSPropertyID::CSSPropertyTransformOrigin,
    CSSPropertyID::CSSPropertyTransformStyle,
    CSSPropertyID::CSSPropertyTransitionBehavior,
    CSSPropertyID::CSSPropertyTransitionDelay,
    CSSPropertyID::CSSPropertyTransitionDuration,
    CSSPropertyID::CSSPropertyTransitionProperty,
    CSSPropertyID::CSSPropertyTransitionTimingFunction,
    CSSPropertyID::CSSPropertyTranslate,
    CSSPropertyID::CSSPropertyUnicodeBidi,
    CSSPropertyID::CSSPropertyVectorEffect,
    CSSPropertyID::CSSPropertyVerticalAlign,
    CSSPropertyID::CSSPropertyViewTimelineAxis,
    CSSPropertyID::CSSPropertyViewTimelineInset,
    CSSPropertyID::CSSPropertyViewTimelineName,
    CSSPropertyID::CSSPropertyViewTransitionClass,
    CSSPropertyID::CSSPropertyViewTransitionName,
    CSSPropertyID::CSSPropertyVisibility,
    CSSPropertyID::CSSPropertyWhiteSpaceCollapse,
    CSSPropertyID::CSSPropertyWidows,
    CSSPropertyID::CSSPropertyWidth,
    CSSPropertyID::CSSPropertyWillChange,
    CSSPropertyID::CSSPropertyWordBreak,
    CSSPropertyID::CSSPropertyWordSpacing,
    CSSPropertyID::CSSPropertyWritingMode,
    CSSPropertyID::CSSPropertyX,
    CSSPropertyID::CSSPropertyY,
    CSSPropertyID::CSSPropertyZIndex,
    CSSPropertyID::CSSPropertyZoom,
    CSSPropertyID::CSSPropertyAppleColorFilter,
    CSSPropertyID::CSSPropertyWebkitBackdropFilter,
    CSSPropertyID::CSSPropertyWebkitBackgroundClip,
    CSSPropertyID::CSSPropertyWebkitBackgroundOrigin,
    CSSPropertyID::CSSPropertyWebkitBorderHorizontalSpacing,
    CSSPropertyID::CSSPropertyWebkitBorderVerticalSpacing,
    CSSPropertyID::CSSPropertyWebkitBoxAlign,
    CSSPropertyID::CSSPropertyWebkitBoxDecorationBreak,
    CSSPropertyID::CSSPropertyWebkitBoxDirection,
    CSSPropertyID::CSSPropertyWebkitBoxFlex,
    CSSPropertyID::CSSPropertyWebkitBoxFlexGroup,
    CSSPropertyID::CSSPropertyWebkitBoxLines,
    CSSPropertyID::CSSPropertyWebkitBoxOrdinalGroup,
    CSSPropertyID::CSSPropertyWebkitBoxOrient,
    CSSPropertyID::CSSPropertyWebkitBoxPack,
    CSSPropertyID::CSSPropertyWebkitBoxReflect,
    CSSPropertyID::CSSPropertyWebkitBoxShadow,
    CSSPropertyID::CSSPropertyWebkitColumnAxis,
    CSSPropertyID::CSSPropertyWebkitColumnProgression,
    CSSPropertyID::CSSPropertyWebkitCursorVisibility,
    CSSPropertyID::CSSPropertyWebkitFontSmoothing,
    CSSPropertyID::CSSPropertyWebkitHyphenateLimitAfter,
    CSSPropertyID::CSSPropertyWebkitHyphenateLimitBefore,
    CSSPropertyID::CSSPropertyWebkitHyphenateLimitLines,
    CSSPropertyID::CSSPropertyWebkitInitialLetter,
    CSSPropertyID::CSSPropertyWebkitLineAlign,
    CSSPropertyID::CSSPropertyWebkitLineBoxContain,
    CSSPropertyID::CSSPropertyWebkitLineClamp,
    CSSPropertyID::CSSPropertyWebkitLineGrid,
    CSSPropertyID::CSSPropertyWebkitLineSnap,
    CSSPropertyID::CSSPropertyWebkitLocale,
    CSSPropertyID::CSSPropertyWebkitMaskClip,
    CSSPropertyID::CSSPropertyWebkitMaskComposite,
    CSSPropertyID::CSSPropertyWebkitMaskPositionX,
    CSSPropertyID::CSSPropertyWebkitMaskPositionY,
    CSSPropertyID::CSSPropertyWebkitMaskSourceType,
    CSSPropertyID::CSSPropertyWebkitNbspMode,
    CSSPropertyID::CSSPropertyWebkitRtlOrdering,
    CSSPropertyID::CSSPropertyWebkitRubyPosition,
    CSSPropertyID::CSSPropertyWebkitTextCombine,
    CSSPropertyID::CSSPropertyWebkitTextFillColor,
    CSSPropertyID::CSSPropertyWebkitTextSecurity,
    CSSPropertyID::CSSPropertyWebkitTextStrokeColor,
    CSSPropertyID::CSSPropertyWebkitTextStrokeWidth,
    CSSPropertyID::CSSPropertyWebkitTextZoom,
    CSSPropertyID::CSSPropertyWebkitUserDrag,
    CSSPropertyID::CSSPropertyWebkitUserModify,
    CSSPropertyID::CSSPropertyWebkitUserSelect,
};

constexpr ASCIILiteral propertyNameStrings[numCSSProperties] = {
    "color-scheme"_s,
    "ruby-position"_s,
    "writing-mode"_s,
    "direction"_s,
    "display"_s,
    "font-family"_s,
    "font-feature-settings"_s,
    "font-kerning"_s,
    "font-optical-sizing"_s,
    "font-palette"_s,
    "font-size"_s,
    "font-size-adjust"_s,
    "font-style"_s,
    "font-synthesis-small-caps"_s,
    "font-synthesis-style"_s,
    "font-synthesis-weight"_s,
    "font-variant-alternates"_s,
    "font-variant-caps"_s,
    "font-variant-east-asian"_s,
    "font-variant-emoji"_s,
    "font-variant-ligatures"_s,
    "font-variant-numeric"_s,
    "font-variant-position"_s,
    "font-variation-settings"_s,
    "font-weight"_s,
    "font-width"_s,
    "text-orientation"_s,
    "text-rendering"_s,
    "zoom"_s,
    "-webkit-font-smoothing"_s,
    "-webkit-locale"_s,
    "-webkit-text-zoom"_s,
    "letter-spacing"_s,
    "text-autospace"_s,
    "text-spacing-trim"_s,
    "accent-color"_s,
    "additive-symbols"_s,
    "align-content"_s,
    "align-items"_s,
    "align-self"_s,
    "alignment-baseline"_s,
    "anchor-name"_s,
    "anchor-scope"_s,
    "animation-composition"_s,
    "animation-delay"_s,
    "animation-direction"_s,
    "animation-duration"_s,
    "animation-fill-mode"_s,
    "animation-iteration-count"_s,
    "animation-name"_s,
    "animation-play-state"_s,
    "animation-range-end"_s,
    "animation-range-start"_s,
    "animation-timeline"_s,
    "animation-timing-function"_s,
    "appearance"_s,
    "aspect-ratio"_s,
    "backdrop-filter"_s,
    "backface-visibility"_s,
    "background-attachment"_s,
    "background-blend-mode"_s,
    "background-clip"_s,
    "background-color"_s,
    "background-image"_s,
    "background-origin"_s,
    "background-position-x"_s,
    "background-position-y"_s,
    "background-repeat"_s,
    "background-size"_s,
    "base-palette"_s,
    "baseline-shift"_s,
    "block-ellipsis"_s,
    "block-step-align"_s,
    "block-step-insert"_s,
    "block-step-round"_s,
    "block-step-size"_s,
    "border-collapse"_s,
    "border-image-outset"_s,
    "border-image-repeat"_s,
    "border-image-slice"_s,
    "border-image-source"_s,
    "border-image-width"_s,
    "box-shadow"_s,
    "box-sizing"_s,
    "break-after"_s,
    "break-before"_s,
    "break-inside"_s,
    "buffered-rendering"_s,
    "caption-side"_s,
    "caret-color"_s,
    "clear"_s,
    "clip"_s,
    "clip-path"_s,
    "clip-rule"_s,
    "color"_s,
    "color-interpolation"_s,
    "color-interpolation-filters"_s,
    "column-count"_s,
    "column-fill"_s,
    "column-gap"_s,
    "column-rule-color"_s,
    "column-rule-style"_s,
    "column-rule-width"_s,
    "column-span"_s,
    "column-width"_s,
    "contain"_s,
    "container-name"_s,
    "container-type"_s,
    "content"_s,
    "content-visibility"_s,
    "continue"_s,
    "counter-increment"_s,
    "counter-reset"_s,
    "counter-set"_s,
    "cursor"_s,
    "cx"_s,
    "cy"_s,
    "d"_s,
    "dominant-baseline"_s,
    "dynamic-range-limit"_s,
    "empty-cells"_s,
    "fallback"_s,
    "field-sizing"_s,
    "fill"_s,
    "fill-opacity"_s,
    "fill-rule"_s,
    "filter"_s,
    "flex-basis"_s,
    "flex-direction"_s,
    "flex-grow"_s,
    "flex-shrink"_s,
    "flex-wrap"_s,
    "float"_s,
    "flood-color"_s,
    "flood-opacity"_s,
    "font-display"_s,
    "glyph-orientation-horizontal"_s,
    "glyph-orientation-vertical"_s,
    "grid-auto-columns"_s,
    "grid-auto-flow"_s,
    "grid-auto-rows"_s,
    "grid-column-end"_s,
    "grid-column-start"_s,
    "grid-row-end"_s,
    "grid-row-start"_s,
    "grid-template-areas"_s,
    "grid-template-columns"_s,
    "grid-template-rows"_s,
    "hanging-punctuation"_s,
    "hyphenate-character"_s,
    "hyphens"_s,
    "image-orientation"_s,
    "image-rendering"_s,
    "inherits"_s,
    "initial-value"_s,
    "input-security"_s,
    "isolation"_s,
    "justify-content"_s,
    "justify-items"_s,
    "justify-self"_s,
    "lighting-color"_s,
    "line-break"_s,
    "line-fit-edge"_s,
    "line-height"_s,
    "list-style-image"_s,
    "list-style-position"_s,
    "list-style-type"_s,
    "margin-trim"_s,
    "marker-end"_s,
    "marker-mid"_s,
    "marker-start"_s,
    "mask-border-outset"_s,
    "mask-border-repeat"_s,
    "mask-border-slice"_s,
    "mask-border-source"_s,
    "mask-border-width"_s,
    "mask-clip"_s,
    "mask-composite"_s,
    "mask-image"_s,
    "mask-mode"_s,
    "mask-origin"_s,
    "mask-repeat"_s,
    "mask-size"_s,
    "mask-type"_s,
    "math-style"_s,
    "max-lines"_s,
    "mix-blend-mode"_s,
    "navigation"_s,
    "negative"_s,
    "object-fit"_s,
    "object-position"_s,
    "offset-anchor"_s,
    "offset-distance"_s,
    "offset-path"_s,
    "offset-position"_s,
    "offset-rotate"_s,
    "opacity"_s,
    "order"_s,
    "orphans"_s,
    "outline-color"_s,
    "outline-offset"_s,
    "outline-style"_s,
    "outline-width"_s,
    "overflow-anchor"_s,
    "overflow-wrap"_s,
    "override-colors"_s,
    "pad"_s,
    "page"_s,
    "paint-order"_s,
    "perspective"_s,
    "perspective-origin-x"_s,
    "perspective-origin-y"_s,
    "pointer-events"_s,
    "position"_s,
    "position-anchor"_s,
    "position-area"_s,
    "position-try-fallbacks"_s,
    "position-try-order"_s,
    "position-visibility"_s,
    "prefix"_s,
    "print-color-adjust"_s,
    "quotes"_s,
    "r"_s,
    "range"_s,
    "resize"_s,
    "rotate"_s,
    "row-gap"_s,
    "ruby-align"_s,
    "ruby-overhang"_s,
    "rx"_s,
    "ry"_s,
    "scale"_s,
    "scroll-behavior"_s,
    "scroll-snap-align"_s,
    "scroll-snap-stop"_s,
    "scroll-snap-type"_s,
    "scroll-timeline-axis"_s,
    "scroll-timeline-name"_s,
    "scrollbar-color"_s,
    "scrollbar-gutter"_s,
    "scrollbar-width"_s,
    "shape-image-threshold"_s,
    "shape-margin"_s,
    "shape-outside"_s,
    "shape-rendering"_s,
    "size"_s,
    "size-adjust"_s,
    "speak-as"_s,
    "src"_s,
    "stop-color"_s,
    "stop-opacity"_s,
    "stroke"_s,
    "stroke-color"_s,
    "stroke-dasharray"_s,
    "stroke-dashoffset"_s,
    "stroke-linecap"_s,
    "stroke-linejoin"_s,
    "stroke-miterlimit"_s,
    "stroke-opacity"_s,
    "stroke-width"_s,
    "suffix"_s,
    "symbols"_s,
    "syntax"_s,
    "system"_s,
    "tab-size"_s,
    "table-layout"_s,
    "text-align"_s,
    "text-align-last"_s,
    "text-anchor"_s,
    "text-box-edge"_s,
    "text-box-trim"_s,
    "text-combine-upright"_s,
    "text-decoration-color"_s,
    "text-decoration-line"_s,
    "text-decoration-skip-ink"_s,
    "text-decoration-style"_s,
    "text-decoration-thickness"_s,
    "text-emphasis-color"_s,
    "text-emphasis-position"_s,
    "text-emphasis-style"_s,
    "text-group-align"_s,
    "text-indent"_s,
    "text-justify"_s,
    "text-overflow"_s,
    "text-shadow"_s,
    "text-transform"_s,
    "text-underline-offset"_s,
    "text-underline-position"_s,
    "text-wrap-mode"_s,
    "text-wrap-style"_s,
    "timeline-scope"_s,
    "touch-action"_s,
    "transform"_s,
    "transform-box"_s,
    "transform-origin-x"_s,
    "transform-origin-y"_s,
    "transform-origin-z"_s,
    "transform-style"_s,
    "transition-behavior"_s,
    "transition-delay"_s,
    "transition-duration"_s,
    "transition-property"_s,
    "transition-timing-function"_s,
    "translate"_s,
    "types"_s,
    "unicode-bidi"_s,
    "unicode-range"_s,
    "vector-effect"_s,
    "vertical-align"_s,
    "view-timeline-axis"_s,
    "view-timeline-inset"_s,
    "view-timeline-name"_s,
    "view-transition-class"_s,
    "view-transition-name"_s,
    "visibility"_s,
    "white-space-collapse"_s,
    "widows"_s,
    "will-change"_s,
    "word-break"_s,
    "x"_s,
    "y"_s,
    "z-index"_s,
    "-apple-color-filter"_s,
    "-webkit-backdrop-filter"_s,
    "-webkit-background-clip"_s,
    "-webkit-background-origin"_s,
    "-webkit-border-horizontal-spacing"_s,
    "-webkit-border-vertical-spacing"_s,
    "-webkit-box-align"_s,
    "-webkit-box-decoration-break"_s,
    "-webkit-box-direction"_s,
    "-webkit-box-flex"_s,
    "-webkit-box-flex-group"_s,
    "-webkit-box-lines"_s,
    "-webkit-box-ordinal-group"_s,
    "-webkit-box-orient"_s,
    "-webkit-box-pack"_s,
    "-webkit-box-reflect"_s,
    "-webkit-box-shadow"_s,
    "-webkit-column-axis"_s,
    "-webkit-column-progression"_s,
    "-webkit-cursor-visibility"_s,
    "-webkit-font-size-delta"_s,
    "-webkit-hyphenate-limit-after"_s,
    "-webkit-hyphenate-limit-before"_s,
    "-webkit-hyphenate-limit-lines"_s,
    "-webkit-initial-letter"_s,
    "-webkit-line-align"_s,
    "-webkit-line-box-contain"_s,
    "-webkit-line-clamp"_s,
    "-webkit-line-grid"_s,
    "-webkit-line-snap"_s,
    "-webkit-marquee-direction"_s,
    "-webkit-marquee-increment"_s,
    "-webkit-marquee-repetition"_s,
    "-webkit-marquee-speed"_s,
    "-webkit-marquee-style"_s,
    "-webkit-mask-clip"_s,
    "-webkit-mask-composite"_s,
    "-webkit-mask-position-x"_s,
    "-webkit-mask-position-y"_s,
    "-webkit-mask-source-type"_s,
    "-webkit-nbsp-mode"_s,
    "-webkit-rtl-ordering"_s,
    "-webkit-ruby-position"_s,
    "-webkit-text-combine"_s,
    "-webkit-text-decorations-in-effect"_s,
    "-webkit-text-fill-color"_s,
    "-webkit-text-security"_s,
    "-webkit-text-stroke-color"_s,
    "-webkit-text-stroke-width"_s,
    "-webkit-user-drag"_s,
    "-webkit-user-modify"_s,
    "-webkit-user-select"_s,
    "word-spacing"_s,
    "border-bottom-color"_s,
    "border-bottom-left-radius"_s,
    "border-bottom-right-radius"_s,
    "border-bottom-style"_s,
    "border-bottom-width"_s,
    "border-left-color"_s,
    "border-left-style"_s,
    "border-left-width"_s,
    "border-right-color"_s,
    "border-right-style"_s,
    "border-right-width"_s,
    "border-top-color"_s,
    "border-top-left-radius"_s,
    "border-top-right-radius"_s,
    "border-top-style"_s,
    "border-top-width"_s,
    "bottom"_s,
    "contain-intrinsic-height"_s,
    "contain-intrinsic-width"_s,
    "corner-bottom-left-shape"_s,
    "corner-bottom-right-shape"_s,
    "corner-top-left-shape"_s,
    "corner-top-right-shape"_s,
    "height"_s,
    "left"_s,
    "margin-bottom"_s,
    "margin-left"_s,
    "margin-right"_s,
    "margin-top"_s,
    "max-height"_s,
    "max-width"_s,
    "min-height"_s,
    "min-width"_s,
    "overflow-x"_s,
    "overflow-y"_s,
    "overscroll-behavior-x"_s,
    "overscroll-behavior-y"_s,
    "padding-bottom"_s,
    "padding-left"_s,
    "padding-right"_s,
    "padding-top"_s,
    "right"_s,
    "scroll-margin-bottom"_s,
    "scroll-margin-left"_s,
    "scroll-margin-right"_s,
    "scroll-margin-top"_s,
    "scroll-padding-bottom"_s,
    "scroll-padding-left"_s,
    "scroll-padding-right"_s,
    "scroll-padding-top"_s,
    "top"_s,
    "width"_s,
    "block-size"_s,
    "border-block-end-color"_s,
    "border-block-end-style"_s,
    "border-block-end-width"_s,
    "border-block-start-color"_s,
    "border-block-start-style"_s,
    "border-block-start-width"_s,
    "border-end-end-radius"_s,
    "border-end-start-radius"_s,
    "border-inline-end-color"_s,
    "border-inline-end-style"_s,
    "border-inline-end-width"_s,
    "border-inline-start-color"_s,
    "border-inline-start-style"_s,
    "border-inline-start-width"_s,
    "border-start-end-radius"_s,
    "border-start-start-radius"_s,
    "contain-intrinsic-block-size"_s,
    "contain-intrinsic-inline-size"_s,
    "corner-end-end-shape"_s,
    "corner-end-start-shape"_s,
    "corner-start-end-shape"_s,
    "corner-start-start-shape"_s,
    "inline-size"_s,
    "inset-block-end"_s,
    "inset-block-start"_s,
    "inset-inline-end"_s,
    "inset-inline-start"_s,
    "margin-block-end"_s,
    "margin-block-start"_s,
    "margin-inline-end"_s,
    "margin-inline-start"_s,
    "max-block-size"_s,
    "max-inline-size"_s,
    "min-block-size"_s,
    "min-inline-size"_s,
    "overflow-block"_s,
    "overflow-inline"_s,
    "overscroll-behavior-block"_s,
    "overscroll-behavior-inline"_s,
    "padding-block-end"_s,
    "padding-block-start"_s,
    "padding-inline-end"_s,
    "padding-inline-start"_s,
    "scroll-margin-block-end"_s,
    "scroll-margin-block-start"_s,
    "scroll-margin-inline-end"_s,
    "scroll-margin-inline-start"_s,
    "scroll-padding-block-end"_s,
    "scroll-padding-block-start"_s,
    "scroll-padding-inline-end"_s,
    "scroll-padding-inline-start"_s,
    "all"_s,
    "animation"_s,
    "animation-range"_s,
    "background"_s,
    "background-position"_s,
    "block-step"_s,
    "border"_s,
    "border-block"_s,
    "border-block-color"_s,
    "border-block-end"_s,
    "border-block-start"_s,
    "border-block-style"_s,
    "border-block-width"_s,
    "border-bottom"_s,
    "border-color"_s,
    "border-image"_s,
    "border-inline"_s,
    "border-inline-color"_s,
    "border-inline-end"_s,
    "border-inline-start"_s,
    "border-inline-style"_s,
    "border-inline-width"_s,
    "border-left"_s,
    "border-radius"_s,
    "border-right"_s,
    "border-spacing"_s,
    "border-style"_s,
    "border-top"_s,
    "border-width"_s,
    "column-rule"_s,
    "columns"_s,
    "contain-intrinsic-size"_s,
    "container"_s,
    "corner-shape"_s,
    "flex"_s,
    "flex-flow"_s,
    "font"_s,
    "font-synthesis"_s,
    "font-variant"_s,
    "gap"_s,
    "grid"_s,
    "grid-area"_s,
    "grid-column"_s,
    "grid-row"_s,
    "grid-template"_s,
    "inset"_s,
    "inset-block"_s,
    "inset-inline"_s,
    "line-clamp"_s,
    "list-style"_s,
    "margin"_s,
    "margin-block"_s,
    "margin-inline"_s,
    "marker"_s,
    "mask"_s,
    "mask-border"_s,
    "mask-position"_s,
    "offset"_s,
    "outline"_s,
    "overflow"_s,
    "overscroll-behavior"_s,
    "padding"_s,
    "padding-block"_s,
    "padding-inline"_s,
    "page-break-after"_s,
    "page-break-before"_s,
    "page-break-inside"_s,
    "perspective-origin"_s,
    "place-content"_s,
    "place-items"_s,
    "place-self"_s,
    "position-try"_s,
    "scroll-margin"_s,
    "scroll-margin-block"_s,
    "scroll-margin-inline"_s,
    "scroll-padding"_s,
    "scroll-padding-block"_s,
    "scroll-padding-inline"_s,
    "scroll-timeline"_s,
    "text-box"_s,
    "text-decoration"_s,
    "text-decoration-skip"_s,
    "text-emphasis"_s,
    "text-wrap"_s,
    "transform-origin"_s,
    "transition"_s,
    "view-timeline"_s,
    "white-space"_s,
    "-webkit-background-size"_s,
    "-webkit-border-image"_s,
    "-webkit-border-radius"_s,
    "-webkit-column-break-after"_s,
    "-webkit-column-break-before"_s,
    "-webkit-column-break-inside"_s,
    "-webkit-mask"_s,
    "-webkit-mask-box-image"_s,
    "-webkit-mask-position"_s,
    "-webkit-perspective"_s,
    "-webkit-text-decoration"_s,
    "-webkit-text-orientation"_s,
    "-webkit-text-stroke"_s,
};

%}
%struct-type
struct CSSPropertyHashTableEntry {
    const char* name;
    uint16_t id;
};
%language=C++
%readonly-tables
%global-table
%7bit
%compare-strncmp
%define class-name CSSPropertyNamesHash
%enum

%%
color-scheme, CSSPropertyID::CSSPropertyColorScheme
ruby-position, CSSPropertyID::CSSPropertyRubyPosition
writing-mode, CSSPropertyID::CSSPropertyWritingMode
direction, CSSPropertyID::CSSPropertyDirection
display, CSSPropertyID::CSSPropertyDisplay
font-family, CSSPropertyID::CSSPropertyFontFamily
font-feature-settings, CSSPropertyID::CSSPropertyFontFeatureSettings
font-kerning, CSSPropertyID::CSSPropertyFontKerning
font-optical-sizing, CSSPropertyID::CSSPropertyFontOpticalSizing
font-palette, CSSPropertyID::CSSPropertyFontPalette
font-size, CSSPropertyID::CSSPropertyFontSize
font-size-adjust, CSSPropertyID::CSSPropertyFontSizeAdjust
font-style, CSSPropertyID::CSSPropertyFontStyle
font-synthesis-small-caps, CSSPropertyID::CSSPropertyFontSynthesisSmallCaps
font-synthesis-style, CSSPropertyID::CSSPropertyFontSynthesisStyle
font-synthesis-weight, CSSPropertyID::CSSPropertyFontSynthesisWeight
font-variant-alternates, CSSPropertyID::CSSPropertyFontVariantAlternates
font-variant-caps, CSSPropertyID::CSSPropertyFontVariantCaps
font-variant-east-asian, CSSPropertyID::CSSPropertyFontVariantEastAsian
font-variant-emoji, CSSPropertyID::CSSPropertyFontVariantEmoji
font-variant-ligatures, CSSPropertyID::CSSPropertyFontVariantLigatures
font-variant-numeric, CSSPropertyID::CSSPropertyFontVariantNumeric
font-variant-position, CSSPropertyID::CSSPropertyFontVariantPosition
font-variation-settings, CSSPropertyID::CSSPropertyFontVariationSettings
font-weight, CSSPropertyID::CSSPropertyFontWeight
font-width, CSSPropertyID::CSSPropertyFontWidth
text-orientation, CSSPropertyID::CSSPropertyTextOrientation
text-rendering, CSSPropertyID::CSSPropertyTextRendering
zoom, CSSPropertyID::CSSPropertyZoom
-webkit-font-smoothing, CSSPropertyID::CSSPropertyWebkitFontSmoothing
-webkit-locale, CSSPropertyID::CSSPropertyWebkitLocale
-webkit-text-zoom, CSSPropertyID::CSSPropertyWebkitTextZoom
letter-spacing, CSSPropertyID::CSSPropertyLetterSpacing
text-autospace, CSSPropertyID::CSSPropertyTextAutospace
text-spacing-trim, CSSPropertyID::CSSPropertyTextSpacingTrim
accent-color, CSSPropertyID::CSSPropertyAccentColor
additive-symbols, CSSPropertyID::CSSPropertyAdditiveSymbols
align-content, CSSPropertyID::CSSPropertyAlignContent
align-items, CSSPropertyID::CSSPropertyAlignItems
align-self, CSSPropertyID::CSSPropertyAlignSelf
alignment-baseline, CSSPropertyID::CSSPropertyAlignmentBaseline
anchor-name, CSSPropertyID::CSSPropertyAnchorName
anchor-scope, CSSPropertyID::CSSPropertyAnchorScope
animation-composition, CSSPropertyID::CSSPropertyAnimationComposition
animation-delay, CSSPropertyID::CSSPropertyAnimationDelay
animation-direction, CSSPropertyID::CSSPropertyAnimationDirection
animation-duration, CSSPropertyID::CSSPropertyAnimationDuration
animation-fill-mode, CSSPropertyID::CSSPropertyAnimationFillMode
animation-iteration-count, CSSPropertyID::CSSPropertyAnimationIterationCount
animation-name, CSSPropertyID::CSSPropertyAnimationName
animation-play-state, CSSPropertyID::CSSPropertyAnimationPlayState
animation-range-end, CSSPropertyID::CSSPropertyAnimationRangeEnd
animation-range-start, CSSPropertyID::CSSPropertyAnimationRangeStart
animation-timeline, CSSPropertyID::CSSPropertyAnimationTimeline
animation-timing-function, CSSPropertyID::CSSPropertyAnimationTimingFunction
appearance, CSSPropertyID::CSSPropertyAppearance
aspect-ratio, CSSPropertyID::CSSPropertyAspectRatio
backdrop-filter, CSSPropertyID::CSSPropertyBackdropFilter
backface-visibility, CSSPropertyID::CSSPropertyBackfaceVisibility
background-attachment, CSSPropertyID::CSSPropertyBackgroundAttachment
background-blend-mode, CSSPropertyID::CSSPropertyBackgroundBlendMode
background-clip, CSSPropertyID::CSSPropertyBackgroundClip
background-color, CSSPropertyID::CSSPropertyBackgroundColor
background-image, CSSPropertyID::CSSPropertyBackgroundImage
background-origin, CSSPropertyID::CSSPropertyBackgroundOrigin
background-position-x, CSSPropertyID::CSSPropertyBackgroundPositionX
background-position-y, CSSPropertyID::CSSPropertyBackgroundPositionY
background-repeat, CSSPropertyID::CSSPropertyBackgroundRepeat
background-size, CSSPropertyID::CSSPropertyBackgroundSize
base-palette, CSSPropertyID::CSSPropertyBasePalette
baseline-shift, CSSPropertyID::CSSPropertyBaselineShift
block-ellipsis, CSSPropertyID::CSSPropertyBlockEllipsis
block-step-align, CSSPropertyID::CSSPropertyBlockStepAlign
block-step-insert, CSSPropertyID::CSSPropertyBlockStepInsert
block-step-round, CSSPropertyID::CSSPropertyBlockStepRound
block-step-size, CSSPropertyID::CSSPropertyBlockStepSize
border-collapse, CSSPropertyID::CSSPropertyBorderCollapse
border-image-outset, CSSPropertyID::CSSPropertyBorderImageOutset
border-image-repeat, CSSPropertyID::CSSPropertyBorderImageRepeat
border-image-slice, CSSPropertyID::CSSPropertyBorderImageSlice
border-image-source, CSSPropertyID::CSSPropertyBorderImageSource
border-image-width, CSSPropertyID::CSSPropertyBorderImageWidth
box-shadow, CSSPropertyID::CSSPropertyBoxShadow
box-sizing, CSSPropertyID::CSSPropertyBoxSizing
break-after, CSSPropertyID::CSSPropertyBreakAfter
break-before, CSSPropertyID::CSSPropertyBreakBefore
break-inside, CSSPropertyID::CSSPropertyBreakInside
buffered-rendering, CSSPropertyID::CSSPropertyBufferedRendering
caption-side, CSSPropertyID::CSSPropertyCaptionSide
caret-color, CSSPropertyID::CSSPropertyCaretColor
clear, CSSPropertyID::CSSPropertyClear
clip, CSSPropertyID::CSSPropertyClip
clip-path, CSSPropertyID::CSSPropertyClipPath
clip-rule, CSSPropertyID::CSSPropertyClipRule
color, CSSPropertyID::CSSPropertyColor
color-interpolation, CSSPropertyID::CSSPropertyColorInterpolation
color-interpolation-filters, CSSPropertyID::CSSPropertyColorInterpolationFilters
column-count, CSSPropertyID::CSSPropertyColumnCount
column-fill, CSSPropertyID::CSSPropertyColumnFill
column-gap, CSSPropertyID::CSSPropertyColumnGap
column-rule-color, CSSPropertyID::CSSPropertyColumnRuleColor
column-rule-style, CSSPropertyID::CSSPropertyColumnRuleStyle
column-rule-width, CSSPropertyID::CSSPropertyColumnRuleWidth
column-span, CSSPropertyID::CSSPropertyColumnSpan
column-width, CSSPropertyID::CSSPropertyColumnWidth
contain, CSSPropertyID::CSSPropertyContain
container-name, CSSPropertyID::CSSPropertyContainerName
container-type, CSSPropertyID::CSSPropertyContainerType
content, CSSPropertyID::CSSPropertyContent
content-visibility, CSSPropertyID::CSSPropertyContentVisibility
continue, CSSPropertyID::CSSPropertyContinue
counter-increment, CSSPropertyID::CSSPropertyCounterIncrement
counter-reset, CSSPropertyID::CSSPropertyCounterReset
counter-set, CSSPropertyID::CSSPropertyCounterSet
cursor, CSSPropertyID::CSSPropertyCursor
cx, CSSPropertyID::CSSPropertyCx
cy, CSSPropertyID::CSSPropertyCy
d, CSSPropertyID::CSSPropertyD
dominant-baseline, CSSPropertyID::CSSPropertyDominantBaseline
dynamic-range-limit, CSSPropertyID::CSSPropertyDynamicRangeLimit
empty-cells, CSSPropertyID::CSSPropertyEmptyCells
fallback, CSSPropertyID::CSSPropertyFallback
field-sizing, CSSPropertyID::CSSPropertyFieldSizing
fill, CSSPropertyID::CSSPropertyFill
fill-opacity, CSSPropertyID::CSSPropertyFillOpacity
fill-rule, CSSPropertyID::CSSPropertyFillRule
filter, CSSPropertyID::CSSPropertyFilter
flex-basis, CSSPropertyID::CSSPropertyFlexBasis
flex-direction, CSSPropertyID::CSSPropertyFlexDirection
flex-grow, CSSPropertyID::CSSPropertyFlexGrow
flex-shrink, CSSPropertyID::CSSPropertyFlexShrink
flex-wrap, CSSPropertyID::CSSPropertyFlexWrap
float, CSSPropertyID::CSSPropertyFloat
flood-color, CSSPropertyID::CSSPropertyFloodColor
flood-opacity, CSSPropertyID::CSSPropertyFloodOpacity
font-display, CSSPropertyID::CSSPropertyFontDisplay
glyph-orientation-horizontal, CSSPropertyID::CSSPropertyGlyphOrientationHorizontal
glyph-orientation-vertical, CSSPropertyID::CSSPropertyGlyphOrientationVertical
grid-auto-columns, CSSPropertyID::CSSPropertyGridAutoColumns
grid-auto-flow, CSSPropertyID::CSSPropertyGridAutoFlow
grid-auto-rows, CSSPropertyID::CSSPropertyGridAutoRows
grid-column-end, CSSPropertyID::CSSPropertyGridColumnEnd
grid-column-start, CSSPropertyID::CSSPropertyGridColumnStart
grid-row-end, CSSPropertyID::CSSPropertyGridRowEnd
grid-row-start, CSSPropertyID::CSSPropertyGridRowStart
grid-template-areas, CSSPropertyID::CSSPropertyGridTemplateAreas
grid-template-columns, CSSPropertyID::CSSPropertyGridTemplateColumns
grid-template-rows, CSSPropertyID::CSSPropertyGridTemplateRows
hanging-punctuation, CSSPropertyID::CSSPropertyHangingPunctuation
hyphenate-character, CSSPropertyID::CSSPropertyHyphenateCharacter
hyphens, CSSPropertyID::CSSPropertyHyphens
image-orientation, CSSPropertyID::CSSPropertyImageOrientation
image-rendering, CSSPropertyID::CSSPropertyImageRendering
inherits, CSSPropertyID::CSSPropertyInherits
initial-value, CSSPropertyID::CSSPropertyInitialValue
input-security, CSSPropertyID::CSSPropertyInputSecurity
isolation, CSSPropertyID::CSSPropertyIsolation
justify-content, CSSPropertyID::CSSPropertyJustifyContent
justify-items, CSSPropertyID::CSSPropertyJustifyItems
justify-self, CSSPropertyID::CSSPropertyJustifySelf
lighting-color, CSSPropertyID::CSSPropertyLightingColor
line-break, CSSPropertyID::CSSPropertyLineBreak
line-fit-edge, CSSPropertyID::CSSPropertyLineFitEdge
line-height, CSSPropertyID::CSSPropertyLineHeight
list-style-image, CSSPropertyID::CSSPropertyListStyleImage
list-style-position, CSSPropertyID::CSSPropertyListStylePosition
list-style-type, CSSPropertyID::CSSPropertyListStyleType
margin-trim, CSSPropertyID::CSSPropertyMarginTrim
marker-end, CSSPropertyID::CSSPropertyMarkerEnd
marker-mid, CSSPropertyID::CSSPropertyMarkerMid
marker-start, CSSPropertyID::CSSPropertyMarkerStart
mask-border-outset, CSSPropertyID::CSSPropertyMaskBorderOutset
mask-border-repeat, CSSPropertyID::CSSPropertyMaskBorderRepeat
mask-border-slice, CSSPropertyID::CSSPropertyMaskBorderSlice
mask-border-source, CSSPropertyID::CSSPropertyMaskBorderSource
mask-border-width, CSSPropertyID::CSSPropertyMaskBorderWidth
mask-clip, CSSPropertyID::CSSPropertyMaskClip
mask-composite, CSSPropertyID::CSSPropertyMaskComposite
mask-image, CSSPropertyID::CSSPropertyMaskImage
mask-mode, CSSPropertyID::CSSPropertyMaskMode
mask-origin, CSSPropertyID::CSSPropertyMaskOrigin
mask-repeat, CSSPropertyID::CSSPropertyMaskRepeat
mask-size, CSSPropertyID::CSSPropertyMaskSize
mask-type, CSSPropertyID::CSSPropertyMaskType
math-style, CSSPropertyID::CSSPropertyMathStyle
max-lines, CSSPropertyID::CSSPropertyMaxLines
mix-blend-mode, CSSPropertyID::CSSPropertyMixBlendMode
navigation, CSSPropertyID::CSSPropertyNavigation
negative, CSSPropertyID::CSSPropertyNegative
object-fit, CSSPropertyID::CSSPropertyObjectFit
object-position, CSSPropertyID::CSSPropertyObjectPosition
offset-anchor, CSSPropertyID::CSSPropertyOffsetAnchor
offset-distance, CSSPropertyID::CSSPropertyOffsetDistance
offset-path, CSSPropertyID::CSSPropertyOffsetPath
offset-position, CSSPropertyID::CSSPropertyOffsetPosition
offset-rotate, CSSPropertyID::CSSPropertyOffsetRotate
opacity, CSSPropertyID::CSSPropertyOpacity
order, CSSPropertyID::CSSPropertyOrder
orphans, CSSPropertyID::CSSPropertyOrphans
outline-color, CSSPropertyID::CSSPropertyOutlineColor
outline-offset, CSSPropertyID::CSSPropertyOutlineOffset
outline-style, CSSPropertyID::CSSPropertyOutlineStyle
outline-width, CSSPropertyID::CSSPropertyOutlineWidth
overflow-anchor, CSSPropertyID::CSSPropertyOverflowAnchor
overflow-wrap, CSSPropertyID::CSSPropertyOverflowWrap
override-colors, CSSPropertyID::CSSPropertyOverrideColors
pad, CSSPropertyID::CSSPropertyPad
page, CSSPropertyID::CSSPropertyPage
paint-order, CSSPropertyID::CSSPropertyPaintOrder
perspective, CSSPropertyID::CSSPropertyPerspective
perspective-origin-x, CSSPropertyID::CSSPropertyPerspectiveOriginX
perspective-origin-y, CSSPropertyID::CSSPropertyPerspectiveOriginY
pointer-events, CSSPropertyID::CSSPropertyPointerEvents
position, CSSPropertyID::CSSPropertyPosition
position-anchor, CSSPropertyID::CSSPropertyPositionAnchor
position-area, CSSPropertyID::CSSPropertyPositionArea
position-try-fallbacks, CSSPropertyID::CSSPropertyPositionTryFallbacks
position-try-order, CSSPropertyID::CSSPropertyPositionTryOrder
position-visibility, CSSPropertyID::CSSPropertyPositionVisibility
prefix, CSSPropertyID::CSSPropertyPrefix
print-color-adjust, CSSPropertyID::CSSPropertyPrintColorAdjust
quotes, CSSPropertyID::CSSPropertyQuotes
r, CSSPropertyID::CSSPropertyR
range, CSSPropertyID::CSSPropertyRange
resize, CSSPropertyID::CSSPropertyResize
rotate, CSSPropertyID::CSSPropertyRotate
row-gap, CSSPropertyID::CSSPropertyRowGap
ruby-align, CSSPropertyID::CSSPropertyRubyAlign
ruby-overhang, CSSPropertyID::CSSPropertyRubyOverhang
rx, CSSPropertyID::CSSPropertyRx
ry, CSSPropertyID::CSSPropertyRy
scale, CSSPropertyID::CSSPropertyScale
scroll-behavior, CSSPropertyID::CSSPropertyScrollBehavior
scroll-snap-align, CSSPropertyID::CSSPropertyScrollSnapAlign
scroll-snap-stop, CSSPropertyID::CSSPropertyScrollSnapStop
scroll-snap-type, CSSPropertyID::CSSPropertyScrollSnapType
scroll-timeline-axis, CSSPropertyID::CSSPropertyScrollTimelineAxis
scroll-timeline-name, CSSPropertyID::CSSPropertyScrollTimelineName
scrollbar-color, CSSPropertyID::CSSPropertyScrollbarColor
scrollbar-gutter, CSSPropertyID::CSSPropertyScrollbarGutter
scrollbar-width, CSSPropertyID::CSSPropertyScrollbarWidth
shape-image-threshold, CSSPropertyID::CSSPropertyShapeImageThreshold
shape-margin, CSSPropertyID::CSSPropertyShapeMargin
shape-outside, CSSPropertyID::CSSPropertyShapeOutside
shape-rendering, CSSPropertyID::CSSPropertyShapeRendering
size, CSSPropertyID::CSSPropertySize
size-adjust, CSSPropertyID::CSSPropertySizeAdjust
speak-as, CSSPropertyID::CSSPropertySpeakAs
src, CSSPropertyID::CSSPropertySrc
stop-color, CSSPropertyID::CSSPropertyStopColor
stop-opacity, CSSPropertyID::CSSPropertyStopOpacity
stroke, CSSPropertyID::CSSPropertyStroke
stroke-color, CSSPropertyID::CSSPropertyStrokeColor
stroke-dasharray, CSSPropertyID::CSSPropertyStrokeDasharray
stroke-dashoffset, CSSPropertyID::CSSPropertyStrokeDashoffset
stroke-linecap, CSSPropertyID::CSSPropertyStrokeLinecap
stroke-linejoin, CSSPropertyID::CSSPropertyStrokeLinejoin
stroke-miterlimit, CSSPropertyID::CSSPropertyStrokeMiterlimit
stroke-opacity, CSSPropertyID::CSSPropertyStrokeOpacity
stroke-width, CSSPropertyID::CSSPropertyStrokeWidth
suffix, CSSPropertyID::CSSPropertySuffix
symbols, CSSPropertyID::CSSPropertySymbols
syntax, CSSPropertyID::CSSPropertySyntax
system, CSSPropertyID::CSSPropertySystem
tab-size, CSSPropertyID::CSSPropertyTabSize
table-layout, CSSPropertyID::CSSPropertyTableLayout
text-align, CSSPropertyID::CSSPropertyTextAlign
text-align-last, CSSPropertyID::CSSPropertyTextAlignLast
text-anchor, CSSPropertyID::CSSPropertyTextAnchor
text-box-edge, CSSPropertyID::CSSPropertyTextBoxEdge
text-box-trim, CSSPropertyID::CSSPropertyTextBoxTrim
text-combine-upright, CSSPropertyID::CSSPropertyTextCombineUpright
text-decoration-color, CSSPropertyID::CSSPropertyTextDecorationColor
text-decoration-line, CSSPropertyID::CSSPropertyTextDecorationLine
text-decoration-skip-ink, CSSPropertyID::CSSPropertyTextDecorationSkipInk
text-decoration-style, CSSPropertyID::CSSPropertyTextDecorationStyle
text-decoration-thickness, CSSPropertyID::CSSPropertyTextDecorationThickness
text-emphasis-color, CSSPropertyID::CSSPropertyTextEmphasisColor
text-emphasis-position, CSSPropertyID::CSSPropertyTextEmphasisPosition
text-emphasis-style, CSSPropertyID::CSSPropertyTextEmphasisStyle
text-group-align, CSSPropertyID::CSSPropertyTextGroupAlign
text-indent, CSSPropertyID::CSSPropertyTextIndent
text-justify, CSSPropertyID::CSSPropertyTextJustify
text-overflow, CSSPropertyID::CSSPropertyTextOverflow
text-shadow, CSSPropertyID::CSSPropertyTextShadow
text-transform, CSSPropertyID::CSSPropertyTextTransform
text-underline-offset, CSSPropertyID::CSSPropertyTextUnderlineOffset
text-underline-position, CSSPropertyID::CSSPropertyTextUnderlinePosition
text-wrap-mode, CSSPropertyID::CSSPropertyTextWrapMode
text-wrap-style, CSSPropertyID::CSSPropertyTextWrapStyle
timeline-scope, CSSPropertyID::CSSPropertyTimelineScope
touch-action, CSSPropertyID::CSSPropertyTouchAction
transform, CSSPropertyID::CSSPropertyTransform
transform-box, CSSPropertyID::CSSPropertyTransformBox
transform-origin-x, CSSPropertyID::CSSPropertyTransformOriginX
transform-origin-y, CSSPropertyID::CSSPropertyTransformOriginY
transform-origin-z, CSSPropertyID::CSSPropertyTransformOriginZ
transform-style, CSSPropertyID::CSSPropertyTransformStyle
transition-behavior, CSSPropertyID::CSSPropertyTransitionBehavior
transition-delay, CSSPropertyID::CSSPropertyTransitionDelay
transition-duration, CSSPropertyID::CSSPropertyTransitionDuration
transition-property, CSSPropertyID::CSSPropertyTransitionProperty
transition-timing-function, CSSPropertyID::CSSPropertyTransitionTimingFunction
translate, CSSPropertyID::CSSPropertyTranslate
types, CSSPropertyID::CSSPropertyTypes
unicode-bidi, CSSPropertyID::CSSPropertyUnicodeBidi
unicode-range, CSSPropertyID::CSSPropertyUnicodeRange
vector-effect, CSSPropertyID::CSSPropertyVectorEffect
vertical-align, CSSPropertyID::CSSPropertyVerticalAlign
view-timeline-axis, CSSPropertyID::CSSPropertyViewTimelineAxis
view-timeline-inset, CSSPropertyID::CSSPropertyViewTimelineInset
view-timeline-name, CSSPropertyID::CSSPropertyViewTimelineName
view-transition-class, CSSPropertyID::CSSPropertyViewTransitionClass
view-transition-name, CSSPropertyID::CSSPropertyViewTransitionName
visibility, CSSPropertyID::CSSPropertyVisibility
white-space-collapse, CSSPropertyID::CSSPropertyWhiteSpaceCollapse
widows, CSSPropertyID::CSSPropertyWidows
will-change, CSSPropertyID::CSSPropertyWillChange
word-break, CSSPropertyID::CSSPropertyWordBreak
x, CSSPropertyID::CSSPropertyX
y, CSSPropertyID::CSSPropertyY
z-index, CSSPropertyID::CSSPropertyZIndex
-apple-color-filter, CSSPropertyID::CSSPropertyAppleColorFilter
-webkit-backdrop-filter, CSSPropertyID::CSSPropertyWebkitBackdropFilter
-webkit-background-clip, CSSPropertyID::CSSPropertyWebkitBackgroundClip
-webkit-background-origin, CSSPropertyID::CSSPropertyWebkitBackgroundOrigin
-webkit-border-horizontal-spacing, CSSPropertyID::CSSPropertyWebkitBorderHorizontalSpacing
-webkit-border-vertical-spacing, CSSPropertyID::CSSPropertyWebkitBorderVerticalSpacing
-webkit-box-align, CSSPropertyID::CSSPropertyWebkitBoxAlign
-webkit-box-decoration-break, CSSPropertyID::CSSPropertyWebkitBoxDecorationBreak
-webkit-box-direction, CSSPropertyID::CSSPropertyWebkitBoxDirection
-webkit-box-flex, CSSPropertyID::CSSPropertyWebkitBoxFlex
-webkit-box-flex-group, CSSPropertyID::CSSPropertyWebkitBoxFlexGroup
-webkit-box-lines, CSSPropertyID::CSSPropertyWebkitBoxLines
-webkit-box-ordinal-group, CSSPropertyID::CSSPropertyWebkitBoxOrdinalGroup
-webkit-box-orient, CSSPropertyID::CSSPropertyWebkitBoxOrient
-webkit-box-pack, CSSPropertyID::CSSPropertyWebkitBoxPack
-webkit-box-reflect, CSSPropertyID::CSSPropertyWebkitBoxReflect
-webkit-box-shadow, CSSPropertyID::CSSPropertyWebkitBoxShadow
-webkit-column-axis, CSSPropertyID::CSSPropertyWebkitColumnAxis
-webkit-column-progression, CSSPropertyID::CSSPropertyWebkitColumnProgression
-webkit-cursor-visibility, CSSPropertyID::CSSPropertyWebkitCursorVisibility
-webkit-font-size-delta, CSSPropertyID::CSSPropertyWebkitFontSizeDelta
-webkit-hyphenate-limit-after, CSSPropertyID::CSSPropertyWebkitHyphenateLimitAfter
-webkit-hyphenate-limit-before, CSSPropertyID::CSSPropertyWebkitHyphenateLimitBefore
-webkit-hyphenate-limit-lines, CSSPropertyID::CSSPropertyWebkitHyphenateLimitLines
-webkit-initial-letter, CSSPropertyID::CSSPropertyWebkitInitialLetter
-webkit-line-align, CSSPropertyID::CSSPropertyWebkitLineAlign
-webkit-line-box-contain, CSSPropertyID::CSSPropertyWebkitLineBoxContain
-webkit-line-clamp, CSSPropertyID::CSSPropertyWebkitLineClamp
-webkit-line-grid, CSSPropertyID::CSSPropertyWebkitLineGrid
-webkit-line-snap, CSSPropertyID::CSSPropertyWebkitLineSnap
-webkit-marquee-direction, CSSPropertyID::CSSPropertyWebkitMarqueeDirection
-webkit-marquee-increment, CSSPropertyID::CSSPropertyWebkitMarqueeIncrement
-webkit-marquee-repetition, CSSPropertyID::CSSPropertyWebkitMarqueeRepetition
-webkit-marquee-speed, CSSPropertyID::CSSPropertyWebkitMarqueeSpeed
-webkit-marquee-style, CSSPropertyID::CSSPropertyWebkitMarqueeStyle
-webkit-mask-clip, CSSPropertyID::CSSPropertyWebkitMaskClip
-webkit-mask-composite, CSSPropertyID::CSSPropertyWebkitMaskComposite
-webkit-mask-position-x, CSSPropertyID::CSSPropertyWebkitMaskPositionX
-webkit-mask-position-y, CSSPropertyID::CSSPropertyWebkitMaskPositionY
-webkit-mask-source-type, CSSPropertyID::CSSPropertyWebkitMaskSourceType
-webkit-nbsp-mode, CSSPropertyID::CSSPropertyWebkitNbspMode
-webkit-rtl-ordering, CSSPropertyID::CSSPropertyWebkitRtlOrdering
-webkit-ruby-position, CSSPropertyID::CSSPropertyWebkitRubyPosition
-webkit-text-combine, CSSPropertyID::CSSPropertyWebkitTextCombine
-webkit-text-decorations-in-effect, CSSPropertyID::CSSPropertyWebkitTextDecorationsInEffect
-webkit-text-fill-color, CSSPropertyID::CSSPropertyWebkitTextFillColor
-webkit-text-security, CSSPropertyID::CSSPropertyWebkitTextSecurity
-webkit-text-stroke-color, CSSPropertyID::CSSPropertyWebkitTextStrokeColor
-webkit-text-stroke-width, CSSPropertyID::CSSPropertyWebkitTextStrokeWidth
-webkit-user-drag, CSSPropertyID::CSSPropertyWebkitUserDrag
-webkit-user-modify, CSSPropertyID::CSSPropertyWebkitUserModify
-webkit-user-select, CSSPropertyID::CSSPropertyWebkitUserSelect
word-spacing, CSSPropertyID::CSSPropertyWordSpacing
border-bottom-color, CSSPropertyID::CSSPropertyBorderBottomColor
border-bottom-left-radius, CSSPropertyID::CSSPropertyBorderBottomLeftRadius
border-bottom-right-radius, CSSPropertyID::CSSPropertyBorderBottomRightRadius
border-bottom-style, CSSPropertyID::CSSPropertyBorderBottomStyle
border-bottom-width, CSSPropertyID::CSSPropertyBorderBottomWidth
border-left-color, CSSPropertyID::CSSPropertyBorderLeftColor
border-left-style, CSSPropertyID::CSSPropertyBorderLeftStyle
border-left-width, CSSPropertyID::CSSPropertyBorderLeftWidth
border-right-color, CSSPropertyID::CSSPropertyBorderRightColor
border-right-style, CSSPropertyID::CSSPropertyBorderRightStyle
border-right-width, CSSPropertyID::CSSPropertyBorderRightWidth
border-top-color, CSSPropertyID::CSSPropertyBorderTopColor
border-top-left-radius, CSSPropertyID::CSSPropertyBorderTopLeftRadius
border-top-right-radius, CSSPropertyID::CSSPropertyBorderTopRightRadius
border-top-style, CSSPropertyID::CSSPropertyBorderTopStyle
border-top-width, CSSPropertyID::CSSPropertyBorderTopWidth
bottom, CSSPropertyID::CSSPropertyBottom
contain-intrinsic-height, CSSPropertyID::CSSPropertyContainIntrinsicHeight
contain-intrinsic-width, CSSPropertyID::CSSPropertyContainIntrinsicWidth
corner-bottom-left-shape, CSSPropertyID::CSSPropertyCornerBottomLeftShape
corner-bottom-right-shape, CSSPropertyID::CSSPropertyCornerBottomRightShape
corner-top-left-shape, CSSPropertyID::CSSPropertyCornerTopLeftShape
corner-top-right-shape, CSSPropertyID::CSSPropertyCornerTopRightShape
height, CSSPropertyID::CSSPropertyHeight
left, CSSPropertyID::CSSPropertyLeft
margin-bottom, CSSPropertyID::CSSPropertyMarginBottom
margin-left, CSSPropertyID::CSSPropertyMarginLeft
margin-right, CSSPropertyID::CSSPropertyMarginRight
margin-top, CSSPropertyID::CSSPropertyMarginTop
max-height, CSSPropertyID::CSSPropertyMaxHeight
max-width, CSSPropertyID::CSSPropertyMaxWidth
min-height, CSSPropertyID::CSSPropertyMinHeight
min-width, CSSPropertyID::CSSPropertyMinWidth
overflow-x, CSSPropertyID::CSSPropertyOverflowX
overflow-y, CSSPropertyID::CSSPropertyOverflowY
overscroll-behavior-x, CSSPropertyID::CSSPropertyOverscrollBehaviorX
overscroll-behavior-y, CSSPropertyID::CSSPropertyOverscrollBehaviorY
padding-bottom, CSSPropertyID::CSSPropertyPaddingBottom
padding-left, CSSPropertyID::CSSPropertyPaddingLeft
padding-right, CSSPropertyID::CSSPropertyPaddingRight
padding-top, CSSPropertyID::CSSPropertyPaddingTop
right, CSSPropertyID::CSSPropertyRight
scroll-margin-bottom, CSSPropertyID::CSSPropertyScrollMarginBottom
scroll-margin-left, CSSPropertyID::CSSPropertyScrollMarginLeft
scroll-margin-right, CSSPropertyID::CSSPropertyScrollMarginRight
scroll-margin-top, CSSPropertyID::CSSPropertyScrollMarginTop
scroll-padding-bottom, CSSPropertyID::CSSPropertyScrollPaddingBottom
scroll-padding-left, CSSPropertyID::CSSPropertyScrollPaddingLeft
scroll-padding-right, CSSPropertyID::CSSPropertyScrollPaddingRight
scroll-padding-top, CSSPropertyID::CSSPropertyScrollPaddingTop
top, CSSPropertyID::CSSPropertyTop
width, CSSPropertyID::CSSPropertyWidth
block-size, CSSPropertyID::CSSPropertyBlockSize
border-block-end-color, CSSPropertyID::CSSPropertyBorderBlockEndColor
border-block-end-style, CSSPropertyID::CSSPropertyBorderBlockEndStyle
border-block-end-width, CSSPropertyID::CSSPropertyBorderBlockEndWidth
border-block-start-color, CSSPropertyID::CSSPropertyBorderBlockStartColor
border-block-start-style, CSSPropertyID::CSSPropertyBorderBlockStartStyle
border-block-start-width, CSSPropertyID::CSSPropertyBorderBlockStartWidth
border-end-end-radius, CSSPropertyID::CSSPropertyBorderEndEndRadius
border-end-start-radius, CSSPropertyID::CSSPropertyBorderEndStartRadius
border-inline-end-color, CSSPropertyID::CSSPropertyBorderInlineEndColor
border-inline-end-style, CSSPropertyID::CSSPropertyBorderInlineEndStyle
border-inline-end-width, CSSPropertyID::CSSPropertyBorderInlineEndWidth
border-inline-start-color, CSSPropertyID::CSSPropertyBorderInlineStartColor
border-inline-start-style, CSSPropertyID::CSSPropertyBorderInlineStartStyle
border-inline-start-width, CSSPropertyID::CSSPropertyBorderInlineStartWidth
border-start-end-radius, CSSPropertyID::CSSPropertyBorderStartEndRadius
border-start-start-radius, CSSPropertyID::CSSPropertyBorderStartStartRadius
contain-intrinsic-block-size, CSSPropertyID::CSSPropertyContainIntrinsicBlockSize
contain-intrinsic-inline-size, CSSPropertyID::CSSPropertyContainIntrinsicInlineSize
corner-end-end-shape, CSSPropertyID::CSSPropertyCornerEndEndShape
corner-end-start-shape, CSSPropertyID::CSSPropertyCornerEndStartShape
corner-start-end-shape, CSSPropertyID::CSSPropertyCornerStartEndShape
corner-start-start-shape, CSSPropertyID::CSSPropertyCornerStartStartShape
inline-size, CSSPropertyID::CSSPropertyInlineSize
inset-block-end, CSSPropertyID::CSSPropertyInsetBlockEnd
inset-block-start, CSSPropertyID::CSSPropertyInsetBlockStart
inset-inline-end, CSSPropertyID::CSSPropertyInsetInlineEnd
inset-inline-start, CSSPropertyID::CSSPropertyInsetInlineStart
margin-block-end, CSSPropertyID::CSSPropertyMarginBlockEnd
margin-block-start, CSSPropertyID::CSSPropertyMarginBlockStart
margin-inline-end, CSSPropertyID::CSSPropertyMarginInlineEnd
margin-inline-start, CSSPropertyID::CSSPropertyMarginInlineStart
max-block-size, CSSPropertyID::CSSPropertyMaxBlockSize
max-inline-size, CSSPropertyID::CSSPropertyMaxInlineSize
min-block-size, CSSPropertyID::CSSPropertyMinBlockSize
min-inline-size, CSSPropertyID::CSSPropertyMinInlineSize
overflow-block, CSSPropertyID::CSSPropertyOverflowBlock
overflow-inline, CSSPropertyID::CSSPropertyOverflowInline
overscroll-behavior-block, CSSPropertyID::CSSPropertyOverscrollBehaviorBlock
overscroll-behavior-inline, CSSPropertyID::CSSPropertyOverscrollBehaviorInline
padding-block-end, CSSPropertyID::CSSPropertyPaddingBlockEnd
padding-block-start, CSSPropertyID::CSSPropertyPaddingBlockStart
padding-inline-end, CSSPropertyID::CSSPropertyPaddingInlineEnd
padding-inline-start, CSSPropertyID::CSSPropertyPaddingInlineStart
scroll-margin-block-end, CSSPropertyID::CSSPropertyScrollMarginBlockEnd
scroll-margin-block-start, CSSPropertyID::CSSPropertyScrollMarginBlockStart
scroll-margin-inline-end, CSSPropertyID::CSSPropertyScrollMarginInlineEnd
scroll-margin-inline-start, CSSPropertyID::CSSPropertyScrollMarginInlineStart
scroll-padding-block-end, CSSPropertyID::CSSPropertyScrollPaddingBlockEnd
scroll-padding-block-start, CSSPropertyID::CSSPropertyScrollPaddingBlockStart
scroll-padding-inline-end, CSSPropertyID::CSSPropertyScrollPaddingInlineEnd
scroll-padding-inline-start, CSSPropertyID::CSSPropertyScrollPaddingInlineStart
all, CSSPropertyID::CSSPropertyAll
animation, CSSPropertyID::CSSPropertyAnimation
animation-range, CSSPropertyID::CSSPropertyAnimationRange
background, CSSPropertyID::CSSPropertyBackground
background-position, CSSPropertyID::CSSPropertyBackgroundPosition
block-step, CSSPropertyID::CSSPropertyBlockStep
border, CSSPropertyID::CSSPropertyBorder
border-block, CSSPropertyID::CSSPropertyBorderBlock
border-block-color, CSSPropertyID::CSSPropertyBorderBlockColor
border-block-end, CSSPropertyID::CSSPropertyBorderBlockEnd
border-block-start, CSSPropertyID::CSSPropertyBorderBlockStart
border-block-style, CSSPropertyID::CSSPropertyBorderBlockStyle
border-block-width, CSSPropertyID::CSSPropertyBorderBlockWidth
border-bottom, CSSPropertyID::CSSPropertyBorderBottom
border-color, CSSPropertyID::CSSPropertyBorderColor
border-image, CSSPropertyID::CSSPropertyBorderImage
border-inline, CSSPropertyID::CSSPropertyBorderInline
border-inline-color, CSSPropertyID::CSSPropertyBorderInlineColor
border-inline-end, CSSPropertyID::CSSPropertyBorderInlineEnd
border-inline-start, CSSPropertyID::CSSPropertyBorderInlineStart
border-inline-style, CSSPropertyID::CSSPropertyBorderInlineStyle
border-inline-width, CSSPropertyID::CSSPropertyBorderInlineWidth
border-left, CSSPropertyID::CSSPropertyBorderLeft
border-radius, CSSPropertyID::CSSPropertyBorderRadius
border-right, CSSPropertyID::CSSPropertyBorderRight
border-spacing, CSSPropertyID::CSSPropertyBorderSpacing
border-style, CSSPropertyID::CSSPropertyBorderStyle
border-top, CSSPropertyID::CSSPropertyBorderTop
border-width, CSSPropertyID::CSSPropertyBorderWidth
column-rule, CSSPropertyID::CSSPropertyColumnRule
columns, CSSPropertyID::CSSPropertyColumns
contain-intrinsic-size, CSSPropertyID::CSSPropertyContainIntrinsicSize
container, CSSPropertyID::CSSPropertyContainer
corner-shape, CSSPropertyID::CSSPropertyCornerShape
flex, CSSPropertyID::CSSPropertyFlex
flex-flow, CSSPropertyID::CSSPropertyFlexFlow
font, CSSPropertyID::CSSPropertyFont
font-synthesis, CSSPropertyID::CSSPropertyFontSynthesis
font-variant, CSSPropertyID::CSSPropertyFontVariant
gap, CSSPropertyID::CSSPropertyGap
grid, CSSPropertyID::CSSPropertyGrid
grid-area, CSSPropertyID::CSSPropertyGridArea
grid-column, CSSPropertyID::CSSPropertyGridColumn
grid-row, CSSPropertyID::CSSPropertyGridRow
grid-template, CSSPropertyID::CSSPropertyGridTemplate
inset, CSSPropertyID::CSSPropertyInset
inset-block, CSSPropertyID::CSSPropertyInsetBlock
inset-inline, CSSPropertyID::CSSPropertyInsetInline
line-clamp, CSSPropertyID::CSSPropertyLineClamp
list-style, CSSPropertyID::CSSPropertyListStyle
margin, CSSPropertyID::CSSPropertyMargin
margin-block, CSSPropertyID::CSSPropertyMarginBlock
margin-inline, CSSPropertyID::CSSPropertyMarginInline
marker, CSSPropertyID::CSSPropertyMarker
mask, CSSPropertyID::CSSPropertyMask
mask-border, CSSPropertyID::CSSPropertyMaskBorder
mask-position, CSSPropertyID::CSSPropertyMaskPosition
offset, CSSPropertyID::CSSPropertyOffset
outline, CSSPropertyID::CSSPropertyOutline
overflow, CSSPropertyID::CSSPropertyOverflow
overscroll-behavior, CSSPropertyID::CSSPropertyOverscrollBehavior
padding, CSSPropertyID::CSSPropertyPadding
padding-block, CSSPropertyID::CSSPropertyPaddingBlock
padding-inline, CSSPropertyID::CSSPropertyPaddingInline
page-break-after, CSSPropertyID::CSSPropertyPageBreakAfter
page-break-before, CSSPropertyID::CSSPropertyPageBreakBefore
page-break-inside, CSSPropertyID::CSSPropertyPageBreakInside
perspective-origin, CSSPropertyID::CSSPropertyPerspectiveOrigin
place-content, CSSPropertyID::CSSPropertyPlaceContent
place-items, CSSPropertyID::CSSPropertyPlaceItems
place-self, CSSPropertyID::CSSPropertyPlaceSelf
position-try, CSSPropertyID::CSSPropertyPositionTry
scroll-margin, CSSPropertyID::CSSPropertyScrollMargin
scroll-margin-block, CSSPropertyID::CSSPropertyScrollMarginBlock
scroll-margin-inline, CSSPropertyID::CSSPropertyScrollMarginInline
scroll-padding, CSSPropertyID::CSSPropertyScrollPadding
scroll-padding-block, CSSPropertyID::CSSPropertyScrollPaddingBlock
scroll-padding-inline, CSSPropertyID::CSSPropertyScrollPaddingInline
scroll-timeline, CSSPropertyID::CSSPropertyScrollTimeline
text-box, CSSPropertyID::CSSPropertyTextBox
text-decoration, CSSPropertyID::CSSPropertyTextDecoration
text-decoration-skip, CSSPropertyID::CSSPropertyTextDecorationSkip
text-emphasis, CSSPropertyID::CSSPropertyTextEmphasis
text-wrap, CSSPropertyID::CSSPropertyTextWrap
transform-origin, CSSPropertyID::CSSPropertyTransformOrigin
transition, CSSPropertyID::CSSPropertyTransition
view-timeline, CSSPropertyID::CSSPropertyViewTimeline
white-space, CSSPropertyID::CSSPropertyWhiteSpace
-webkit-background-size, CSSPropertyID::CSSPropertyWebkitBackgroundSize
-webkit-border-image, CSSPropertyID::CSSPropertyWebkitBorderImage
-webkit-border-radius, CSSPropertyID::CSSPropertyWebkitBorderRadius
-webkit-column-break-after, CSSPropertyID::CSSPropertyWebkitColumnBreakAfter
-webkit-column-break-before, CSSPropertyID::CSSPropertyWebkitColumnBreakBefore
-webkit-column-break-inside, CSSPropertyID::CSSPropertyWebkitColumnBreakInside
-webkit-mask, CSSPropertyID::CSSPropertyWebkitMask
-webkit-mask-box-image, CSSPropertyID::CSSPropertyWebkitMaskBoxImage
-webkit-mask-position, CSSPropertyID::CSSPropertyWebkitMaskPosition
-webkit-perspective, CSSPropertyID::CSSPropertyWebkitPerspective
-webkit-text-decoration, CSSPropertyID::CSSPropertyWebkitTextDecoration
-webkit-text-orientation, CSSPropertyID::CSSPropertyWebkitTextOrientation
-webkit-text-stroke, CSSPropertyID::CSSPropertyWebkitTextStroke
supported-color-schemes, CSSPropertyID::CSSPropertyColorScheme
-webkit-writing-mode, CSSPropertyID::CSSPropertyWritingMode
-epub-writing-mode, CSSPropertyID::CSSPropertyWritingMode
-webkit-font-kerning, CSSPropertyID::CSSPropertyFontKerning
font-stretch, CSSPropertyID::CSSPropertyFontWidth
-webkit-align-content, CSSPropertyID::CSSPropertyAlignContent
-webkit-align-items, CSSPropertyID::CSSPropertyAlignItems
-webkit-align-self, CSSPropertyID::CSSPropertyAlignSelf
-webkit-animation-delay, CSSPropertyID::CSSPropertyAnimationDelay
-webkit-animation-direction, CSSPropertyID::CSSPropertyAnimationDirection
-webkit-animation-duration, CSSPropertyID::CSSPropertyAnimationDuration
-webkit-animation-fill-mode, CSSPropertyID::CSSPropertyAnimationFillMode
-webkit-animation-iteration-count, CSSPropertyID::CSSPropertyAnimationIterationCount
-webkit-animation-name, CSSPropertyID::CSSPropertyAnimationName
-webkit-animation-play-state, CSSPropertyID::CSSPropertyAnimationPlayState
-webkit-animation-timing-function, CSSPropertyID::CSSPropertyAnimationTimingFunction
-webkit-appearance, CSSPropertyID::CSSPropertyAppearance
-webkit-backface-visibility, CSSPropertyID::CSSPropertyBackfaceVisibility
-webkit-box-sizing, CSSPropertyID::CSSPropertyBoxSizing
-epub-caption-side, CSSPropertyID::CSSPropertyCaptionSide
-webkit-clip-path, CSSPropertyID::CSSPropertyClipPath
-webkit-column-count, CSSPropertyID::CSSPropertyColumnCount
-webkit-column-fill, CSSPropertyID::CSSPropertyColumnFill
grid-column-gap, CSSPropertyID::CSSPropertyColumnGap
-webkit-column-gap, CSSPropertyID::CSSPropertyColumnGap
-webkit-column-rule-color, CSSPropertyID::CSSPropertyColumnRuleColor
-webkit-column-rule-style, CSSPropertyID::CSSPropertyColumnRuleStyle
-webkit-column-rule-width, CSSPropertyID::CSSPropertyColumnRuleWidth
-webkit-column-span, CSSPropertyID::CSSPropertyColumnSpan
-webkit-column-width, CSSPropertyID::CSSPropertyColumnWidth
-webkit-filter, CSSPropertyID::CSSPropertyFilter
-webkit-flex-basis, CSSPropertyID::CSSPropertyFlexBasis
-webkit-flex-direction, CSSPropertyID::CSSPropertyFlexDirection
-webkit-flex-grow, CSSPropertyID::CSSPropertyFlexGrow
-webkit-flex-shrink, CSSPropertyID::CSSPropertyFlexShrink
-webkit-flex-wrap, CSSPropertyID::CSSPropertyFlexWrap
-webkit-hyphenate-character, CSSPropertyID::CSSPropertyHyphenateCharacter
-epub-hyphens, CSSPropertyID::CSSPropertyHyphens
-webkit-hyphens, CSSPropertyID::CSSPropertyHyphens
-webkit-justify-content, CSSPropertyID::CSSPropertyJustifyContent
-webkit-justify-items, CSSPropertyID::CSSPropertyJustifyItems
-webkit-line-break, CSSPropertyID::CSSPropertyLineBreak
-webkit-mask-box-image-outset, CSSPropertyID::CSSPropertyMaskBorderOutset
-webkit-mask-box-image-repeat, CSSPropertyID::CSSPropertyMaskBorderRepeat
-webkit-mask-box-image-slice, CSSPropertyID::CSSPropertyMaskBorderSlice
-webkit-mask-box-image-source, CSSPropertyID::CSSPropertyMaskBorderSource
-webkit-mask-box-image-width, CSSPropertyID::CSSPropertyMaskBorderWidth
-webkit-mask-image, CSSPropertyID::CSSPropertyMaskImage
-webkit-mask-origin, CSSPropertyID::CSSPropertyMaskOrigin
-webkit-mask-repeat, CSSPropertyID::CSSPropertyMaskRepeat
-webkit-mask-size, CSSPropertyID::CSSPropertyMaskSize
-webkit-opacity, CSSPropertyID::CSSPropertyOpacity
-webkit-order, CSSPropertyID::CSSPropertyOrder
word-wrap, CSSPropertyID::CSSPropertyOverflowWrap
-webkit-perspective-origin-x, CSSPropertyID::CSSPropertyPerspectiveOriginX
-webkit-perspective-origin-y, CSSPropertyID::CSSPropertyPerspectiveOriginY
-webkit-print-color-adjust, CSSPropertyID::CSSPropertyPrintColorAdjust
color-adjust, CSSPropertyID::CSSPropertyPrintColorAdjust
grid-row-gap, CSSPropertyID::CSSPropertyRowGap
-webkit-shape-image-threshold, CSSPropertyID::CSSPropertyShapeImageThreshold
-webkit-shape-margin, CSSPropertyID::CSSPropertyShapeMargin
-webkit-shape-outside, CSSPropertyID::CSSPropertyShapeOutside
-webkit-text-decoration-color, CSSPropertyID::CSSPropertyTextDecorationColor
-webkit-text-decoration-line, CSSPropertyID::CSSPropertyTextDecorationLine
-webkit-text-decoration-style, CSSPropertyID::CSSPropertyTextDecorationStyle
-epub-text-emphasis-color, CSSPropertyID::CSSPropertyTextEmphasisColor
-webkit-text-emphasis-color, CSSPropertyID::CSSPropertyTextEmphasisColor
-webkit-text-emphasis-position, CSSPropertyID::CSSPropertyTextEmphasisPosition
-epub-text-emphasis-style, CSSPropertyID::CSSPropertyTextEmphasisStyle
-webkit-text-emphasis-style, CSSPropertyID::CSSPropertyTextEmphasisStyle
-epub-text-transform, CSSPropertyID::CSSPropertyTextTransform
-webkit-text-underline-position, CSSPropertyID::CSSPropertyTextUnderlinePosition
-webkit-transform, CSSPropertyID::CSSPropertyTransform
-webkit-transform-origin-x, CSSPropertyID::CSSPropertyTransformOriginX
-webkit-transform-origin-y, CSSPropertyID::CSSPropertyTransformOriginY
-webkit-transform-origin-z, CSSPropertyID::CSSPropertyTransformOriginZ
-webkit-transform-style, CSSPropertyID::CSSPropertyTransformStyle
-webkit-transition-delay, CSSPropertyID::CSSPropertyTransitionDelay
-webkit-transition-duration, CSSPropertyID::CSSPropertyTransitionDuration
-webkit-transition-property, CSSPropertyID::CSSPropertyTransitionProperty
-webkit-transition-timing-function, CSSPropertyID::CSSPropertyTransitionTimingFunction
-epub-word-break, CSSPropertyID::CSSPropertyWordBreak
-epub-text-combine, CSSPropertyID::CSSPropertyWebkitTextCombine
-webkit-border-bottom-left-radius, CSSPropertyID::CSSPropertyBorderBottomLeftRadius
-webkit-border-bottom-right-radius, CSSPropertyID::CSSPropertyBorderBottomRightRadius
-webkit-border-top-left-radius, CSSPropertyID::CSSPropertyBorderTopLeftRadius
-webkit-border-top-right-radius, CSSPropertyID::CSSPropertyBorderTopRightRadius
scroll-snap-margin-bottom, CSSPropertyID::CSSPropertyScrollMarginBottom
scroll-snap-margin-left, CSSPropertyID::CSSPropertyScrollMarginLeft
scroll-snap-margin-right, CSSPropertyID::CSSPropertyScrollMarginRight
scroll-snap-margin-top, CSSPropertyID::CSSPropertyScrollMarginTop
-webkit-logical-height, CSSPropertyID::CSSPropertyBlockSize
-webkit-border-after-color, CSSPropertyID::CSSPropertyBorderBlockEndColor
-webkit-border-after-style, CSSPropertyID::CSSPropertyBorderBlockEndStyle
-webkit-border-after-width, CSSPropertyID::CSSPropertyBorderBlockEndWidth
-webkit-border-before-color, CSSPropertyID::CSSPropertyBorderBlockStartColor
-webkit-border-before-style, CSSPropertyID::CSSPropertyBorderBlockStartStyle
-webkit-border-before-width, CSSPropertyID::CSSPropertyBorderBlockStartWidth
-webkit-border-end-color, CSSPropertyID::CSSPropertyBorderInlineEndColor
-webkit-border-end-style, CSSPropertyID::CSSPropertyBorderInlineEndStyle
-webkit-border-end-width, CSSPropertyID::CSSPropertyBorderInlineEndWidth
-webkit-border-start-color, CSSPropertyID::CSSPropertyBorderInlineStartColor
-webkit-border-start-style, CSSPropertyID::CSSPropertyBorderInlineStartStyle
-webkit-border-start-width, CSSPropertyID::CSSPropertyBorderInlineStartWidth
-webkit-logical-width, CSSPropertyID::CSSPropertyInlineSize
-webkit-margin-after, CSSPropertyID::CSSPropertyMarginBlockEnd
-webkit-margin-before, CSSPropertyID::CSSPropertyMarginBlockStart
-webkit-margin-end, CSSPropertyID::CSSPropertyMarginInlineEnd
-webkit-margin-start, CSSPropertyID::CSSPropertyMarginInlineStart
-webkit-max-logical-height, CSSPropertyID::CSSPropertyMaxBlockSize
-webkit-max-logical-width, CSSPropertyID::CSSPropertyMaxInlineSize
-webkit-min-logical-height, CSSPropertyID::CSSPropertyMinBlockSize
-webkit-min-logical-width, CSSPropertyID::CSSPropertyMinInlineSize
-webkit-padding-after, CSSPropertyID::CSSPropertyPaddingBlockEnd
-webkit-padding-before, CSSPropertyID::CSSPropertyPaddingBlockStart
-webkit-padding-end, CSSPropertyID::CSSPropertyPaddingInlineEnd
-webkit-padding-start, CSSPropertyID::CSSPropertyPaddingInlineStart
-webkit-animation, CSSPropertyID::CSSPropertyAnimation
-webkit-border-after, CSSPropertyID::CSSPropertyBorderBlockEnd
-webkit-border-before, CSSPropertyID::CSSPropertyBorderBlockStart
-webkit-border-end, CSSPropertyID::CSSPropertyBorderInlineEnd
-webkit-border-start, CSSPropertyID::CSSPropertyBorderInlineStart
-webkit-column-rule, CSSPropertyID::CSSPropertyColumnRule
-webkit-columns, CSSPropertyID::CSSPropertyColumns
-webkit-flex, CSSPropertyID::CSSPropertyFlex
-webkit-flex-flow, CSSPropertyID::CSSPropertyFlexFlow
grid-gap, CSSPropertyID::CSSPropertyGap
-webkit-perspective-origin, CSSPropertyID::CSSPropertyPerspectiveOrigin
scroll-snap-margin, CSSPropertyID::CSSPropertyScrollMargin
-webkit-text-decoration-skip, CSSPropertyID::CSSPropertyTextDecorationSkip
-epub-text-emphasis, CSSPropertyID::CSSPropertyTextEmphasis
-webkit-text-emphasis, CSSPropertyID::CSSPropertyTextEmphasis
-webkit-transform-origin, CSSPropertyID::CSSPropertyTransformOrigin
-webkit-transition, CSSPropertyID::CSSPropertyTransition
-epub-text-orientation, CSSPropertyID::CSSPropertyWebkitTextOrientation
font-stretch, CSSPropertyID::CSSPropertyFontWidth
%%

CSSPropertyID findCSSProperty(const char* characters, unsigned length)
{
    auto* value = CSSPropertyNamesHash::in_word_set(characters, length);
    return value ? static_cast<CSSPropertyID>(value->id) : CSSPropertyID::CSSPropertyInvalid;
}

ASCIILiteral nameLiteral(CSSPropertyID id)
{
    if (id < firstCSSProperty)
        return { };
    unsigned index = id - firstCSSProperty;
    if (index >= numCSSProperties)
        return { };
    return propertyNameStrings[index];
}

const AtomString& nameString(CSSPropertyID id)
{
    if (id < firstCSSProperty)
        return nullAtom();
    unsigned index = id - firstCSSProperty;
    if (index >= numCSSProperties)
        return nullAtom();

    static NeverDestroyed<std::array<AtomString, numCSSProperties>> atomStrings;
    auto& string = atomStrings.get()[index];
    if (string.isNull())
        string = propertyNameStrings[index];
    return string;
}

String nameForIDL(CSSPropertyID id)
{
    LChar characters[maxCSSPropertyNameLength];
    const char* nameForCSS = nameLiteral(id);
    if (!nameForCSS)
        return emptyString();

    auto* propertyNamePointer = nameForCSS;
    auto* nextCharacter = characters;
    while (char character = *propertyNamePointer++) {
        if (character == '-') {
            char nextCharacter = *propertyNamePointer++;
            if (!nextCharacter)
                break;
            character = (propertyNamePointer - 2 != nameForCSS) ? toASCIIUpper(nextCharacter) : nextCharacter;
        }
        *nextCharacter++ = character;
    }
    return std::span<const LChar> { characters, nextCharacter };
}


bool isInternal(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyWebkitFontSizeDelta:
    case CSSPropertyID::CSSPropertyWebkitMarqueeDirection:
    case CSSPropertyID::CSSPropertyWebkitMarqueeIncrement:
    case CSSPropertyID::CSSPropertyWebkitMarqueeRepetition:
    case CSSPropertyID::CSSPropertyWebkitMarqueeSpeed:
    case CSSPropertyID::CSSPropertyWebkitMarqueeStyle:
        return true;
    default:
        return false;
    }
}

static bool isExposedNotInvalidAndNotInternal(CSSPropertyID id, const CSSPropertySettings& settings)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyFontVariantEmoji:
        return settings.cssFontVariantEmojiEnabled;
    case CSSPropertyID::CSSPropertyTextAutospace:
        return settings.cssTextAutospaceEnabled;
    case CSSPropertyID::CSSPropertyTextSpacingTrim:
        return settings.cssTextSpacingTrimEnabled;
    case CSSPropertyID::CSSPropertyAccentColor:
        return settings.accentColorEnabled;
    case CSSPropertyID::CSSPropertyAnchorName:
        return settings.cssAnchorPositioningEnabled;
    case CSSPropertyID::CSSPropertyAnchorScope:
        return settings.cssAnchorPositioningEnabled;
    case CSSPropertyID::CSSPropertyAnimationRangeEnd:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyAnimationRangeStart:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyAnimationTimeline:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyBackdropFilter:
        return settings.cssUnprefixedBackdropFilterEnabled;
    case CSSPropertyID::CSSPropertyBlockEllipsis:
        return settings.cssLineClampEnabled;
    case CSSPropertyID::CSSPropertyBlockStepAlign:
        return settings.cssRhythmicSizingEnabled;
    case CSSPropertyID::CSSPropertyBlockStepInsert:
        return settings.cssRhythmicSizingEnabled;
    case CSSPropertyID::CSSPropertyBlockStepRound:
        return settings.cssRhythmicSizingEnabled;
    case CSSPropertyID::CSSPropertyBlockStepSize:
        return settings.cssRhythmicSizingEnabled;
    case CSSPropertyID::CSSPropertyContinue:
        return settings.cssLineClampEnabled;
    case CSSPropertyID::CSSPropertyD:
        return settings.cssDPropertyEnabled;
    case CSSPropertyID::CSSPropertyDynamicRangeLimit:
        return settings.supportHDRDisplayEnabled;
    case CSSPropertyID::CSSPropertyFieldSizing:
        return settings.cssFieldSizingEnabled;
    case CSSPropertyID::CSSPropertyInputSecurity:
        return settings.cssInputSecurityEnabled;
    case CSSPropertyID::CSSPropertyLineFitEdge:
        return settings.cssLineFitEdgeEnabled;
    case CSSPropertyID::CSSPropertyMaxLines:
        return settings.cssLineClampEnabled;
    case CSSPropertyID::CSSPropertyNavigation:
        return settings.crossDocumentViewTransitionsEnabled;
    case CSSPropertyID::CSSPropertyOverflowAnchor:
        return settings.cssScrollAnchoringEnabled;
    case CSSPropertyID::CSSPropertyPositionAnchor:
        return settings.cssAnchorPositioningEnabled;
    case CSSPropertyID::CSSPropertyPositionArea:
        return settings.cssAnchorPositioningEnabled;
    case CSSPropertyID::CSSPropertyPositionTryFallbacks:
        return settings.cssAnchorPositioningEnabled;
    case CSSPropertyID::CSSPropertyPositionTryOrder:
        return settings.cssAnchorPositioningEnabled;
    case CSSPropertyID::CSSPropertyPositionVisibility:
        return settings.cssAnchorPositioningPositionVisibilityEnabled;
    case CSSPropertyID::CSSPropertyRubyAlign:
        return settings.cssRubyAlignEnabled;
    case CSSPropertyID::CSSPropertyRubyOverhang:
        return settings.cssRubyOverhangEnabled;
    case CSSPropertyID::CSSPropertyScrollTimelineAxis:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyScrollTimelineName:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyScrollbarColor:
        return settings.cssScrollbarColorEnabled;
    case CSSPropertyID::CSSPropertyScrollbarGutter:
        return settings.cssScrollbarGutterEnabled;
    case CSSPropertyID::CSSPropertyScrollbarWidth:
        return settings.cssScrollbarWidthEnabled;
    case CSSPropertyID::CSSPropertyTextBoxEdge:
        return settings.cssTextBoxTrimEnabled;
    case CSSPropertyID::CSSPropertyTextBoxTrim:
        return settings.cssTextBoxTrimEnabled;
    case CSSPropertyID::CSSPropertyTextGroupAlign:
        return settings.cssTextGroupAlignEnabled;
    case CSSPropertyID::CSSPropertyTextJustify:
        return settings.cssTextJustifyEnabled;
    case CSSPropertyID::CSSPropertyTimelineScope:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyTypes:
        return settings.crossDocumentViewTransitionsEnabled;
    case CSSPropertyID::CSSPropertyViewTimelineAxis:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyViewTimelineInset:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyViewTimelineName:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyViewTransitionClass:
        return settings.viewTransitionClassesEnabled;
    case CSSPropertyID::CSSPropertyViewTransitionName:
        return settings.viewTransitionsEnabled;
    case CSSPropertyID::CSSPropertyAppleColorFilter:
        return settings.colorFilterEnabled;
    case CSSPropertyID::CSSPropertyCornerBottomLeftShape:
        return settings.cssCornerShapeEnabled;
    case CSSPropertyID::CSSPropertyCornerBottomRightShape:
        return settings.cssCornerShapeEnabled;
    case CSSPropertyID::CSSPropertyCornerTopLeftShape:
        return settings.cssCornerShapeEnabled;
    case CSSPropertyID::CSSPropertyCornerTopRightShape:
        return settings.cssCornerShapeEnabled;
    case CSSPropertyID::CSSPropertyOverscrollBehaviorX:
        return settings.overscrollBehaviorEnabled;
    case CSSPropertyID::CSSPropertyOverscrollBehaviorY:
        return settings.overscrollBehaviorEnabled;
    case CSSPropertyID::CSSPropertyCornerEndEndShape:
        return settings.cssCornerShapeEnabled;
    case CSSPropertyID::CSSPropertyCornerEndStartShape:
        return settings.cssCornerShapeEnabled;
    case CSSPropertyID::CSSPropertyCornerStartEndShape:
        return settings.cssCornerShapeEnabled;
    case CSSPropertyID::CSSPropertyCornerStartStartShape:
        return settings.cssCornerShapeEnabled;
    case CSSPropertyID::CSSPropertyOverscrollBehaviorBlock:
        return settings.overscrollBehaviorEnabled;
    case CSSPropertyID::CSSPropertyOverscrollBehaviorInline:
        return settings.overscrollBehaviorEnabled;
    case CSSPropertyID::CSSPropertyAnimationRange:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyBlockStep:
        return settings.cssRhythmicSizingEnabled;
    case CSSPropertyID::CSSPropertyCornerShape:
        return settings.cssCornerShapeEnabled;
    case CSSPropertyID::CSSPropertyLineClamp:
        return settings.cssLineClampEnabled;
    case CSSPropertyID::CSSPropertyOverscrollBehavior:
        return settings.overscrollBehaviorEnabled;
    case CSSPropertyID::CSSPropertyPositionTry:
        return settings.cssAnchorPositioningEnabled;
    case CSSPropertyID::CSSPropertyScrollTimeline:
        return settings.scrollDrivenAnimationsEnabled;
    case CSSPropertyID::CSSPropertyTextBox:
        return settings.cssTextBoxTrimEnabled;
    case CSSPropertyID::CSSPropertyViewTimeline:
        return settings.scrollDrivenAnimationsEnabled;
    default:
        return true;
    }
}

static bool isExposedNotInvalidAndNotInternal(CSSPropertyID id, const Settings& settings)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyFontVariantEmoji:
        return settings.cssFontVariantEmojiEnabled();
    case CSSPropertyID::CSSPropertyTextAutospace:
        return settings.cssTextAutospaceEnabled();
    case CSSPropertyID::CSSPropertyTextSpacingTrim:
        return settings.cssTextSpacingTrimEnabled();
    case CSSPropertyID::CSSPropertyAccentColor:
        return settings.accentColorEnabled();
    case CSSPropertyID::CSSPropertyAnchorName:
        return settings.cssAnchorPositioningEnabled();
    case CSSPropertyID::CSSPropertyAnchorScope:
        return settings.cssAnchorPositioningEnabled();
    case CSSPropertyID::CSSPropertyAnimationRangeEnd:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyAnimationRangeStart:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyAnimationTimeline:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyBackdropFilter:
        return settings.cssUnprefixedBackdropFilterEnabled();
    case CSSPropertyID::CSSPropertyBlockEllipsis:
        return settings.cssLineClampEnabled();
    case CSSPropertyID::CSSPropertyBlockStepAlign:
        return settings.cssRhythmicSizingEnabled();
    case CSSPropertyID::CSSPropertyBlockStepInsert:
        return settings.cssRhythmicSizingEnabled();
    case CSSPropertyID::CSSPropertyBlockStepRound:
        return settings.cssRhythmicSizingEnabled();
    case CSSPropertyID::CSSPropertyBlockStepSize:
        return settings.cssRhythmicSizingEnabled();
    case CSSPropertyID::CSSPropertyContinue:
        return settings.cssLineClampEnabled();
    case CSSPropertyID::CSSPropertyD:
        return settings.cssDPropertyEnabled();
    case CSSPropertyID::CSSPropertyDynamicRangeLimit:
        return settings.supportHDRDisplayEnabled();
    case CSSPropertyID::CSSPropertyFieldSizing:
        return settings.cssFieldSizingEnabled();
    case CSSPropertyID::CSSPropertyInputSecurity:
        return settings.cssInputSecurityEnabled();
    case CSSPropertyID::CSSPropertyLineFitEdge:
        return settings.cssLineFitEdgeEnabled();
    case CSSPropertyID::CSSPropertyMaxLines:
        return settings.cssLineClampEnabled();
    case CSSPropertyID::CSSPropertyNavigation:
        return settings.crossDocumentViewTransitionsEnabled();
    case CSSPropertyID::CSSPropertyOverflowAnchor:
        return settings.cssScrollAnchoringEnabled();
    case CSSPropertyID::CSSPropertyPositionAnchor:
        return settings.cssAnchorPositioningEnabled();
    case CSSPropertyID::CSSPropertyPositionArea:
        return settings.cssAnchorPositioningEnabled();
    case CSSPropertyID::CSSPropertyPositionTryFallbacks:
        return settings.cssAnchorPositioningEnabled();
    case CSSPropertyID::CSSPropertyPositionTryOrder:
        return settings.cssAnchorPositioningEnabled();
    case CSSPropertyID::CSSPropertyPositionVisibility:
        return settings.cssAnchorPositioningPositionVisibilityEnabled();
    case CSSPropertyID::CSSPropertyRubyAlign:
        return settings.cssRubyAlignEnabled();
    case CSSPropertyID::CSSPropertyRubyOverhang:
        return settings.cssRubyOverhangEnabled();
    case CSSPropertyID::CSSPropertyScrollTimelineAxis:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyScrollTimelineName:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyScrollbarColor:
        return settings.cssScrollbarColorEnabled();
    case CSSPropertyID::CSSPropertyScrollbarGutter:
        return settings.cssScrollbarGutterEnabled();
    case CSSPropertyID::CSSPropertyScrollbarWidth:
        return settings.cssScrollbarWidthEnabled();
    case CSSPropertyID::CSSPropertyTextBoxEdge:
        return settings.cssTextBoxTrimEnabled();
    case CSSPropertyID::CSSPropertyTextBoxTrim:
        return settings.cssTextBoxTrimEnabled();
    case CSSPropertyID::CSSPropertyTextGroupAlign:
        return settings.cssTextGroupAlignEnabled();
    case CSSPropertyID::CSSPropertyTextJustify:
        return settings.cssTextJustifyEnabled();
    case CSSPropertyID::CSSPropertyTimelineScope:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyTypes:
        return settings.crossDocumentViewTransitionsEnabled();
    case CSSPropertyID::CSSPropertyViewTimelineAxis:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyViewTimelineInset:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyViewTimelineName:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyViewTransitionClass:
        return settings.viewTransitionClassesEnabled();
    case CSSPropertyID::CSSPropertyViewTransitionName:
        return settings.viewTransitionsEnabled();
    case CSSPropertyID::CSSPropertyAppleColorFilter:
        return settings.colorFilterEnabled();
    case CSSPropertyID::CSSPropertyCornerBottomLeftShape:
        return settings.cssCornerShapeEnabled();
    case CSSPropertyID::CSSPropertyCornerBottomRightShape:
        return settings.cssCornerShapeEnabled();
    case CSSPropertyID::CSSPropertyCornerTopLeftShape:
        return settings.cssCornerShapeEnabled();
    case CSSPropertyID::CSSPropertyCornerTopRightShape:
        return settings.cssCornerShapeEnabled();
    case CSSPropertyID::CSSPropertyOverscrollBehaviorX:
        return settings.overscrollBehaviorEnabled();
    case CSSPropertyID::CSSPropertyOverscrollBehaviorY:
        return settings.overscrollBehaviorEnabled();
    case CSSPropertyID::CSSPropertyCornerEndEndShape:
        return settings.cssCornerShapeEnabled();
    case CSSPropertyID::CSSPropertyCornerEndStartShape:
        return settings.cssCornerShapeEnabled();
    case CSSPropertyID::CSSPropertyCornerStartEndShape:
        return settings.cssCornerShapeEnabled();
    case CSSPropertyID::CSSPropertyCornerStartStartShape:
        return settings.cssCornerShapeEnabled();
    case CSSPropertyID::CSSPropertyOverscrollBehaviorBlock:
        return settings.overscrollBehaviorEnabled();
    case CSSPropertyID::CSSPropertyOverscrollBehaviorInline:
        return settings.overscrollBehaviorEnabled();
    case CSSPropertyID::CSSPropertyAnimationRange:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyBlockStep:
        return settings.cssRhythmicSizingEnabled();
    case CSSPropertyID::CSSPropertyCornerShape:
        return settings.cssCornerShapeEnabled();
    case CSSPropertyID::CSSPropertyLineClamp:
        return settings.cssLineClampEnabled();
    case CSSPropertyID::CSSPropertyOverscrollBehavior:
        return settings.overscrollBehaviorEnabled();
    case CSSPropertyID::CSSPropertyPositionTry:
        return settings.cssAnchorPositioningEnabled();
    case CSSPropertyID::CSSPropertyScrollTimeline:
        return settings.scrollDrivenAnimationsEnabled();
    case CSSPropertyID::CSSPropertyTextBox:
        return settings.cssTextBoxTrimEnabled();
    case CSSPropertyID::CSSPropertyViewTimeline:
        return settings.scrollDrivenAnimationsEnabled();
    default:
        return true;
    }
}

bool isExposed(CSSPropertyID id, const CSSPropertySettings* settings)
{
    if (id == CSSPropertyID::CSSPropertyInvalid || isInternal(id))
        return false;
    if (!settings)
        return true;
    return isExposedNotInvalidAndNotInternal(id, *settings);
}

bool isExposed(CSSPropertyID id, const CSSPropertySettings& settings)
{
    if (id == CSSPropertyID::CSSPropertyInvalid || isInternal(id))
        return false;
    return isExposedNotInvalidAndNotInternal(id, settings);
}

bool isExposed(CSSPropertyID id, const Settings* settings)
{
    if (id == CSSPropertyID::CSSPropertyInvalid || isInternal(id))
        return false;
    if (!settings)
        return true;
    return isExposedNotInvalidAndNotInternal(id, *settings);
}

bool isExposed(CSSPropertyID id, const Settings& settings)
{
    if (id == CSSPropertyID::CSSPropertyInvalid || isInternal(id))
        return false;
    return isExposedNotInvalidAndNotInternal(id, settings);
}

constexpr bool isInheritedPropertyTable[cssPropertyIDEnumValueCount] = {
    false, // CSSPropertyID::CSSPropertyInvalid
    true , // CSSPropertyID::CSSPropertyCustom
    true , // CSSPropertyID::CSSPropertyColorScheme
    true , // CSSPropertyID::CSSPropertyRubyPosition
    true , // CSSPropertyID::CSSPropertyWritingMode
    true , // CSSPropertyID::CSSPropertyDirection
    false, // CSSPropertyID::CSSPropertyDisplay
    true , // CSSPropertyID::CSSPropertyFontFamily
    true , // CSSPropertyID::CSSPropertyFontFeatureSettings
    true , // CSSPropertyID::CSSPropertyFontKerning
    true , // CSSPropertyID::CSSPropertyFontOpticalSizing
    true , // CSSPropertyID::CSSPropertyFontPalette
    true , // CSSPropertyID::CSSPropertyFontSize
    true , // CSSPropertyID::CSSPropertyFontSizeAdjust
    true , // CSSPropertyID::CSSPropertyFontStyle
    true , // CSSPropertyID::CSSPropertyFontSynthesisSmallCaps
    true , // CSSPropertyID::CSSPropertyFontSynthesisStyle
    true , // CSSPropertyID::CSSPropertyFontSynthesisWeight
    true , // CSSPropertyID::CSSPropertyFontVariantAlternates
    true , // CSSPropertyID::CSSPropertyFontVariantCaps
    true , // CSSPropertyID::CSSPropertyFontVariantEastAsian
    true , // CSSPropertyID::CSSPropertyFontVariantEmoji
    true , // CSSPropertyID::CSSPropertyFontVariantLigatures
    true , // CSSPropertyID::CSSPropertyFontVariantNumeric
    true , // CSSPropertyID::CSSPropertyFontVariantPosition
    true , // CSSPropertyID::CSSPropertyFontVariationSettings
    true , // CSSPropertyID::CSSPropertyFontWeight
    true , // CSSPropertyID::CSSPropertyFontWidth
    true , // CSSPropertyID::CSSPropertyTextOrientation
    true , // CSSPropertyID::CSSPropertyTextRendering
    false, // CSSPropertyID::CSSPropertyZoom
    true , // CSSPropertyID::CSSPropertyWebkitFontSmoothing
    true , // CSSPropertyID::CSSPropertyWebkitLocale
    true , // CSSPropertyID::CSSPropertyWebkitTextZoom
    true , // CSSPropertyID::CSSPropertyLetterSpacing
    true , // CSSPropertyID::CSSPropertyTextAutospace
    true , // CSSPropertyID::CSSPropertyTextSpacingTrim
    true , // CSSPropertyID::CSSPropertyAccentColor
    false, // CSSPropertyID::CSSPropertyAdditiveSymbols
    false, // CSSPropertyID::CSSPropertyAlignContent
    false, // CSSPropertyID::CSSPropertyAlignItems
    false, // CSSPropertyID::CSSPropertyAlignSelf
    false, // CSSPropertyID::CSSPropertyAlignmentBaseline
    false, // CSSPropertyID::CSSPropertyAnchorName
    false, // CSSPropertyID::CSSPropertyAnchorScope
    false, // CSSPropertyID::CSSPropertyAnimationComposition
    false, // CSSPropertyID::CSSPropertyAnimationDelay
    false, // CSSPropertyID::CSSPropertyAnimationDirection
    false, // CSSPropertyID::CSSPropertyAnimationDuration
    false, // CSSPropertyID::CSSPropertyAnimationFillMode
    false, // CSSPropertyID::CSSPropertyAnimationIterationCount
    false, // CSSPropertyID::CSSPropertyAnimationName
    false, // CSSPropertyID::CSSPropertyAnimationPlayState
    false, // CSSPropertyID::CSSPropertyAnimationRangeEnd
    false, // CSSPropertyID::CSSPropertyAnimationRangeStart
    false, // CSSPropertyID::CSSPropertyAnimationTimeline
    false, // CSSPropertyID::CSSPropertyAnimationTimingFunction
    false, // CSSPropertyID::CSSPropertyAppearance
    false, // CSSPropertyID::CSSPropertyAspectRatio
    false, // CSSPropertyID::CSSPropertyBackdropFilter
    false, // CSSPropertyID::CSSPropertyBackfaceVisibility
    false, // CSSPropertyID::CSSPropertyBackgroundAttachment
    false, // CSSPropertyID::CSSPropertyBackgroundBlendMode
    false, // CSSPropertyID::CSSPropertyBackgroundClip
    false, // CSSPropertyID::CSSPropertyBackgroundColor
    false, // CSSPropertyID::CSSPropertyBackgroundImage
    false, // CSSPropertyID::CSSPropertyBackgroundOrigin
    false, // CSSPropertyID::CSSPropertyBackgroundPositionX
    false, // CSSPropertyID::CSSPropertyBackgroundPositionY
    false, // CSSPropertyID::CSSPropertyBackgroundRepeat
    false, // CSSPropertyID::CSSPropertyBackgroundSize
    false, // CSSPropertyID::CSSPropertyBasePalette
    false, // CSSPropertyID::CSSPropertyBaselineShift
    true , // CSSPropertyID::CSSPropertyBlockEllipsis
    false, // CSSPropertyID::CSSPropertyBlockStepAlign
    false, // CSSPropertyID::CSSPropertyBlockStepInsert
    false, // CSSPropertyID::CSSPropertyBlockStepRound
    false, // CSSPropertyID::CSSPropertyBlockStepSize
    true , // CSSPropertyID::CSSPropertyBorderCollapse
    false, // CSSPropertyID::CSSPropertyBorderImageOutset
    false, // CSSPropertyID::CSSPropertyBorderImageRepeat
    false, // CSSPropertyID::CSSPropertyBorderImageSlice
    false, // CSSPropertyID::CSSPropertyBorderImageSource
    false, // CSSPropertyID::CSSPropertyBorderImageWidth
    false, // CSSPropertyID::CSSPropertyBoxShadow
    false, // CSSPropertyID::CSSPropertyBoxSizing
    false, // CSSPropertyID::CSSPropertyBreakAfter
    false, // CSSPropertyID::CSSPropertyBreakBefore
    false, // CSSPropertyID::CSSPropertyBreakInside
    false, // CSSPropertyID::CSSPropertyBufferedRendering
    true , // CSSPropertyID::CSSPropertyCaptionSide
    true , // CSSPropertyID::CSSPropertyCaretColor
    false, // CSSPropertyID::CSSPropertyClear
    false, // CSSPropertyID::CSSPropertyClip
    false, // CSSPropertyID::CSSPropertyClipPath
    true , // CSSPropertyID::CSSPropertyClipRule
    true , // CSSPropertyID::CSSPropertyColor
    true , // CSSPropertyID::CSSPropertyColorInterpolation
    true , // CSSPropertyID::CSSPropertyColorInterpolationFilters
    false, // CSSPropertyID::CSSPropertyColumnCount
    false, // CSSPropertyID::CSSPropertyColumnFill
    false, // CSSPropertyID::CSSPropertyColumnGap
    false, // CSSPropertyID::CSSPropertyColumnRuleColor
    false, // CSSPropertyID::CSSPropertyColumnRuleStyle
    false, // CSSPropertyID::CSSPropertyColumnRuleWidth
    false, // CSSPropertyID::CSSPropertyColumnSpan
    false, // CSSPropertyID::CSSPropertyColumnWidth
    false, // CSSPropertyID::CSSPropertyContain
    false, // CSSPropertyID::CSSPropertyContainerName
    false, // CSSPropertyID::CSSPropertyContainerType
    false, // CSSPropertyID::CSSPropertyContent
    false, // CSSPropertyID::CSSPropertyContentVisibility
    false, // CSSPropertyID::CSSPropertyContinue
    false, // CSSPropertyID::CSSPropertyCounterIncrement
    false, // CSSPropertyID::CSSPropertyCounterReset
    false, // CSSPropertyID::CSSPropertyCounterSet
    true , // CSSPropertyID::CSSPropertyCursor
    false, // CSSPropertyID::CSSPropertyCx
    false, // CSSPropertyID::CSSPropertyCy
    false, // CSSPropertyID::CSSPropertyD
    false, // CSSPropertyID::CSSPropertyDominantBaseline
    true , // CSSPropertyID::CSSPropertyDynamicRangeLimit
    true , // CSSPropertyID::CSSPropertyEmptyCells
    false, // CSSPropertyID::CSSPropertyFallback
    false, // CSSPropertyID::CSSPropertyFieldSizing
    true , // CSSPropertyID::CSSPropertyFill
    true , // CSSPropertyID::CSSPropertyFillOpacity
    true , // CSSPropertyID::CSSPropertyFillRule
    false, // CSSPropertyID::CSSPropertyFilter
    false, // CSSPropertyID::CSSPropertyFlexBasis
    false, // CSSPropertyID::CSSPropertyFlexDirection
    false, // CSSPropertyID::CSSPropertyFlexGrow
    false, // CSSPropertyID::CSSPropertyFlexShrink
    false, // CSSPropertyID::CSSPropertyFlexWrap
    false, // CSSPropertyID::CSSPropertyFloat
    false, // CSSPropertyID::CSSPropertyFloodColor
    false, // CSSPropertyID::CSSPropertyFloodOpacity
    false, // CSSPropertyID::CSSPropertyFontDisplay
    true , // CSSPropertyID::CSSPropertyGlyphOrientationHorizontal
    true , // CSSPropertyID::CSSPropertyGlyphOrientationVertical
    false, // CSSPropertyID::CSSPropertyGridAutoColumns
    false, // CSSPropertyID::CSSPropertyGridAutoFlow
    false, // CSSPropertyID::CSSPropertyGridAutoRows
    false, // CSSPropertyID::CSSPropertyGridColumnEnd
    false, // CSSPropertyID::CSSPropertyGridColumnStart
    false, // CSSPropertyID::CSSPropertyGridRowEnd
    false, // CSSPropertyID::CSSPropertyGridRowStart
    false, // CSSPropertyID::CSSPropertyGridTemplateAreas
    false, // CSSPropertyID::CSSPropertyGridTemplateColumns
    false, // CSSPropertyID::CSSPropertyGridTemplateRows
    true , // CSSPropertyID::CSSPropertyHangingPunctuation
    true , // CSSPropertyID::CSSPropertyHyphenateCharacter
    true , // CSSPropertyID::CSSPropertyHyphens
    true , // CSSPropertyID::CSSPropertyImageOrientation
    true , // CSSPropertyID::CSSPropertyImageRendering
    false, // CSSPropertyID::CSSPropertyInherits
    false, // CSSPropertyID::CSSPropertyInitialValue
    false, // CSSPropertyID::CSSPropertyInputSecurity
    false, // CSSPropertyID::CSSPropertyIsolation
    false, // CSSPropertyID::CSSPropertyJustifyContent
    false, // CSSPropertyID::CSSPropertyJustifyItems
    false, // CSSPropertyID::CSSPropertyJustifySelf
    false, // CSSPropertyID::CSSPropertyLightingColor
    true , // CSSPropertyID::CSSPropertyLineBreak
    true , // CSSPropertyID::CSSPropertyLineFitEdge
    true , // CSSPropertyID::CSSPropertyLineHeight
    true , // CSSPropertyID::CSSPropertyListStyleImage
    true , // CSSPropertyID::CSSPropertyListStylePosition
    true , // CSSPropertyID::CSSPropertyListStyleType
    false, // CSSPropertyID::CSSPropertyMarginTrim
    true , // CSSPropertyID::CSSPropertyMarkerEnd
    true , // CSSPropertyID::CSSPropertyMarkerMid
    true , // CSSPropertyID::CSSPropertyMarkerStart
    false, // CSSPropertyID::CSSPropertyMaskBorderOutset
    false, // CSSPropertyID::CSSPropertyMaskBorderRepeat
    false, // CSSPropertyID::CSSPropertyMaskBorderSlice
    false, // CSSPropertyID::CSSPropertyMaskBorderSource
    false, // CSSPropertyID::CSSPropertyMaskBorderWidth
    false, // CSSPropertyID::CSSPropertyMaskClip
    false, // CSSPropertyID::CSSPropertyMaskComposite
    false, // CSSPropertyID::CSSPropertyMaskImage
    false, // CSSPropertyID::CSSPropertyMaskMode
    false, // CSSPropertyID::CSSPropertyMaskOrigin
    false, // CSSPropertyID::CSSPropertyMaskRepeat
    false, // CSSPropertyID::CSSPropertyMaskSize
    false, // CSSPropertyID::CSSPropertyMaskType
    true , // CSSPropertyID::CSSPropertyMathStyle
    false, // CSSPropertyID::CSSPropertyMaxLines
    false, // CSSPropertyID::CSSPropertyMixBlendMode
    false, // CSSPropertyID::CSSPropertyNavigation
    false, // CSSPropertyID::CSSPropertyNegative
    false, // CSSPropertyID::CSSPropertyObjectFit
    false, // CSSPropertyID::CSSPropertyObjectPosition
    false, // CSSPropertyID::CSSPropertyOffsetAnchor
    false, // CSSPropertyID::CSSPropertyOffsetDistance
    false, // CSSPropertyID::CSSPropertyOffsetPath
    false, // CSSPropertyID::CSSPropertyOffsetPosition
    false, // CSSPropertyID::CSSPropertyOffsetRotate
    false, // CSSPropertyID::CSSPropertyOpacity
    false, // CSSPropertyID::CSSPropertyOrder
    true , // CSSPropertyID::CSSPropertyOrphans
    false, // CSSPropertyID::CSSPropertyOutlineColor
    false, // CSSPropertyID::CSSPropertyOutlineOffset
    false, // CSSPropertyID::CSSPropertyOutlineStyle
    false, // CSSPropertyID::CSSPropertyOutlineWidth
    false, // CSSPropertyID::CSSPropertyOverflowAnchor
    true , // CSSPropertyID::CSSPropertyOverflowWrap
    false, // CSSPropertyID::CSSPropertyOverrideColors
    false, // CSSPropertyID::CSSPropertyPad
    false, // CSSPropertyID::CSSPropertyPage
    true , // CSSPropertyID::CSSPropertyPaintOrder
    false, // CSSPropertyID::CSSPropertyPerspective
    false, // CSSPropertyID::CSSPropertyPerspectiveOriginX
    false, // CSSPropertyID::CSSPropertyPerspectiveOriginY
    true , // CSSPropertyID::CSSPropertyPointerEvents
    false, // CSSPropertyID::CSSPropertyPosition
    false, // CSSPropertyID::CSSPropertyPositionAnchor
    false, // CSSPropertyID::CSSPropertyPositionArea
    false, // CSSPropertyID::CSSPropertyPositionTryFallbacks
    false, // CSSPropertyID::CSSPropertyPositionTryOrder
    false, // CSSPropertyID::CSSPropertyPositionVisibility
    false, // CSSPropertyID::CSSPropertyPrefix
    true , // CSSPropertyID::CSSPropertyPrintColorAdjust
    true , // CSSPropertyID::CSSPropertyQuotes
    false, // CSSPropertyID::CSSPropertyR
    false, // CSSPropertyID::CSSPropertyRange
    false, // CSSPropertyID::CSSPropertyResize
    false, // CSSPropertyID::CSSPropertyRotate
    false, // CSSPropertyID::CSSPropertyRowGap
    true , // CSSPropertyID::CSSPropertyRubyAlign
    true , // CSSPropertyID::CSSPropertyRubyOverhang
    false, // CSSPropertyID::CSSPropertyRx
    false, // CSSPropertyID::CSSPropertyRy
    false, // CSSPropertyID::CSSPropertyScale
    false, // CSSPropertyID::CSSPropertyScrollBehavior
    false, // CSSPropertyID::CSSPropertyScrollSnapAlign
    false, // CSSPropertyID::CSSPropertyScrollSnapStop
    false, // CSSPropertyID::CSSPropertyScrollSnapType
    false, // CSSPropertyID::CSSPropertyScrollTimelineAxis
    false, // CSSPropertyID::CSSPropertyScrollTimelineName
    true , // CSSPropertyID::CSSPropertyScrollbarColor
    false, // CSSPropertyID::CSSPropertyScrollbarGutter
    false, // CSSPropertyID::CSSPropertyScrollbarWidth
    false, // CSSPropertyID::CSSPropertyShapeImageThreshold
    false, // CSSPropertyID::CSSPropertyShapeMargin
    false, // CSSPropertyID::CSSPropertyShapeOutside
    true , // CSSPropertyID::CSSPropertyShapeRendering
    false, // CSSPropertyID::CSSPropertySize
    false, // CSSPropertyID::CSSPropertySizeAdjust
    true , // CSSPropertyID::CSSPropertySpeakAs
    false, // CSSPropertyID::CSSPropertySrc
    false, // CSSPropertyID::CSSPropertyStopColor
    false, // CSSPropertyID::CSSPropertyStopOpacity
    true , // CSSPropertyID::CSSPropertyStroke
    true , // CSSPropertyID::CSSPropertyStrokeColor
    true , // CSSPropertyID::CSSPropertyStrokeDasharray
    true , // CSSPropertyID::CSSPropertyStrokeDashoffset
    true , // CSSPropertyID::CSSPropertyStrokeLinecap
    true , // CSSPropertyID::CSSPropertyStrokeLinejoin
    true , // CSSPropertyID::CSSPropertyStrokeMiterlimit
    true , // CSSPropertyID::CSSPropertyStrokeOpacity
    true , // CSSPropertyID::CSSPropertyStrokeWidth
    false, // CSSPropertyID::CSSPropertySuffix
    false, // CSSPropertyID::CSSPropertySymbols
    false, // CSSPropertyID::CSSPropertySyntax
    false, // CSSPropertyID::CSSPropertySystem
    true , // CSSPropertyID::CSSPropertyTabSize
    false, // CSSPropertyID::CSSPropertyTableLayout
    true , // CSSPropertyID::CSSPropertyTextAlign
    true , // CSSPropertyID::CSSPropertyTextAlignLast
    true , // CSSPropertyID::CSSPropertyTextAnchor
    true , // CSSPropertyID::CSSPropertyTextBoxEdge
    false, // CSSPropertyID::CSSPropertyTextBoxTrim
    true , // CSSPropertyID::CSSPropertyTextCombineUpright
    false, // CSSPropertyID::CSSPropertyTextDecorationColor
    false, // CSSPropertyID::CSSPropertyTextDecorationLine
    true , // CSSPropertyID::CSSPropertyTextDecorationSkipInk
    false, // CSSPropertyID::CSSPropertyTextDecorationStyle
    false, // CSSPropertyID::CSSPropertyTextDecorationThickness
    true , // CSSPropertyID::CSSPropertyTextEmphasisColor
    true , // CSSPropertyID::CSSPropertyTextEmphasisPosition
    true , // CSSPropertyID::CSSPropertyTextEmphasisStyle
    false, // CSSPropertyID::CSSPropertyTextGroupAlign
    true , // CSSPropertyID::CSSPropertyTextIndent
    true , // CSSPropertyID::CSSPropertyTextJustify
    false, // CSSPropertyID::CSSPropertyTextOverflow
    true , // CSSPropertyID::CSSPropertyTextShadow
    true , // CSSPropertyID::CSSPropertyTextTransform
    true , // CSSPropertyID::CSSPropertyTextUnderlineOffset
    true , // CSSPropertyID::CSSPropertyTextUnderlinePosition
    true , // CSSPropertyID::CSSPropertyTextWrapMode
    true , // CSSPropertyID::CSSPropertyTextWrapStyle
    false, // CSSPropertyID::CSSPropertyTimelineScope
    false, // CSSPropertyID::CSSPropertyTouchAction
    false, // CSSPropertyID::CSSPropertyTransform
    false, // CSSPropertyID::CSSPropertyTransformBox
    false, // CSSPropertyID::CSSPropertyTransformOriginX
    false, // CSSPropertyID::CSSPropertyTransformOriginY
    false, // CSSPropertyID::CSSPropertyTransformOriginZ
    false, // CSSPropertyID::CSSPropertyTransformStyle
    false, // CSSPropertyID::CSSPropertyTransitionBehavior
    false, // CSSPropertyID::CSSPropertyTransitionDelay
    false, // CSSPropertyID::CSSPropertyTransitionDuration
    false, // CSSPropertyID::CSSPropertyTransitionProperty
    false, // CSSPropertyID::CSSPropertyTransitionTimingFunction
    false, // CSSPropertyID::CSSPropertyTranslate
    false, // CSSPropertyID::CSSPropertyTypes
    false, // CSSPropertyID::CSSPropertyUnicodeBidi
    false, // CSSPropertyID::CSSPropertyUnicodeRange
    false, // CSSPropertyID::CSSPropertyVectorEffect
    false, // CSSPropertyID::CSSPropertyVerticalAlign
    false, // CSSPropertyID::CSSPropertyViewTimelineAxis
    false, // CSSPropertyID::CSSPropertyViewTimelineInset
    false, // CSSPropertyID::CSSPropertyViewTimelineName
    false, // CSSPropertyID::CSSPropertyViewTransitionClass
    false, // CSSPropertyID::CSSPropertyViewTransitionName
    true , // CSSPropertyID::CSSPropertyVisibility
    true , // CSSPropertyID::CSSPropertyWhiteSpaceCollapse
    true , // CSSPropertyID::CSSPropertyWidows
    false, // CSSPropertyID::CSSPropertyWillChange
    true , // CSSPropertyID::CSSPropertyWordBreak
    false, // CSSPropertyID::CSSPropertyX
    false, // CSSPropertyID::CSSPropertyY
    false, // CSSPropertyID::CSSPropertyZIndex
    true , // CSSPropertyID::CSSPropertyAppleColorFilter
    false, // CSSPropertyID::CSSPropertyWebkitBackdropFilter
    false, // CSSPropertyID::CSSPropertyWebkitBackgroundClip
    false, // CSSPropertyID::CSSPropertyWebkitBackgroundOrigin
    true , // CSSPropertyID::CSSPropertyWebkitBorderHorizontalSpacing
    true , // CSSPropertyID::CSSPropertyWebkitBorderVerticalSpacing
    false, // CSSPropertyID::CSSPropertyWebkitBoxAlign
    false, // CSSPropertyID::CSSPropertyWebkitBoxDecorationBreak
    true , // CSSPropertyID::CSSPropertyWebkitBoxDirection
    false, // CSSPropertyID::CSSPropertyWebkitBoxFlex
    false, // CSSPropertyID::CSSPropertyWebkitBoxFlexGroup
    false, // CSSPropertyID::CSSPropertyWebkitBoxLines
    false, // CSSPropertyID::CSSPropertyWebkitBoxOrdinalGroup
    false, // CSSPropertyID::CSSPropertyWebkitBoxOrient
    false, // CSSPropertyID::CSSPropertyWebkitBoxPack
    false, // CSSPropertyID::CSSPropertyWebkitBoxReflect
    false, // CSSPropertyID::CSSPropertyWebkitBoxShadow
    false, // CSSPropertyID::CSSPropertyWebkitColumnAxis
    false, // CSSPropertyID::CSSPropertyWebkitColumnProgression
    true , // CSSPropertyID::CSSPropertyWebkitCursorVisibility
    false, // CSSPropertyID::CSSPropertyWebkitFontSizeDelta
    true , // CSSPropertyID::CSSPropertyWebkitHyphenateLimitAfter
    true , // CSSPropertyID::CSSPropertyWebkitHyphenateLimitBefore
    true , // CSSPropertyID::CSSPropertyWebkitHyphenateLimitLines
    false, // CSSPropertyID::CSSPropertyWebkitInitialLetter
    true , // CSSPropertyID::CSSPropertyWebkitLineAlign
    true , // CSSPropertyID::CSSPropertyWebkitLineBoxContain
    false, // CSSPropertyID::CSSPropertyWebkitLineClamp
    true , // CSSPropertyID::CSSPropertyWebkitLineGrid
    true , // CSSPropertyID::CSSPropertyWebkitLineSnap
    false, // CSSPropertyID::CSSPropertyWebkitMarqueeDirection
    false, // CSSPropertyID::CSSPropertyWebkitMarqueeIncrement
    false, // CSSPropertyID::CSSPropertyWebkitMarqueeRepetition
    false, // CSSPropertyID::CSSPropertyWebkitMarqueeSpeed
    false, // CSSPropertyID::CSSPropertyWebkitMarqueeStyle
    false, // CSSPropertyID::CSSPropertyWebkitMaskClip
    false, // CSSPropertyID::CSSPropertyWebkitMaskComposite
    false, // CSSPropertyID::CSSPropertyWebkitMaskPositionX
    false, // CSSPropertyID::CSSPropertyWebkitMaskPositionY
    false, // CSSPropertyID::CSSPropertyWebkitMaskSourceType
    true , // CSSPropertyID::CSSPropertyWebkitNbspMode
    true , // CSSPropertyID::CSSPropertyWebkitRtlOrdering
    true , // CSSPropertyID::CSSPropertyWebkitRubyPosition
    true , // CSSPropertyID::CSSPropertyWebkitTextCombine
    true , // CSSPropertyID::CSSPropertyWebkitTextDecorationsInEffect
    true , // CSSPropertyID::CSSPropertyWebkitTextFillColor
    true , // CSSPropertyID::CSSPropertyWebkitTextSecurity
    true , // CSSPropertyID::CSSPropertyWebkitTextStrokeColor
    true , // CSSPropertyID::CSSPropertyWebkitTextStrokeWidth
    false, // CSSPropertyID::CSSPropertyWebkitUserDrag
    true , // CSSPropertyID::CSSPropertyWebkitUserModify
    true , // CSSPropertyID::CSSPropertyWebkitUserSelect
    true , // CSSPropertyID::CSSPropertyWordSpacing
    false, // CSSPropertyID::CSSPropertyBorderBottomColor
    false, // CSSPropertyID::CSSPropertyBorderBottomLeftRadius
    false, // CSSPropertyID::CSSPropertyBorderBottomRightRadius
    false, // CSSPropertyID::CSSPropertyBorderBottomStyle
    false, // CSSPropertyID::CSSPropertyBorderBottomWidth
    false, // CSSPropertyID::CSSPropertyBorderLeftColor
    false, // CSSPropertyID::CSSPropertyBorderLeftStyle
    false, // CSSPropertyID::CSSPropertyBorderLeftWidth
    false, // CSSPropertyID::CSSPropertyBorderRightColor
    false, // CSSPropertyID::CSSPropertyBorderRightStyle
    false, // CSSPropertyID::CSSPropertyBorderRightWidth
    false, // CSSPropertyID::CSSPropertyBorderTopColor
    false, // CSSPropertyID::CSSPropertyBorderTopLeftRadius
    false, // CSSPropertyID::CSSPropertyBorderTopRightRadius
    false, // CSSPropertyID::CSSPropertyBorderTopStyle
    false, // CSSPropertyID::CSSPropertyBorderTopWidth
    false, // CSSPropertyID::CSSPropertyBottom
    false, // CSSPropertyID::CSSPropertyContainIntrinsicHeight
    false, // CSSPropertyID::CSSPropertyContainIntrinsicWidth
    false, // CSSPropertyID::CSSPropertyCornerBottomLeftShape
    false, // CSSPropertyID::CSSPropertyCornerBottomRightShape
    false, // CSSPropertyID::CSSPropertyCornerTopLeftShape
    false, // CSSPropertyID::CSSPropertyCornerTopRightShape
    false, // CSSPropertyID::CSSPropertyHeight
    false, // CSSPropertyID::CSSPropertyLeft
    false, // CSSPropertyID::CSSPropertyMarginBottom
    false, // CSSPropertyID::CSSPropertyMarginLeft
    false, // CSSPropertyID::CSSPropertyMarginRight
    false, // CSSPropertyID::CSSPropertyMarginTop
    false, // CSSPropertyID::CSSPropertyMaxHeight
    false, // CSSPropertyID::CSSPropertyMaxWidth
    false, // CSSPropertyID::CSSPropertyMinHeight
    false, // CSSPropertyID::CSSPropertyMinWidth
    false, // CSSPropertyID::CSSPropertyOverflowX
    false, // CSSPropertyID::CSSPropertyOverflowY
    false, // CSSPropertyID::CSSPropertyOverscrollBehaviorX
    false, // CSSPropertyID::CSSPropertyOverscrollBehaviorY
    false, // CSSPropertyID::CSSPropertyPaddingBottom
    false, // CSSPropertyID::CSSPropertyPaddingLeft
    false, // CSSPropertyID::CSSPropertyPaddingRight
    false, // CSSPropertyID::CSSPropertyPaddingTop
    false, // CSSPropertyID::CSSPropertyRight
    false, // CSSPropertyID::CSSPropertyScrollMarginBottom
    false, // CSSPropertyID::CSSPropertyScrollMarginLeft
    false, // CSSPropertyID::CSSPropertyScrollMarginRight
    false, // CSSPropertyID::CSSPropertyScrollMarginTop
    false, // CSSPropertyID::CSSPropertyScrollPaddingBottom
    false, // CSSPropertyID::CSSPropertyScrollPaddingLeft
    false, // CSSPropertyID::CSSPropertyScrollPaddingRight
    false, // CSSPropertyID::CSSPropertyScrollPaddingTop
    false, // CSSPropertyID::CSSPropertyTop
    false, // CSSPropertyID::CSSPropertyWidth
    false, // CSSPropertyID::CSSPropertyBlockSize
    false, // CSSPropertyID::CSSPropertyBorderBlockEndColor
    false, // CSSPropertyID::CSSPropertyBorderBlockEndStyle
    false, // CSSPropertyID::CSSPropertyBorderBlockEndWidth
    false, // CSSPropertyID::CSSPropertyBorderBlockStartColor
    false, // CSSPropertyID::CSSPropertyBorderBlockStartStyle
    false, // CSSPropertyID::CSSPropertyBorderBlockStartWidth
    false, // CSSPropertyID::CSSPropertyBorderEndEndRadius
    false, // CSSPropertyID::CSSPropertyBorderEndStartRadius
    false, // CSSPropertyID::CSSPropertyBorderInlineEndColor
    false, // CSSPropertyID::CSSPropertyBorderInlineEndStyle
    false, // CSSPropertyID::CSSPropertyBorderInlineEndWidth
    false, // CSSPropertyID::CSSPropertyBorderInlineStartColor
    false, // CSSPropertyID::CSSPropertyBorderInlineStartStyle
    false, // CSSPropertyID::CSSPropertyBorderInlineStartWidth
    false, // CSSPropertyID::CSSPropertyBorderStartEndRadius
    false, // CSSPropertyID::CSSPropertyBorderStartStartRadius
    false, // CSSPropertyID::CSSPropertyContainIntrinsicBlockSize
    false, // CSSPropertyID::CSSPropertyContainIntrinsicInlineSize
    false, // CSSPropertyID::CSSPropertyCornerEndEndShape
    false, // CSSPropertyID::CSSPropertyCornerEndStartShape
    false, // CSSPropertyID::CSSPropertyCornerStartEndShape
    false, // CSSPropertyID::CSSPropertyCornerStartStartShape
    false, // CSSPropertyID::CSSPropertyInlineSize
    false, // CSSPropertyID::CSSPropertyInsetBlockEnd
    false, // CSSPropertyID::CSSPropertyInsetBlockStart
    false, // CSSPropertyID::CSSPropertyInsetInlineEnd
    false, // CSSPropertyID::CSSPropertyInsetInlineStart
    false, // CSSPropertyID::CSSPropertyMarginBlockEnd
    false, // CSSPropertyID::CSSPropertyMarginBlockStart
    false, // CSSPropertyID::CSSPropertyMarginInlineEnd
    false, // CSSPropertyID::CSSPropertyMarginInlineStart
    false, // CSSPropertyID::CSSPropertyMaxBlockSize
    false, // CSSPropertyID::CSSPropertyMaxInlineSize
    false, // CSSPropertyID::CSSPropertyMinBlockSize
    false, // CSSPropertyID::CSSPropertyMinInlineSize
    false, // CSSPropertyID::CSSPropertyOverflowBlock
    false, // CSSPropertyID::CSSPropertyOverflowInline
    false, // CSSPropertyID::CSSPropertyOverscrollBehaviorBlock
    false, // CSSPropertyID::CSSPropertyOverscrollBehaviorInline
    false, // CSSPropertyID::CSSPropertyPaddingBlockEnd
    false, // CSSPropertyID::CSSPropertyPaddingBlockStart
    false, // CSSPropertyID::CSSPropertyPaddingInlineEnd
    false, // CSSPropertyID::CSSPropertyPaddingInlineStart
    false, // CSSPropertyID::CSSPropertyScrollMarginBlockEnd
    false, // CSSPropertyID::CSSPropertyScrollMarginBlockStart
    false, // CSSPropertyID::CSSPropertyScrollMarginInlineEnd
    false, // CSSPropertyID::CSSPropertyScrollMarginInlineStart
    false, // CSSPropertyID::CSSPropertyScrollPaddingBlockEnd
    false, // CSSPropertyID::CSSPropertyScrollPaddingBlockStart
    false, // CSSPropertyID::CSSPropertyScrollPaddingInlineEnd
    false, // CSSPropertyID::CSSPropertyScrollPaddingInlineStart
    false, // CSSPropertyID::CSSPropertyAll
    false, // CSSPropertyID::CSSPropertyAnimation
    false, // CSSPropertyID::CSSPropertyAnimationRange
    false, // CSSPropertyID::CSSPropertyBackground
    false, // CSSPropertyID::CSSPropertyBackgroundPosition
    false, // CSSPropertyID::CSSPropertyBlockStep
    false, // CSSPropertyID::CSSPropertyBorder
    false, // CSSPropertyID::CSSPropertyBorderBlock
    false, // CSSPropertyID::CSSPropertyBorderBlockColor
    false, // CSSPropertyID::CSSPropertyBorderBlockEnd
    false, // CSSPropertyID::CSSPropertyBorderBlockStart
    false, // CSSPropertyID::CSSPropertyBorderBlockStyle
    false, // CSSPropertyID::CSSPropertyBorderBlockWidth
    false, // CSSPropertyID::CSSPropertyBorderBottom
    false, // CSSPropertyID::CSSPropertyBorderColor
    false, // CSSPropertyID::CSSPropertyBorderImage
    false, // CSSPropertyID::CSSPropertyBorderInline
    false, // CSSPropertyID::CSSPropertyBorderInlineColor
    false, // CSSPropertyID::CSSPropertyBorderInlineEnd
    false, // CSSPropertyID::CSSPropertyBorderInlineStart
    false, // CSSPropertyID::CSSPropertyBorderInlineStyle
    false, // CSSPropertyID::CSSPropertyBorderInlineWidth
    false, // CSSPropertyID::CSSPropertyBorderLeft
    false, // CSSPropertyID::CSSPropertyBorderRadius
    false, // CSSPropertyID::CSSPropertyBorderRight
    true , // CSSPropertyID::CSSPropertyBorderSpacing
    false, // CSSPropertyID::CSSPropertyBorderStyle
    false, // CSSPropertyID::CSSPropertyBorderTop
    false, // CSSPropertyID::CSSPropertyBorderWidth
    false, // CSSPropertyID::CSSPropertyColumnRule
    false, // CSSPropertyID::CSSPropertyColumns
    false, // CSSPropertyID::CSSPropertyContainIntrinsicSize
    false, // CSSPropertyID::CSSPropertyContainer
    false, // CSSPropertyID::CSSPropertyCornerShape
    false, // CSSPropertyID::CSSPropertyFlex
    false, // CSSPropertyID::CSSPropertyFlexFlow
    true , // CSSPropertyID::CSSPropertyFont
    true , // CSSPropertyID::CSSPropertyFontSynthesis
    true , // CSSPropertyID::CSSPropertyFontVariant
    false, // CSSPropertyID::CSSPropertyGap
    false, // CSSPropertyID::CSSPropertyGrid
    false, // CSSPropertyID::CSSPropertyGridArea
    false, // CSSPropertyID::CSSPropertyGridColumn
    false, // CSSPropertyID::CSSPropertyGridRow
    false, // CSSPropertyID::CSSPropertyGridTemplate
    false, // CSSPropertyID::CSSPropertyInset
    false, // CSSPropertyID::CSSPropertyInsetBlock
    false, // CSSPropertyID::CSSPropertyInsetInline
    false, // CSSPropertyID::CSSPropertyLineClamp
    true , // CSSPropertyID::CSSPropertyListStyle
    false, // CSSPropertyID::CSSPropertyMargin
    false, // CSSPropertyID::CSSPropertyMarginBlock
    false, // CSSPropertyID::CSSPropertyMarginInline
    true , // CSSPropertyID::CSSPropertyMarker
    false, // CSSPropertyID::CSSPropertyMask
    false, // CSSPropertyID::CSSPropertyMaskBorder
    false, // CSSPropertyID::CSSPropertyMaskPosition
    false, // CSSPropertyID::CSSPropertyOffset
    false, // CSSPropertyID::CSSPropertyOutline
    false, // CSSPropertyID::CSSPropertyOverflow
    false, // CSSPropertyID::CSSPropertyOverscrollBehavior
    false, // CSSPropertyID::CSSPropertyPadding
    false, // CSSPropertyID::CSSPropertyPaddingBlock
    false, // CSSPropertyID::CSSPropertyPaddingInline
    false, // CSSPropertyID::CSSPropertyPageBreakAfter
    false, // CSSPropertyID::CSSPropertyPageBreakBefore
    false, // CSSPropertyID::CSSPropertyPageBreakInside
    false, // CSSPropertyID::CSSPropertyPerspectiveOrigin
    false, // CSSPropertyID::CSSPropertyPlaceContent
    false, // CSSPropertyID::CSSPropertyPlaceItems
    false, // CSSPropertyID::CSSPropertyPlaceSelf
    false, // CSSPropertyID::CSSPropertyPositionTry
    false, // CSSPropertyID::CSSPropertyScrollMargin
    false, // CSSPropertyID::CSSPropertyScrollMarginBlock
    false, // CSSPropertyID::CSSPropertyScrollMarginInline
    false, // CSSPropertyID::CSSPropertyScrollPadding
    false, // CSSPropertyID::CSSPropertyScrollPaddingBlock
    false, // CSSPropertyID::CSSPropertyScrollPaddingInline
    false, // CSSPropertyID::CSSPropertyScrollTimeline
    false, // CSSPropertyID::CSSPropertyTextBox
    false, // CSSPropertyID::CSSPropertyTextDecoration
    true , // CSSPropertyID::CSSPropertyTextDecorationSkip
    true , // CSSPropertyID::CSSPropertyTextEmphasis
    true , // CSSPropertyID::CSSPropertyTextWrap
    false, // CSSPropertyID::CSSPropertyTransformOrigin
    false, // CSSPropertyID::CSSPropertyTransition
    false, // CSSPropertyID::CSSPropertyViewTimeline
    true , // CSSPropertyID::CSSPropertyWhiteSpace
    false, // CSSPropertyID::CSSPropertyWebkitBackgroundSize
    false, // CSSPropertyID::CSSPropertyWebkitBorderImage
    false, // CSSPropertyID::CSSPropertyWebkitBorderRadius
    false, // CSSPropertyID::CSSPropertyWebkitColumnBreakAfter
    false, // CSSPropertyID::CSSPropertyWebkitColumnBreakBefore
    false, // CSSPropertyID::CSSPropertyWebkitColumnBreakInside
    false, // CSSPropertyID::CSSPropertyWebkitMask
    false, // CSSPropertyID::CSSPropertyWebkitMaskBoxImage
    false, // CSSPropertyID::CSSPropertyWebkitMaskPosition
    false, // CSSPropertyID::CSSPropertyWebkitPerspective
    false, // CSSPropertyID::CSSPropertyWebkitTextDecoration
    true , // CSSPropertyID::CSSPropertyWebkitTextOrientation
    true , // CSSPropertyID::CSSPropertyWebkitTextStroke
};

bool CSSProperty::isInheritedProperty(CSSPropertyID id)
{
    ASSERT(id < cssPropertyIDEnumValueCount);
    ASSERT(id != CSSPropertyID::CSSPropertyInvalid);
    return isInheritedPropertyTable[id];
}

CSSPropertyID cascadeAliasProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyWebkitBackdropFilter:
        return CSSPropertyID::CSSPropertyBackdropFilter;
    case CSSPropertyID::CSSPropertyWebkitBackgroundClip:
        return CSSPropertyID::CSSPropertyBackgroundClip;
    case CSSPropertyID::CSSPropertyWebkitBackgroundOrigin:
        return CSSPropertyID::CSSPropertyBackgroundOrigin;
    case CSSPropertyID::CSSPropertyWebkitBoxShadow:
        return CSSPropertyID::CSSPropertyBoxShadow;
    case CSSPropertyID::CSSPropertyWebkitMaskClip:
        return CSSPropertyID::CSSPropertyMaskClip;
    case CSSPropertyID::CSSPropertyWebkitMaskComposite:
        return CSSPropertyID::CSSPropertyMaskComposite;
    case CSSPropertyID::CSSPropertyWebkitMaskSourceType:
        return CSSPropertyID::CSSPropertyMaskMode;
    case CSSPropertyID::CSSPropertyWebkitRubyPosition:
        return CSSPropertyID::CSSPropertyRubyPosition;
    case CSSPropertyID::CSSPropertyWebkitTextCombine:
        return CSSPropertyID::CSSPropertyTextCombineUpright;
    default:
        return id;
    }
}

Vector<String> CSSProperty::aliasesForProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyColorScheme:
        return { "supported-color-schemes"_s };
    case CSSPropertyID::CSSPropertyWritingMode:
        return { "-webkit-writing-mode"_s, "-epub-writing-mode"_s };
    case CSSPropertyID::CSSPropertyFontKerning:
        return { "-webkit-font-kerning"_s };
    case CSSPropertyID::CSSPropertyFontWidth:
        return { "font-stretch"_s };
    case CSSPropertyID::CSSPropertyAlignContent:
        return { "-webkit-align-content"_s };
    case CSSPropertyID::CSSPropertyAlignItems:
        return { "-webkit-align-items"_s };
    case CSSPropertyID::CSSPropertyAlignSelf:
        return { "-webkit-align-self"_s };
    case CSSPropertyID::CSSPropertyAnimationDelay:
        return { "-webkit-animation-delay"_s };
    case CSSPropertyID::CSSPropertyAnimationDirection:
        return { "-webkit-animation-direction"_s };
    case CSSPropertyID::CSSPropertyAnimationDuration:
        return { "-webkit-animation-duration"_s };
    case CSSPropertyID::CSSPropertyAnimationFillMode:
        return { "-webkit-animation-fill-mode"_s };
    case CSSPropertyID::CSSPropertyAnimationIterationCount:
        return { "-webkit-animation-iteration-count"_s };
    case CSSPropertyID::CSSPropertyAnimationName:
        return { "-webkit-animation-name"_s };
    case CSSPropertyID::CSSPropertyAnimationPlayState:
        return { "-webkit-animation-play-state"_s };
    case CSSPropertyID::CSSPropertyAnimationTimingFunction:
        return { "-webkit-animation-timing-function"_s };
    case CSSPropertyID::CSSPropertyAppearance:
        return { "-webkit-appearance"_s };
    case CSSPropertyID::CSSPropertyBackfaceVisibility:
        return { "-webkit-backface-visibility"_s };
    case CSSPropertyID::CSSPropertyBoxSizing:
        return { "-webkit-box-sizing"_s };
    case CSSPropertyID::CSSPropertyCaptionSide:
        return { "-epub-caption-side"_s };
    case CSSPropertyID::CSSPropertyClipPath:
        return { "-webkit-clip-path"_s };
    case CSSPropertyID::CSSPropertyColumnCount:
        return { "-webkit-column-count"_s };
    case CSSPropertyID::CSSPropertyColumnFill:
        return { "-webkit-column-fill"_s };
    case CSSPropertyID::CSSPropertyColumnGap:
        return { "grid-column-gap"_s, "-webkit-column-gap"_s };
    case CSSPropertyID::CSSPropertyColumnRuleColor:
        return { "-webkit-column-rule-color"_s };
    case CSSPropertyID::CSSPropertyColumnRuleStyle:
        return { "-webkit-column-rule-style"_s };
    case CSSPropertyID::CSSPropertyColumnRuleWidth:
        return { "-webkit-column-rule-width"_s };
    case CSSPropertyID::CSSPropertyColumnSpan:
        return { "-webkit-column-span"_s };
    case CSSPropertyID::CSSPropertyColumnWidth:
        return { "-webkit-column-width"_s };
    case CSSPropertyID::CSSPropertyFilter:
        return { "-webkit-filter"_s };
    case CSSPropertyID::CSSPropertyFlexBasis:
        return { "-webkit-flex-basis"_s };
    case CSSPropertyID::CSSPropertyFlexDirection:
        return { "-webkit-flex-direction"_s };
    case CSSPropertyID::CSSPropertyFlexGrow:
        return { "-webkit-flex-grow"_s };
    case CSSPropertyID::CSSPropertyFlexShrink:
        return { "-webkit-flex-shrink"_s };
    case CSSPropertyID::CSSPropertyFlexWrap:
        return { "-webkit-flex-wrap"_s };
    case CSSPropertyID::CSSPropertyHyphenateCharacter:
        return { "-webkit-hyphenate-character"_s };
    case CSSPropertyID::CSSPropertyHyphens:
        return { "-epub-hyphens"_s, "-webkit-hyphens"_s };
    case CSSPropertyID::CSSPropertyJustifyContent:
        return { "-webkit-justify-content"_s };
    case CSSPropertyID::CSSPropertyJustifyItems:
        return { "-webkit-justify-items"_s };
    case CSSPropertyID::CSSPropertyLineBreak:
        return { "-webkit-line-break"_s };
    case CSSPropertyID::CSSPropertyMaskBorderOutset:
        return { "-webkit-mask-box-image-outset"_s };
    case CSSPropertyID::CSSPropertyMaskBorderRepeat:
        return { "-webkit-mask-box-image-repeat"_s };
    case CSSPropertyID::CSSPropertyMaskBorderSlice:
        return { "-webkit-mask-box-image-slice"_s };
    case CSSPropertyID::CSSPropertyMaskBorderSource:
        return { "-webkit-mask-box-image-source"_s };
    case CSSPropertyID::CSSPropertyMaskBorderWidth:
        return { "-webkit-mask-box-image-width"_s };
    case CSSPropertyID::CSSPropertyMaskImage:
        return { "-webkit-mask-image"_s };
    case CSSPropertyID::CSSPropertyMaskOrigin:
        return { "-webkit-mask-origin"_s };
    case CSSPropertyID::CSSPropertyMaskRepeat:
        return { "-webkit-mask-repeat"_s };
    case CSSPropertyID::CSSPropertyMaskSize:
        return { "-webkit-mask-size"_s };
    case CSSPropertyID::CSSPropertyOpacity:
        return { "-webkit-opacity"_s };
    case CSSPropertyID::CSSPropertyOrder:
        return { "-webkit-order"_s };
    case CSSPropertyID::CSSPropertyOverflowWrap:
        return { "word-wrap"_s };
    case CSSPropertyID::CSSPropertyPerspectiveOriginX:
        return { "-webkit-perspective-origin-x"_s };
    case CSSPropertyID::CSSPropertyPerspectiveOriginY:
        return { "-webkit-perspective-origin-y"_s };
    case CSSPropertyID::CSSPropertyPrintColorAdjust:
        return { "-webkit-print-color-adjust"_s, "color-adjust"_s };
    case CSSPropertyID::CSSPropertyRowGap:
        return { "grid-row-gap"_s };
    case CSSPropertyID::CSSPropertyShapeImageThreshold:
        return { "-webkit-shape-image-threshold"_s };
    case CSSPropertyID::CSSPropertyShapeMargin:
        return { "-webkit-shape-margin"_s };
    case CSSPropertyID::CSSPropertyShapeOutside:
        return { "-webkit-shape-outside"_s };
    case CSSPropertyID::CSSPropertyTextDecorationColor:
        return { "-webkit-text-decoration-color"_s };
    case CSSPropertyID::CSSPropertyTextDecorationLine:
        return { "-webkit-text-decoration-line"_s };
    case CSSPropertyID::CSSPropertyTextDecorationStyle:
        return { "-webkit-text-decoration-style"_s };
    case CSSPropertyID::CSSPropertyTextEmphasisColor:
        return { "-epub-text-emphasis-color"_s, "-webkit-text-emphasis-color"_s };
    case CSSPropertyID::CSSPropertyTextEmphasisPosition:
        return { "-webkit-text-emphasis-position"_s };
    case CSSPropertyID::CSSPropertyTextEmphasisStyle:
        return { "-epub-text-emphasis-style"_s, "-webkit-text-emphasis-style"_s };
    case CSSPropertyID::CSSPropertyTextTransform:
        return { "-epub-text-transform"_s };
    case CSSPropertyID::CSSPropertyTextUnderlinePosition:
        return { "-webkit-text-underline-position"_s };
    case CSSPropertyID::CSSPropertyTransform:
        return { "-webkit-transform"_s };
    case CSSPropertyID::CSSPropertyTransformOriginX:
        return { "-webkit-transform-origin-x"_s };
    case CSSPropertyID::CSSPropertyTransformOriginY:
        return { "-webkit-transform-origin-y"_s };
    case CSSPropertyID::CSSPropertyTransformOriginZ:
        return { "-webkit-transform-origin-z"_s };
    case CSSPropertyID::CSSPropertyTransformStyle:
        return { "-webkit-transform-style"_s };
    case CSSPropertyID::CSSPropertyTransitionDelay:
        return { "-webkit-transition-delay"_s };
    case CSSPropertyID::CSSPropertyTransitionDuration:
        return { "-webkit-transition-duration"_s };
    case CSSPropertyID::CSSPropertyTransitionProperty:
        return { "-webkit-transition-property"_s };
    case CSSPropertyID::CSSPropertyTransitionTimingFunction:
        return { "-webkit-transition-timing-function"_s };
    case CSSPropertyID::CSSPropertyWordBreak:
        return { "-epub-word-break"_s };
    case CSSPropertyID::CSSPropertyWebkitTextCombine:
        return { "-epub-text-combine"_s };
    case CSSPropertyID::CSSPropertyBorderBottomLeftRadius:
        return { "-webkit-border-bottom-left-radius"_s };
    case CSSPropertyID::CSSPropertyBorderBottomRightRadius:
        return { "-webkit-border-bottom-right-radius"_s };
    case CSSPropertyID::CSSPropertyBorderTopLeftRadius:
        return { "-webkit-border-top-left-radius"_s };
    case CSSPropertyID::CSSPropertyBorderTopRightRadius:
        return { "-webkit-border-top-right-radius"_s };
    case CSSPropertyID::CSSPropertyScrollMarginBottom:
        return { "scroll-snap-margin-bottom"_s };
    case CSSPropertyID::CSSPropertyScrollMarginLeft:
        return { "scroll-snap-margin-left"_s };
    case CSSPropertyID::CSSPropertyScrollMarginRight:
        return { "scroll-snap-margin-right"_s };
    case CSSPropertyID::CSSPropertyScrollMarginTop:
        return { "scroll-snap-margin-top"_s };
    case CSSPropertyID::CSSPropertyBlockSize:
        return { "-webkit-logical-height"_s };
    case CSSPropertyID::CSSPropertyBorderBlockEndColor:
        return { "-webkit-border-after-color"_s };
    case CSSPropertyID::CSSPropertyBorderBlockEndStyle:
        return { "-webkit-border-after-style"_s };
    case CSSPropertyID::CSSPropertyBorderBlockEndWidth:
        return { "-webkit-border-after-width"_s };
    case CSSPropertyID::CSSPropertyBorderBlockStartColor:
        return { "-webkit-border-before-color"_s };
    case CSSPropertyID::CSSPropertyBorderBlockStartStyle:
        return { "-webkit-border-before-style"_s };
    case CSSPropertyID::CSSPropertyBorderBlockStartWidth:
        return { "-webkit-border-before-width"_s };
    case CSSPropertyID::CSSPropertyBorderInlineEndColor:
        return { "-webkit-border-end-color"_s };
    case CSSPropertyID::CSSPropertyBorderInlineEndStyle:
        return { "-webkit-border-end-style"_s };
    case CSSPropertyID::CSSPropertyBorderInlineEndWidth:
        return { "-webkit-border-end-width"_s };
    case CSSPropertyID::CSSPropertyBorderInlineStartColor:
        return { "-webkit-border-start-color"_s };
    case CSSPropertyID::CSSPropertyBorderInlineStartStyle:
        return { "-webkit-border-start-style"_s };
    case CSSPropertyID::CSSPropertyBorderInlineStartWidth:
        return { "-webkit-border-start-width"_s };
    case CSSPropertyID::CSSPropertyInlineSize:
        return { "-webkit-logical-width"_s };
    case CSSPropertyID::CSSPropertyMarginBlockEnd:
        return { "-webkit-margin-after"_s };
    case CSSPropertyID::CSSPropertyMarginBlockStart:
        return { "-webkit-margin-before"_s };
    case CSSPropertyID::CSSPropertyMarginInlineEnd:
        return { "-webkit-margin-end"_s };
    case CSSPropertyID::CSSPropertyMarginInlineStart:
        return { "-webkit-margin-start"_s };
    case CSSPropertyID::CSSPropertyMaxBlockSize:
        return { "-webkit-max-logical-height"_s };
    case CSSPropertyID::CSSPropertyMaxInlineSize:
        return { "-webkit-max-logical-width"_s };
    case CSSPropertyID::CSSPropertyMinBlockSize:
        return { "-webkit-min-logical-height"_s };
    case CSSPropertyID::CSSPropertyMinInlineSize:
        return { "-webkit-min-logical-width"_s };
    case CSSPropertyID::CSSPropertyPaddingBlockEnd:
        return { "-webkit-padding-after"_s };
    case CSSPropertyID::CSSPropertyPaddingBlockStart:
        return { "-webkit-padding-before"_s };
    case CSSPropertyID::CSSPropertyPaddingInlineEnd:
        return { "-webkit-padding-end"_s };
    case CSSPropertyID::CSSPropertyPaddingInlineStart:
        return { "-webkit-padding-start"_s };
    case CSSPropertyID::CSSPropertyAnimation:
        return { "-webkit-animation"_s };
    case CSSPropertyID::CSSPropertyBorderBlockEnd:
        return { "-webkit-border-after"_s };
    case CSSPropertyID::CSSPropertyBorderBlockStart:
        return { "-webkit-border-before"_s };
    case CSSPropertyID::CSSPropertyBorderInlineEnd:
        return { "-webkit-border-end"_s };
    case CSSPropertyID::CSSPropertyBorderInlineStart:
        return { "-webkit-border-start"_s };
    case CSSPropertyID::CSSPropertyColumnRule:
        return { "-webkit-column-rule"_s };
    case CSSPropertyID::CSSPropertyColumns:
        return { "-webkit-columns"_s };
    case CSSPropertyID::CSSPropertyFlex:
        return { "-webkit-flex"_s };
    case CSSPropertyID::CSSPropertyFlexFlow:
        return { "-webkit-flex-flow"_s };
    case CSSPropertyID::CSSPropertyGap:
        return { "grid-gap"_s };
    case CSSPropertyID::CSSPropertyPerspectiveOrigin:
        return { "-webkit-perspective-origin"_s };
    case CSSPropertyID::CSSPropertyScrollMargin:
        return { "scroll-snap-margin"_s };
    case CSSPropertyID::CSSPropertyTextDecorationSkip:
        return { "-webkit-text-decoration-skip"_s };
    case CSSPropertyID::CSSPropertyTextEmphasis:
        return { "-epub-text-emphasis"_s, "-webkit-text-emphasis"_s };
    case CSSPropertyID::CSSPropertyTransformOrigin:
        return { "-webkit-transform-origin"_s };
    case CSSPropertyID::CSSPropertyTransition:
        return { "-webkit-transition"_s };
    case CSSPropertyID::CSSPropertyWebkitTextOrientation:
        return { "-epub-text-orientation"_s };
    default:
        return { };
    }
}

const WTF::BitSet<cssPropertyIDEnumValueCount> CSSProperty::colorProperties = ([]() -> WTF::BitSet<cssPropertyIDEnumValueCount> {
    WTF::BitSet<cssPropertyIDEnumValueCount> result;
    result.set(CSSPropertyID::CSSPropertyAccentColor);
    result.set(CSSPropertyID::CSSPropertyBackgroundColor);
    result.set(CSSPropertyID::CSSPropertyCaretColor);
    result.set(CSSPropertyID::CSSPropertyColor);
    result.set(CSSPropertyID::CSSPropertyColumnRuleColor);
    result.set(CSSPropertyID::CSSPropertyFill);
    result.set(CSSPropertyID::CSSPropertyFloodColor);
    result.set(CSSPropertyID::CSSPropertyLightingColor);
    result.set(CSSPropertyID::CSSPropertyOutlineColor);
    result.set(CSSPropertyID::CSSPropertyStopColor);
    result.set(CSSPropertyID::CSSPropertyStroke);
    result.set(CSSPropertyID::CSSPropertyStrokeColor);
    result.set(CSSPropertyID::CSSPropertyTextDecorationColor);
    result.set(CSSPropertyID::CSSPropertyTextEmphasisColor);
    result.set(CSSPropertyID::CSSPropertyWebkitTextFillColor);
    result.set(CSSPropertyID::CSSPropertyWebkitTextStrokeColor);
    result.set(CSSPropertyID::CSSPropertyBorderBottomColor);
    result.set(CSSPropertyID::CSSPropertyBorderLeftColor);
    result.set(CSSPropertyID::CSSPropertyBorderRightColor);
    result.set(CSSPropertyID::CSSPropertyBorderTopColor);
    result.set(CSSPropertyID::CSSPropertyBorderBlockEndColor);
    result.set(CSSPropertyID::CSSPropertyBorderBlockStartColor);
    result.set(CSSPropertyID::CSSPropertyBorderInlineEndColor);
    result.set(CSSPropertyID::CSSPropertyBorderInlineStartColor);
    return result;
})();

const WTF::BitSet<cssPropertyIDEnumValueCount> CSSProperty::physicalProperties = ([]() -> WTF::BitSet<cssPropertyIDEnumValueCount> {
    WTF::BitSet<cssPropertyIDEnumValueCount> result;
    result.set(CSSPropertyID::CSSPropertyBorderBottomColor);
    result.set(CSSPropertyID::CSSPropertyBorderBottomLeftRadius);
    result.set(CSSPropertyID::CSSPropertyBorderBottomRightRadius);
    result.set(CSSPropertyID::CSSPropertyBorderBottomStyle);
    result.set(CSSPropertyID::CSSPropertyBorderBottomWidth);
    result.set(CSSPropertyID::CSSPropertyBorderLeftColor);
    result.set(CSSPropertyID::CSSPropertyBorderLeftStyle);
    result.set(CSSPropertyID::CSSPropertyBorderLeftWidth);
    result.set(CSSPropertyID::CSSPropertyBorderRightColor);
    result.set(CSSPropertyID::CSSPropertyBorderRightStyle);
    result.set(CSSPropertyID::CSSPropertyBorderRightWidth);
    result.set(CSSPropertyID::CSSPropertyBorderTopColor);
    result.set(CSSPropertyID::CSSPropertyBorderTopLeftRadius);
    result.set(CSSPropertyID::CSSPropertyBorderTopRightRadius);
    result.set(CSSPropertyID::CSSPropertyBorderTopStyle);
    result.set(CSSPropertyID::CSSPropertyBorderTopWidth);
    result.set(CSSPropertyID::CSSPropertyBottom);
    result.set(CSSPropertyID::CSSPropertyContainIntrinsicHeight);
    result.set(CSSPropertyID::CSSPropertyContainIntrinsicWidth);
    result.set(CSSPropertyID::CSSPropertyCornerBottomLeftShape);
    result.set(CSSPropertyID::CSSPropertyCornerBottomRightShape);
    result.set(CSSPropertyID::CSSPropertyCornerTopLeftShape);
    result.set(CSSPropertyID::CSSPropertyCornerTopRightShape);
    result.set(CSSPropertyID::CSSPropertyHeight);
    result.set(CSSPropertyID::CSSPropertyLeft);
    result.set(CSSPropertyID::CSSPropertyMarginBottom);
    result.set(CSSPropertyID::CSSPropertyMarginLeft);
    result.set(CSSPropertyID::CSSPropertyMarginRight);
    result.set(CSSPropertyID::CSSPropertyMarginTop);
    result.set(CSSPropertyID::CSSPropertyMaxHeight);
    result.set(CSSPropertyID::CSSPropertyMaxWidth);
    result.set(CSSPropertyID::CSSPropertyMinHeight);
    result.set(CSSPropertyID::CSSPropertyMinWidth);
    result.set(CSSPropertyID::CSSPropertyOverflowX);
    result.set(CSSPropertyID::CSSPropertyOverflowY);
    result.set(CSSPropertyID::CSSPropertyOverscrollBehaviorX);
    result.set(CSSPropertyID::CSSPropertyOverscrollBehaviorY);
    result.set(CSSPropertyID::CSSPropertyPaddingBottom);
    result.set(CSSPropertyID::CSSPropertyPaddingLeft);
    result.set(CSSPropertyID::CSSPropertyPaddingRight);
    result.set(CSSPropertyID::CSSPropertyPaddingTop);
    result.set(CSSPropertyID::CSSPropertyRight);
    result.set(CSSPropertyID::CSSPropertyScrollMarginBottom);
    result.set(CSSPropertyID::CSSPropertyScrollMarginLeft);
    result.set(CSSPropertyID::CSSPropertyScrollMarginRight);
    result.set(CSSPropertyID::CSSPropertyScrollMarginTop);
    result.set(CSSPropertyID::CSSPropertyScrollPaddingBottom);
    result.set(CSSPropertyID::CSSPropertyScrollPaddingLeft);
    result.set(CSSPropertyID::CSSPropertyScrollPaddingRight);
    result.set(CSSPropertyID::CSSPropertyScrollPaddingTop);
    result.set(CSSPropertyID::CSSPropertyTop);
    result.set(CSSPropertyID::CSSPropertyWidth);
    return result;
})();

char16_t CSSProperty::listValuedPropertySeparator(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyFontSizeAdjust:
        return ' ';
    case CSSPropertyID::CSSPropertyAnimationDelay:
        return ',';
    case CSSPropertyID::CSSPropertyAnimationDirection:
        return ',';
    case CSSPropertyID::CSSPropertyAnimationDuration:
        return ',';
    case CSSPropertyID::CSSPropertyAnimationFillMode:
        return ',';
    case CSSPropertyID::CSSPropertyAnimationIterationCount:
        return ',';
    case CSSPropertyID::CSSPropertyAnimationName:
        return ',';
    case CSSPropertyID::CSSPropertyAnimationPlayState:
        return ',';
    case CSSPropertyID::CSSPropertyAnimationRangeEnd:
        return ',';
    case CSSPropertyID::CSSPropertyAnimationRangeStart:
        return ',';
    case CSSPropertyID::CSSPropertyAnimationTimingFunction:
        return ',';
    case CSSPropertyID::CSSPropertyBackgroundAttachment:
        return ',';
    case CSSPropertyID::CSSPropertyBackgroundBlendMode:
        return ',';
    case CSSPropertyID::CSSPropertyBackgroundClip:
        return ' ';
    case CSSPropertyID::CSSPropertyBackgroundImage:
        return ' ';
    case CSSPropertyID::CSSPropertyBackgroundOrigin:
        return ' ';
    case CSSPropertyID::CSSPropertyBackgroundSize:
        return ' ';
    case CSSPropertyID::CSSPropertyContent:
        return ' ';
    case CSSPropertyID::CSSPropertyGridAutoColumns:
        return ' ';
    case CSSPropertyID::CSSPropertyGridAutoRows:
        return ' ';
    case CSSPropertyID::CSSPropertyTransitionBehavior:
        return ',';
    case CSSPropertyID::CSSPropertyTransitionDelay:
        return ',';
    case CSSPropertyID::CSSPropertyTransitionDuration:
        return ',';
    case CSSPropertyID::CSSPropertyAnimationRange:
        return ',';
    default:
        break;
    }
    return '\0';
}

bool CSSProperty::allowsNumberOrIntegerInput(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyFontSizeAdjust:
    case CSSPropertyID::CSSPropertyFontWeight:
    case CSSPropertyID::CSSPropertyZoom:
    case CSSPropertyID::CSSPropertyAnimationIterationCount:
    case CSSPropertyID::CSSPropertyBorderImageOutset:
    case CSSPropertyID::CSSPropertyBorderImageSlice:
    case CSSPropertyID::CSSPropertyBorderImageWidth:
    case CSSPropertyID::CSSPropertyColumnCount:
    case CSSPropertyID::CSSPropertyFillOpacity:
    case CSSPropertyID::CSSPropertyFlexGrow:
    case CSSPropertyID::CSSPropertyFlexShrink:
    case CSSPropertyID::CSSPropertyFloodOpacity:
    case CSSPropertyID::CSSPropertyLineHeight:
    case CSSPropertyID::CSSPropertyMaskBorderOutset:
    case CSSPropertyID::CSSPropertyMaxLines:
    case CSSPropertyID::CSSPropertyOpacity:
    case CSSPropertyID::CSSPropertyOrder:
    case CSSPropertyID::CSSPropertyOrphans:
    case CSSPropertyID::CSSPropertyShapeImageThreshold:
    case CSSPropertyID::CSSPropertyStopOpacity:
    case CSSPropertyID::CSSPropertyStrokeDasharray:
    case CSSPropertyID::CSSPropertyStrokeDashoffset:
    case CSSPropertyID::CSSPropertyStrokeMiterlimit:
    case CSSPropertyID::CSSPropertyStrokeOpacity:
    case CSSPropertyID::CSSPropertyStrokeWidth:
    case CSSPropertyID::CSSPropertyTabSize:
    case CSSPropertyID::CSSPropertyWidows:
    case CSSPropertyID::CSSPropertyZIndex:
    case CSSPropertyID::CSSPropertyWebkitBoxFlex:
    case CSSPropertyID::CSSPropertyWebkitBoxFlexGroup:
    case CSSPropertyID::CSSPropertyWebkitBoxOrdinalGroup:
    case CSSPropertyID::CSSPropertyWebkitHyphenateLimitAfter:
    case CSSPropertyID::CSSPropertyWebkitHyphenateLimitBefore:
    case CSSPropertyID::CSSPropertyWebkitHyphenateLimitLines:
    case CSSPropertyID::CSSPropertyWebkitInitialLetter:
    case CSSPropertyID::CSSPropertyWebkitLineClamp:
    case CSSPropertyID::CSSPropertyWebkitMarqueeRepetition:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::disablesNativeAppearance(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBackgroundAttachment:
    case CSSPropertyID::CSSPropertyBackgroundClip:
    case CSSPropertyID::CSSPropertyBackgroundColor:
    case CSSPropertyID::CSSPropertyBackgroundImage:
    case CSSPropertyID::CSSPropertyBackgroundOrigin:
    case CSSPropertyID::CSSPropertyBackgroundPositionX:
    case CSSPropertyID::CSSPropertyBackgroundPositionY:
    case CSSPropertyID::CSSPropertyBackgroundSize:
    case CSSPropertyID::CSSPropertyBorderImageOutset:
    case CSSPropertyID::CSSPropertyBorderImageRepeat:
    case CSSPropertyID::CSSPropertyBorderImageSlice:
    case CSSPropertyID::CSSPropertyBorderImageSource:
    case CSSPropertyID::CSSPropertyBorderImageWidth:
    case CSSPropertyID::CSSPropertyBorderBottomColor:
    case CSSPropertyID::CSSPropertyBorderBottomLeftRadius:
    case CSSPropertyID::CSSPropertyBorderBottomRightRadius:
    case CSSPropertyID::CSSPropertyBorderBottomStyle:
    case CSSPropertyID::CSSPropertyBorderBottomWidth:
    case CSSPropertyID::CSSPropertyBorderLeftColor:
    case CSSPropertyID::CSSPropertyBorderLeftStyle:
    case CSSPropertyID::CSSPropertyBorderLeftWidth:
    case CSSPropertyID::CSSPropertyBorderRightColor:
    case CSSPropertyID::CSSPropertyBorderRightStyle:
    case CSSPropertyID::CSSPropertyBorderRightWidth:
    case CSSPropertyID::CSSPropertyBorderTopColor:
    case CSSPropertyID::CSSPropertyBorderTopLeftRadius:
    case CSSPropertyID::CSSPropertyBorderTopRightRadius:
    case CSSPropertyID::CSSPropertyBorderTopStyle:
    case CSSPropertyID::CSSPropertyBorderTopWidth:
    case CSSPropertyID::CSSPropertyCornerBottomLeftShape:
    case CSSPropertyID::CSSPropertyCornerBottomRightShape:
    case CSSPropertyID::CSSPropertyCornerTopLeftShape:
    case CSSPropertyID::CSSPropertyCornerTopRightShape:
    case CSSPropertyID::CSSPropertyBorderBlockEndColor:
    case CSSPropertyID::CSSPropertyBorderBlockEndStyle:
    case CSSPropertyID::CSSPropertyBorderBlockEndWidth:
    case CSSPropertyID::CSSPropertyBorderBlockStartColor:
    case CSSPropertyID::CSSPropertyBorderBlockStartStyle:
    case CSSPropertyID::CSSPropertyBorderBlockStartWidth:
    case CSSPropertyID::CSSPropertyBorderEndEndRadius:
    case CSSPropertyID::CSSPropertyBorderEndStartRadius:
    case CSSPropertyID::CSSPropertyBorderInlineEndColor:
    case CSSPropertyID::CSSPropertyBorderInlineEndStyle:
    case CSSPropertyID::CSSPropertyBorderInlineEndWidth:
    case CSSPropertyID::CSSPropertyBorderInlineStartColor:
    case CSSPropertyID::CSSPropertyBorderInlineStartStyle:
    case CSSPropertyID::CSSPropertyBorderInlineStartWidth:
    case CSSPropertyID::CSSPropertyBorderStartEndRadius:
    case CSSPropertyID::CSSPropertyBorderStartStartRadius:
    case CSSPropertyID::CSSPropertyCornerEndEndShape:
    case CSSPropertyID::CSSPropertyCornerEndStartShape:
    case CSSPropertyID::CSSPropertyCornerStartEndShape:
    case CSSPropertyID::CSSPropertyCornerStartStartShape:
    case CSSPropertyID::CSSPropertyCornerShape:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isBorderColorProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBorderBlockEnd:
    case CSSPropertyID::CSSPropertyBorderBlockEndColor:
    case CSSPropertyID::CSSPropertyBorderBlockStart:
    case CSSPropertyID::CSSPropertyBorderBlockStartColor:
    case CSSPropertyID::CSSPropertyBorderBottomColor:
    case CSSPropertyID::CSSPropertyBorderColor:
    case CSSPropertyID::CSSPropertyBorderInlineEnd:
    case CSSPropertyID::CSSPropertyBorderInlineEndColor:
    case CSSPropertyID::CSSPropertyBorderInlineStart:
    case CSSPropertyID::CSSPropertyBorderInlineStartColor:
    case CSSPropertyID::CSSPropertyBorderLeft:
    case CSSPropertyID::CSSPropertyBorderLeftColor:
    case CSSPropertyID::CSSPropertyBorderRight:
    case CSSPropertyID::CSSPropertyBorderRightColor:
    case CSSPropertyID::CSSPropertyBorderTop:
    case CSSPropertyID::CSSPropertyBorderTopColor:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isBorderRadiusProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyWebkitBorderRadius:
    case CSSPropertyID::CSSPropertyBorderBottomLeftRadius:
    case CSSPropertyID::CSSPropertyBorderBottomRightRadius:
    case CSSPropertyID::CSSPropertyBorderEndEndRadius:
    case CSSPropertyID::CSSPropertyBorderEndStartRadius:
    case CSSPropertyID::CSSPropertyBorderStartEndRadius:
    case CSSPropertyID::CSSPropertyBorderStartStartRadius:
    case CSSPropertyID::CSSPropertyBorderTopLeftRadius:
    case CSSPropertyID::CSSPropertyBorderTopRightRadius:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isBorderStyleProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBorderBlockEndStyle:
    case CSSPropertyID::CSSPropertyBorderBlockStartStyle:
    case CSSPropertyID::CSSPropertyBorderBlockStyle:
    case CSSPropertyID::CSSPropertyBorderBottomStyle:
    case CSSPropertyID::CSSPropertyBorderInlineEndStyle:
    case CSSPropertyID::CSSPropertyBorderInlineStartStyle:
    case CSSPropertyID::CSSPropertyBorderInlineStyle:
    case CSSPropertyID::CSSPropertyBorderLeftStyle:
    case CSSPropertyID::CSSPropertyBorderRightStyle:
    case CSSPropertyID::CSSPropertyBorderStyle:
    case CSSPropertyID::CSSPropertyBorderTop:
    case CSSPropertyID::CSSPropertyBorderTopStyle:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isBorderWidthProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBorderBlockEndWidth:
    case CSSPropertyID::CSSPropertyBorderBlockStartWidth:
    case CSSPropertyID::CSSPropertyBorderBlockWidth:
    case CSSPropertyID::CSSPropertyBorderBottomWidth:
    case CSSPropertyID::CSSPropertyBorderInlineEndWidth:
    case CSSPropertyID::CSSPropertyBorderInlineStartWidth:
    case CSSPropertyID::CSSPropertyBorderInlineWidth:
    case CSSPropertyID::CSSPropertyBorderLeftWidth:
    case CSSPropertyID::CSSPropertyBorderRightWidth:
    case CSSPropertyID::CSSPropertyBorderTopWidth:
    case CSSPropertyID::CSSPropertyBorderWidth:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isContainIntrinsicSizeProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyContainIntrinsicBlockSize:
    case CSSPropertyID::CSSPropertyContainIntrinsicHeight:
    case CSSPropertyID::CSSPropertyContainIntrinsicInlineSize:
    case CSSPropertyID::CSSPropertyContainIntrinsicSize:
    case CSSPropertyID::CSSPropertyContainIntrinsicWidth:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isCornerShapeProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyCornerBottomLeftShape:
    case CSSPropertyID::CSSPropertyCornerBottomRightShape:
    case CSSPropertyID::CSSPropertyCornerEndEndShape:
    case CSSPropertyID::CSSPropertyCornerEndStartShape:
    case CSSPropertyID::CSSPropertyCornerShape:
    case CSSPropertyID::CSSPropertyCornerStartEndShape:
    case CSSPropertyID::CSSPropertyCornerStartStartShape:
    case CSSPropertyID::CSSPropertyCornerTopLeftShape:
    case CSSPropertyID::CSSPropertyCornerTopRightShape:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isInsetProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBottom:
    case CSSPropertyID::CSSPropertyInset:
    case CSSPropertyID::CSSPropertyInsetBlock:
    case CSSPropertyID::CSSPropertyInsetBlockEnd:
    case CSSPropertyID::CSSPropertyInsetBlockStart:
    case CSSPropertyID::CSSPropertyInsetInline:
    case CSSPropertyID::CSSPropertyInsetInlineEnd:
    case CSSPropertyID::CSSPropertyInsetInlineStart:
    case CSSPropertyID::CSSPropertyLeft:
    case CSSPropertyID::CSSPropertyRight:
    case CSSPropertyID::CSSPropertyTop:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isMarginProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyMargin:
    case CSSPropertyID::CSSPropertyMarginBlock:
    case CSSPropertyID::CSSPropertyMarginBlockEnd:
    case CSSPropertyID::CSSPropertyMarginBlockStart:
    case CSSPropertyID::CSSPropertyMarginBottom:
    case CSSPropertyID::CSSPropertyMarginInline:
    case CSSPropertyID::CSSPropertyMarginInlineEnd:
    case CSSPropertyID::CSSPropertyMarginInlineStart:
    case CSSPropertyID::CSSPropertyMarginLeft:
    case CSSPropertyID::CSSPropertyMarginRight:
    case CSSPropertyID::CSSPropertyMarginTop:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isMaxSizeProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyMaxBlockSize:
    case CSSPropertyID::CSSPropertyMaxHeight:
    case CSSPropertyID::CSSPropertyMaxInlineSize:
    case CSSPropertyID::CSSPropertyMaxWidth:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isMinSizeProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyMinBlockSize:
    case CSSPropertyID::CSSPropertyMinHeight:
    case CSSPropertyID::CSSPropertyMinInlineSize:
    case CSSPropertyID::CSSPropertyMinWidth:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isOverflowProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyOverflow:
    case CSSPropertyID::CSSPropertyOverflowBlock:
    case CSSPropertyID::CSSPropertyOverflowInline:
    case CSSPropertyID::CSSPropertyOverflowX:
    case CSSPropertyID::CSSPropertyOverflowY:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isOverscrollBehaviorProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyOverscrollBehavior:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorBlock:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorInline:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorX:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorY:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isPaddingProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyPadding:
    case CSSPropertyID::CSSPropertyPaddingBlock:
    case CSSPropertyID::CSSPropertyPaddingBlockEnd:
    case CSSPropertyID::CSSPropertyPaddingBlockStart:
    case CSSPropertyID::CSSPropertyPaddingBottom:
    case CSSPropertyID::CSSPropertyPaddingInline:
    case CSSPropertyID::CSSPropertyPaddingInlineEnd:
    case CSSPropertyID::CSSPropertyPaddingInlineStart:
    case CSSPropertyID::CSSPropertyPaddingLeft:
    case CSSPropertyID::CSSPropertyPaddingRight:
    case CSSPropertyID::CSSPropertyPaddingTop:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isScrollMarginProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyScrollMargin:
    case CSSPropertyID::CSSPropertyScrollMarginBlock:
    case CSSPropertyID::CSSPropertyScrollMarginBlockEnd:
    case CSSPropertyID::CSSPropertyScrollMarginBlockStart:
    case CSSPropertyID::CSSPropertyScrollMarginBottom:
    case CSSPropertyID::CSSPropertyScrollMarginInline:
    case CSSPropertyID::CSSPropertyScrollMarginInlineEnd:
    case CSSPropertyID::CSSPropertyScrollMarginInlineStart:
    case CSSPropertyID::CSSPropertyScrollMarginLeft:
    case CSSPropertyID::CSSPropertyScrollMarginRight:
    case CSSPropertyID::CSSPropertyScrollMarginTop:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isScrollPaddingProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyScrollPadding:
    case CSSPropertyID::CSSPropertyScrollPaddingBlock:
    case CSSPropertyID::CSSPropertyScrollPaddingBlockEnd:
    case CSSPropertyID::CSSPropertyScrollPaddingBlockStart:
    case CSSPropertyID::CSSPropertyScrollPaddingBottom:
    case CSSPropertyID::CSSPropertyScrollPaddingInline:
    case CSSPropertyID::CSSPropertyScrollPaddingInlineEnd:
    case CSSPropertyID::CSSPropertyScrollPaddingInlineStart:
    case CSSPropertyID::CSSPropertyScrollPaddingLeft:
    case CSSPropertyID::CSSPropertyScrollPaddingRight:
    case CSSPropertyID::CSSPropertyScrollPaddingTop:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isSizeProperty(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBlockSize:
    case CSSPropertyID::CSSPropertyHeight:
    case CSSPropertyID::CSSPropertyInlineSize:
    case CSSPropertyID::CSSPropertyWidth:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::isInLogicalPropertyGroup(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBorderBlockEndColor:
    case CSSPropertyID::CSSPropertyBorderBlockStartColor:
    case CSSPropertyID::CSSPropertyBorderInlineEndColor:
    case CSSPropertyID::CSSPropertyBorderInlineStartColor:
    case CSSPropertyID::CSSPropertyBorderBottomColor:
    case CSSPropertyID::CSSPropertyBorderLeftColor:
    case CSSPropertyID::CSSPropertyBorderRightColor:
    case CSSPropertyID::CSSPropertyBorderTopColor:
    case CSSPropertyID::CSSPropertyBorderEndEndRadius:
    case CSSPropertyID::CSSPropertyBorderEndStartRadius:
    case CSSPropertyID::CSSPropertyBorderStartEndRadius:
    case CSSPropertyID::CSSPropertyBorderStartStartRadius:
    case CSSPropertyID::CSSPropertyBorderBottomLeftRadius:
    case CSSPropertyID::CSSPropertyBorderBottomRightRadius:
    case CSSPropertyID::CSSPropertyBorderTopLeftRadius:
    case CSSPropertyID::CSSPropertyBorderTopRightRadius:
    case CSSPropertyID::CSSPropertyBorderBlockEndStyle:
    case CSSPropertyID::CSSPropertyBorderBlockStartStyle:
    case CSSPropertyID::CSSPropertyBorderInlineEndStyle:
    case CSSPropertyID::CSSPropertyBorderInlineStartStyle:
    case CSSPropertyID::CSSPropertyBorderBottomStyle:
    case CSSPropertyID::CSSPropertyBorderLeftStyle:
    case CSSPropertyID::CSSPropertyBorderRightStyle:
    case CSSPropertyID::CSSPropertyBorderTopStyle:
    case CSSPropertyID::CSSPropertyBorderBlockEndWidth:
    case CSSPropertyID::CSSPropertyBorderBlockStartWidth:
    case CSSPropertyID::CSSPropertyBorderInlineEndWidth:
    case CSSPropertyID::CSSPropertyBorderInlineStartWidth:
    case CSSPropertyID::CSSPropertyBorderBottomWidth:
    case CSSPropertyID::CSSPropertyBorderLeftWidth:
    case CSSPropertyID::CSSPropertyBorderRightWidth:
    case CSSPropertyID::CSSPropertyBorderTopWidth:
    case CSSPropertyID::CSSPropertyContainIntrinsicBlockSize:
    case CSSPropertyID::CSSPropertyContainIntrinsicInlineSize:
    case CSSPropertyID::CSSPropertyContainIntrinsicHeight:
    case CSSPropertyID::CSSPropertyContainIntrinsicWidth:
    case CSSPropertyID::CSSPropertyCornerEndEndShape:
    case CSSPropertyID::CSSPropertyCornerEndStartShape:
    case CSSPropertyID::CSSPropertyCornerStartEndShape:
    case CSSPropertyID::CSSPropertyCornerStartStartShape:
    case CSSPropertyID::CSSPropertyCornerBottomLeftShape:
    case CSSPropertyID::CSSPropertyCornerBottomRightShape:
    case CSSPropertyID::CSSPropertyCornerTopLeftShape:
    case CSSPropertyID::CSSPropertyCornerTopRightShape:
    case CSSPropertyID::CSSPropertyInsetBlockEnd:
    case CSSPropertyID::CSSPropertyInsetBlockStart:
    case CSSPropertyID::CSSPropertyInsetInlineEnd:
    case CSSPropertyID::CSSPropertyInsetInlineStart:
    case CSSPropertyID::CSSPropertyBottom:
    case CSSPropertyID::CSSPropertyLeft:
    case CSSPropertyID::CSSPropertyRight:
    case CSSPropertyID::CSSPropertyTop:
    case CSSPropertyID::CSSPropertyMarginBlockEnd:
    case CSSPropertyID::CSSPropertyMarginBlockStart:
    case CSSPropertyID::CSSPropertyMarginInlineEnd:
    case CSSPropertyID::CSSPropertyMarginInlineStart:
    case CSSPropertyID::CSSPropertyMarginBottom:
    case CSSPropertyID::CSSPropertyMarginLeft:
    case CSSPropertyID::CSSPropertyMarginRight:
    case CSSPropertyID::CSSPropertyMarginTop:
    case CSSPropertyID::CSSPropertyMaxBlockSize:
    case CSSPropertyID::CSSPropertyMaxInlineSize:
    case CSSPropertyID::CSSPropertyMaxHeight:
    case CSSPropertyID::CSSPropertyMaxWidth:
    case CSSPropertyID::CSSPropertyMinBlockSize:
    case CSSPropertyID::CSSPropertyMinInlineSize:
    case CSSPropertyID::CSSPropertyMinHeight:
    case CSSPropertyID::CSSPropertyMinWidth:
    case CSSPropertyID::CSSPropertyOverflowBlock:
    case CSSPropertyID::CSSPropertyOverflowInline:
    case CSSPropertyID::CSSPropertyOverflowX:
    case CSSPropertyID::CSSPropertyOverflowY:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorBlock:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorInline:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorX:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorY:
    case CSSPropertyID::CSSPropertyPaddingBlockEnd:
    case CSSPropertyID::CSSPropertyPaddingBlockStart:
    case CSSPropertyID::CSSPropertyPaddingInlineEnd:
    case CSSPropertyID::CSSPropertyPaddingInlineStart:
    case CSSPropertyID::CSSPropertyPaddingBottom:
    case CSSPropertyID::CSSPropertyPaddingLeft:
    case CSSPropertyID::CSSPropertyPaddingRight:
    case CSSPropertyID::CSSPropertyPaddingTop:
    case CSSPropertyID::CSSPropertyScrollMarginBlockEnd:
    case CSSPropertyID::CSSPropertyScrollMarginBlockStart:
    case CSSPropertyID::CSSPropertyScrollMarginInlineEnd:
    case CSSPropertyID::CSSPropertyScrollMarginInlineStart:
    case CSSPropertyID::CSSPropertyScrollMarginBottom:
    case CSSPropertyID::CSSPropertyScrollMarginLeft:
    case CSSPropertyID::CSSPropertyScrollMarginRight:
    case CSSPropertyID::CSSPropertyScrollMarginTop:
    case CSSPropertyID::CSSPropertyScrollPaddingBlockEnd:
    case CSSPropertyID::CSSPropertyScrollPaddingBlockStart:
    case CSSPropertyID::CSSPropertyScrollPaddingInlineEnd:
    case CSSPropertyID::CSSPropertyScrollPaddingInlineStart:
    case CSSPropertyID::CSSPropertyScrollPaddingBottom:
    case CSSPropertyID::CSSPropertyScrollPaddingLeft:
    case CSSPropertyID::CSSPropertyScrollPaddingRight:
    case CSSPropertyID::CSSPropertyScrollPaddingTop:
    case CSSPropertyID::CSSPropertyBlockSize:
    case CSSPropertyID::CSSPropertyInlineSize:
    case CSSPropertyID::CSSPropertyHeight:
    case CSSPropertyID::CSSPropertyWidth:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::areInSameLogicalPropertyGroupWithDifferentMappingLogic(CSSPropertyID id1, CSSPropertyID id2)
{
    switch (id1) {
    case CSSPropertyID::CSSPropertyBorderBlockEndColor:
    case CSSPropertyID::CSSPropertyBorderBlockStartColor:
    case CSSPropertyID::CSSPropertyBorderInlineEndColor:
    case CSSPropertyID::CSSPropertyBorderInlineStartColor:
        switch (id2) {
        case CSSPropertyID::CSSPropertyBorderBottomColor:
        case CSSPropertyID::CSSPropertyBorderLeftColor:
        case CSSPropertyID::CSSPropertyBorderRightColor:
        case CSSPropertyID::CSSPropertyBorderTopColor:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyBorderBottomColor:
    case CSSPropertyID::CSSPropertyBorderLeftColor:
    case CSSPropertyID::CSSPropertyBorderRightColor:
    case CSSPropertyID::CSSPropertyBorderTopColor:
        switch (id2) {
        case CSSPropertyID::CSSPropertyBorderBlockEndColor:
        case CSSPropertyID::CSSPropertyBorderBlockStartColor:
        case CSSPropertyID::CSSPropertyBorderInlineEndColor:
        case CSSPropertyID::CSSPropertyBorderInlineStartColor:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyBorderEndEndRadius:
    case CSSPropertyID::CSSPropertyBorderEndStartRadius:
    case CSSPropertyID::CSSPropertyBorderStartEndRadius:
    case CSSPropertyID::CSSPropertyBorderStartStartRadius:
        switch (id2) {
        case CSSPropertyID::CSSPropertyBorderBottomLeftRadius:
        case CSSPropertyID::CSSPropertyBorderBottomRightRadius:
        case CSSPropertyID::CSSPropertyBorderTopLeftRadius:
        case CSSPropertyID::CSSPropertyBorderTopRightRadius:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyBorderBottomLeftRadius:
    case CSSPropertyID::CSSPropertyBorderBottomRightRadius:
    case CSSPropertyID::CSSPropertyBorderTopLeftRadius:
    case CSSPropertyID::CSSPropertyBorderTopRightRadius:
        switch (id2) {
        case CSSPropertyID::CSSPropertyBorderEndEndRadius:
        case CSSPropertyID::CSSPropertyBorderEndStartRadius:
        case CSSPropertyID::CSSPropertyBorderStartEndRadius:
        case CSSPropertyID::CSSPropertyBorderStartStartRadius:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyBorderBlockEndStyle:
    case CSSPropertyID::CSSPropertyBorderBlockStartStyle:
    case CSSPropertyID::CSSPropertyBorderInlineEndStyle:
    case CSSPropertyID::CSSPropertyBorderInlineStartStyle:
        switch (id2) {
        case CSSPropertyID::CSSPropertyBorderBottomStyle:
        case CSSPropertyID::CSSPropertyBorderLeftStyle:
        case CSSPropertyID::CSSPropertyBorderRightStyle:
        case CSSPropertyID::CSSPropertyBorderTopStyle:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyBorderBottomStyle:
    case CSSPropertyID::CSSPropertyBorderLeftStyle:
    case CSSPropertyID::CSSPropertyBorderRightStyle:
    case CSSPropertyID::CSSPropertyBorderTopStyle:
        switch (id2) {
        case CSSPropertyID::CSSPropertyBorderBlockEndStyle:
        case CSSPropertyID::CSSPropertyBorderBlockStartStyle:
        case CSSPropertyID::CSSPropertyBorderInlineEndStyle:
        case CSSPropertyID::CSSPropertyBorderInlineStartStyle:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyBorderBlockEndWidth:
    case CSSPropertyID::CSSPropertyBorderBlockStartWidth:
    case CSSPropertyID::CSSPropertyBorderInlineEndWidth:
    case CSSPropertyID::CSSPropertyBorderInlineStartWidth:
        switch (id2) {
        case CSSPropertyID::CSSPropertyBorderBottomWidth:
        case CSSPropertyID::CSSPropertyBorderLeftWidth:
        case CSSPropertyID::CSSPropertyBorderRightWidth:
        case CSSPropertyID::CSSPropertyBorderTopWidth:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyBorderBottomWidth:
    case CSSPropertyID::CSSPropertyBorderLeftWidth:
    case CSSPropertyID::CSSPropertyBorderRightWidth:
    case CSSPropertyID::CSSPropertyBorderTopWidth:
        switch (id2) {
        case CSSPropertyID::CSSPropertyBorderBlockEndWidth:
        case CSSPropertyID::CSSPropertyBorderBlockStartWidth:
        case CSSPropertyID::CSSPropertyBorderInlineEndWidth:
        case CSSPropertyID::CSSPropertyBorderInlineStartWidth:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyContainIntrinsicBlockSize:
    case CSSPropertyID::CSSPropertyContainIntrinsicInlineSize:
        switch (id2) {
        case CSSPropertyID::CSSPropertyContainIntrinsicHeight:
        case CSSPropertyID::CSSPropertyContainIntrinsicWidth:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyContainIntrinsicHeight:
    case CSSPropertyID::CSSPropertyContainIntrinsicWidth:
        switch (id2) {
        case CSSPropertyID::CSSPropertyContainIntrinsicBlockSize:
        case CSSPropertyID::CSSPropertyContainIntrinsicInlineSize:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyCornerEndEndShape:
    case CSSPropertyID::CSSPropertyCornerEndStartShape:
    case CSSPropertyID::CSSPropertyCornerStartEndShape:
    case CSSPropertyID::CSSPropertyCornerStartStartShape:
        switch (id2) {
        case CSSPropertyID::CSSPropertyCornerBottomLeftShape:
        case CSSPropertyID::CSSPropertyCornerBottomRightShape:
        case CSSPropertyID::CSSPropertyCornerTopLeftShape:
        case CSSPropertyID::CSSPropertyCornerTopRightShape:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyCornerBottomLeftShape:
    case CSSPropertyID::CSSPropertyCornerBottomRightShape:
    case CSSPropertyID::CSSPropertyCornerTopLeftShape:
    case CSSPropertyID::CSSPropertyCornerTopRightShape:
        switch (id2) {
        case CSSPropertyID::CSSPropertyCornerEndEndShape:
        case CSSPropertyID::CSSPropertyCornerEndStartShape:
        case CSSPropertyID::CSSPropertyCornerStartEndShape:
        case CSSPropertyID::CSSPropertyCornerStartStartShape:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyInsetBlockEnd:
    case CSSPropertyID::CSSPropertyInsetBlockStart:
    case CSSPropertyID::CSSPropertyInsetInlineEnd:
    case CSSPropertyID::CSSPropertyInsetInlineStart:
        switch (id2) {
        case CSSPropertyID::CSSPropertyBottom:
        case CSSPropertyID::CSSPropertyLeft:
        case CSSPropertyID::CSSPropertyRight:
        case CSSPropertyID::CSSPropertyTop:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyBottom:
    case CSSPropertyID::CSSPropertyLeft:
    case CSSPropertyID::CSSPropertyRight:
    case CSSPropertyID::CSSPropertyTop:
        switch (id2) {
        case CSSPropertyID::CSSPropertyInsetBlockEnd:
        case CSSPropertyID::CSSPropertyInsetBlockStart:
        case CSSPropertyID::CSSPropertyInsetInlineEnd:
        case CSSPropertyID::CSSPropertyInsetInlineStart:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyMarginBlockEnd:
    case CSSPropertyID::CSSPropertyMarginBlockStart:
    case CSSPropertyID::CSSPropertyMarginInlineEnd:
    case CSSPropertyID::CSSPropertyMarginInlineStart:
        switch (id2) {
        case CSSPropertyID::CSSPropertyMarginBottom:
        case CSSPropertyID::CSSPropertyMarginLeft:
        case CSSPropertyID::CSSPropertyMarginRight:
        case CSSPropertyID::CSSPropertyMarginTop:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyMarginBottom:
    case CSSPropertyID::CSSPropertyMarginLeft:
    case CSSPropertyID::CSSPropertyMarginRight:
    case CSSPropertyID::CSSPropertyMarginTop:
        switch (id2) {
        case CSSPropertyID::CSSPropertyMarginBlockEnd:
        case CSSPropertyID::CSSPropertyMarginBlockStart:
        case CSSPropertyID::CSSPropertyMarginInlineEnd:
        case CSSPropertyID::CSSPropertyMarginInlineStart:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyMaxBlockSize:
    case CSSPropertyID::CSSPropertyMaxInlineSize:
        switch (id2) {
        case CSSPropertyID::CSSPropertyMaxHeight:
        case CSSPropertyID::CSSPropertyMaxWidth:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyMaxHeight:
    case CSSPropertyID::CSSPropertyMaxWidth:
        switch (id2) {
        case CSSPropertyID::CSSPropertyMaxBlockSize:
        case CSSPropertyID::CSSPropertyMaxInlineSize:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyMinBlockSize:
    case CSSPropertyID::CSSPropertyMinInlineSize:
        switch (id2) {
        case CSSPropertyID::CSSPropertyMinHeight:
        case CSSPropertyID::CSSPropertyMinWidth:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyMinHeight:
    case CSSPropertyID::CSSPropertyMinWidth:
        switch (id2) {
        case CSSPropertyID::CSSPropertyMinBlockSize:
        case CSSPropertyID::CSSPropertyMinInlineSize:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyOverflowBlock:
    case CSSPropertyID::CSSPropertyOverflowInline:
        switch (id2) {
        case CSSPropertyID::CSSPropertyOverflowX:
        case CSSPropertyID::CSSPropertyOverflowY:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyOverflowX:
    case CSSPropertyID::CSSPropertyOverflowY:
        switch (id2) {
        case CSSPropertyID::CSSPropertyOverflowBlock:
        case CSSPropertyID::CSSPropertyOverflowInline:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyOverscrollBehaviorBlock:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorInline:
        switch (id2) {
        case CSSPropertyID::CSSPropertyOverscrollBehaviorX:
        case CSSPropertyID::CSSPropertyOverscrollBehaviorY:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyOverscrollBehaviorX:
    case CSSPropertyID::CSSPropertyOverscrollBehaviorY:
        switch (id2) {
        case CSSPropertyID::CSSPropertyOverscrollBehaviorBlock:
        case CSSPropertyID::CSSPropertyOverscrollBehaviorInline:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyPaddingBlockEnd:
    case CSSPropertyID::CSSPropertyPaddingBlockStart:
    case CSSPropertyID::CSSPropertyPaddingInlineEnd:
    case CSSPropertyID::CSSPropertyPaddingInlineStart:
        switch (id2) {
        case CSSPropertyID::CSSPropertyPaddingBottom:
        case CSSPropertyID::CSSPropertyPaddingLeft:
        case CSSPropertyID::CSSPropertyPaddingRight:
        case CSSPropertyID::CSSPropertyPaddingTop:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyPaddingBottom:
    case CSSPropertyID::CSSPropertyPaddingLeft:
    case CSSPropertyID::CSSPropertyPaddingRight:
    case CSSPropertyID::CSSPropertyPaddingTop:
        switch (id2) {
        case CSSPropertyID::CSSPropertyPaddingBlockEnd:
        case CSSPropertyID::CSSPropertyPaddingBlockStart:
        case CSSPropertyID::CSSPropertyPaddingInlineEnd:
        case CSSPropertyID::CSSPropertyPaddingInlineStart:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyScrollMarginBlockEnd:
    case CSSPropertyID::CSSPropertyScrollMarginBlockStart:
    case CSSPropertyID::CSSPropertyScrollMarginInlineEnd:
    case CSSPropertyID::CSSPropertyScrollMarginInlineStart:
        switch (id2) {
        case CSSPropertyID::CSSPropertyScrollMarginBottom:
        case CSSPropertyID::CSSPropertyScrollMarginLeft:
        case CSSPropertyID::CSSPropertyScrollMarginRight:
        case CSSPropertyID::CSSPropertyScrollMarginTop:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyScrollMarginBottom:
    case CSSPropertyID::CSSPropertyScrollMarginLeft:
    case CSSPropertyID::CSSPropertyScrollMarginRight:
    case CSSPropertyID::CSSPropertyScrollMarginTop:
        switch (id2) {
        case CSSPropertyID::CSSPropertyScrollMarginBlockEnd:
        case CSSPropertyID::CSSPropertyScrollMarginBlockStart:
        case CSSPropertyID::CSSPropertyScrollMarginInlineEnd:
        case CSSPropertyID::CSSPropertyScrollMarginInlineStart:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyScrollPaddingBlockEnd:
    case CSSPropertyID::CSSPropertyScrollPaddingBlockStart:
    case CSSPropertyID::CSSPropertyScrollPaddingInlineEnd:
    case CSSPropertyID::CSSPropertyScrollPaddingInlineStart:
        switch (id2) {
        case CSSPropertyID::CSSPropertyScrollPaddingBottom:
        case CSSPropertyID::CSSPropertyScrollPaddingLeft:
        case CSSPropertyID::CSSPropertyScrollPaddingRight:
        case CSSPropertyID::CSSPropertyScrollPaddingTop:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyScrollPaddingBottom:
    case CSSPropertyID::CSSPropertyScrollPaddingLeft:
    case CSSPropertyID::CSSPropertyScrollPaddingRight:
    case CSSPropertyID::CSSPropertyScrollPaddingTop:
        switch (id2) {
        case CSSPropertyID::CSSPropertyScrollPaddingBlockEnd:
        case CSSPropertyID::CSSPropertyScrollPaddingBlockStart:
        case CSSPropertyID::CSSPropertyScrollPaddingInlineEnd:
        case CSSPropertyID::CSSPropertyScrollPaddingInlineStart:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyBlockSize:
    case CSSPropertyID::CSSPropertyInlineSize:
        switch (id2) {
        case CSSPropertyID::CSSPropertyHeight:
        case CSSPropertyID::CSSPropertyWidth:
            return true;
        default:
            return false;
        }
    case CSSPropertyID::CSSPropertyHeight:
    case CSSPropertyID::CSSPropertyWidth:
        switch (id2) {
        case CSSPropertyID::CSSPropertyBlockSize:
        case CSSPropertyID::CSSPropertyInlineSize:
            return true;
        default:
            return false;
        }
    default:
        return false;
    }
}

CSSPropertyID CSSProperty::resolveDirectionAwareProperty(CSSPropertyID id, WritingMode writingMode)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBorderBlockEndColor: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopColor, CSSPropertyID::CSSPropertyBorderRightColor, CSSPropertyID::CSSPropertyBorderBottomColor, CSSPropertyID::CSSPropertyBorderLeftColor };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockEnd))];
    }
    case CSSPropertyID::CSSPropertyBorderBlockStartColor: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopColor, CSSPropertyID::CSSPropertyBorderRightColor, CSSPropertyID::CSSPropertyBorderBottomColor, CSSPropertyID::CSSPropertyBorderLeftColor };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockStart))];
    }
    case CSSPropertyID::CSSPropertyBorderInlineEndColor: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopColor, CSSPropertyID::CSSPropertyBorderRightColor, CSSPropertyID::CSSPropertyBorderBottomColor, CSSPropertyID::CSSPropertyBorderLeftColor };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineEnd))];
    }
    case CSSPropertyID::CSSPropertyBorderInlineStartColor: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopColor, CSSPropertyID::CSSPropertyBorderRightColor, CSSPropertyID::CSSPropertyBorderBottomColor, CSSPropertyID::CSSPropertyBorderLeftColor };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineStart))];
    }
    case CSSPropertyID::CSSPropertyBorderEndEndRadius: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopLeftRadius, CSSPropertyID::CSSPropertyBorderTopRightRadius, CSSPropertyID::CSSPropertyBorderBottomLeftRadius, CSSPropertyID::CSSPropertyBorderBottomRightRadius };
        return properties[static_cast<size_t>(mapCornerLogicalToPhysical(writingMode, LogicalBoxCorner::EndEnd))];
    }
    case CSSPropertyID::CSSPropertyBorderEndStartRadius: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopLeftRadius, CSSPropertyID::CSSPropertyBorderTopRightRadius, CSSPropertyID::CSSPropertyBorderBottomLeftRadius, CSSPropertyID::CSSPropertyBorderBottomRightRadius };
        return properties[static_cast<size_t>(mapCornerLogicalToPhysical(writingMode, LogicalBoxCorner::EndStart))];
    }
    case CSSPropertyID::CSSPropertyBorderStartEndRadius: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopLeftRadius, CSSPropertyID::CSSPropertyBorderTopRightRadius, CSSPropertyID::CSSPropertyBorderBottomLeftRadius, CSSPropertyID::CSSPropertyBorderBottomRightRadius };
        return properties[static_cast<size_t>(mapCornerLogicalToPhysical(writingMode, LogicalBoxCorner::StartEnd))];
    }
    case CSSPropertyID::CSSPropertyBorderStartStartRadius: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopLeftRadius, CSSPropertyID::CSSPropertyBorderTopRightRadius, CSSPropertyID::CSSPropertyBorderBottomLeftRadius, CSSPropertyID::CSSPropertyBorderBottomRightRadius };
        return properties[static_cast<size_t>(mapCornerLogicalToPhysical(writingMode, LogicalBoxCorner::StartStart))];
    }
    case CSSPropertyID::CSSPropertyBorderBlockEndStyle: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopStyle, CSSPropertyID::CSSPropertyBorderRightStyle, CSSPropertyID::CSSPropertyBorderBottomStyle, CSSPropertyID::CSSPropertyBorderLeftStyle };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockEnd))];
    }
    case CSSPropertyID::CSSPropertyBorderBlockStartStyle: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopStyle, CSSPropertyID::CSSPropertyBorderRightStyle, CSSPropertyID::CSSPropertyBorderBottomStyle, CSSPropertyID::CSSPropertyBorderLeftStyle };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockStart))];
    }
    case CSSPropertyID::CSSPropertyBorderInlineEndStyle: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopStyle, CSSPropertyID::CSSPropertyBorderRightStyle, CSSPropertyID::CSSPropertyBorderBottomStyle, CSSPropertyID::CSSPropertyBorderLeftStyle };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineEnd))];
    }
    case CSSPropertyID::CSSPropertyBorderInlineStartStyle: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopStyle, CSSPropertyID::CSSPropertyBorderRightStyle, CSSPropertyID::CSSPropertyBorderBottomStyle, CSSPropertyID::CSSPropertyBorderLeftStyle };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineStart))];
    }
    case CSSPropertyID::CSSPropertyBorderBlockEndWidth: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopWidth, CSSPropertyID::CSSPropertyBorderRightWidth, CSSPropertyID::CSSPropertyBorderBottomWidth, CSSPropertyID::CSSPropertyBorderLeftWidth };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockEnd))];
    }
    case CSSPropertyID::CSSPropertyBorderBlockStartWidth: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopWidth, CSSPropertyID::CSSPropertyBorderRightWidth, CSSPropertyID::CSSPropertyBorderBottomWidth, CSSPropertyID::CSSPropertyBorderLeftWidth };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockStart))];
    }
    case CSSPropertyID::CSSPropertyBorderInlineEndWidth: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopWidth, CSSPropertyID::CSSPropertyBorderRightWidth, CSSPropertyID::CSSPropertyBorderBottomWidth, CSSPropertyID::CSSPropertyBorderLeftWidth };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineEnd))];
    }
    case CSSPropertyID::CSSPropertyBorderInlineStartWidth: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderTopWidth, CSSPropertyID::CSSPropertyBorderRightWidth, CSSPropertyID::CSSPropertyBorderBottomWidth, CSSPropertyID::CSSPropertyBorderLeftWidth };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineStart))];
    }
    case CSSPropertyID::CSSPropertyContainIntrinsicBlockSize: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyContainIntrinsicWidth, CSSPropertyID::CSSPropertyContainIntrinsicHeight };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Block))];
    }
    case CSSPropertyID::CSSPropertyContainIntrinsicInlineSize: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyContainIntrinsicWidth, CSSPropertyID::CSSPropertyContainIntrinsicHeight };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Inline))];
    }
    case CSSPropertyID::CSSPropertyCornerEndEndShape: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyCornerTopLeftShape, CSSPropertyID::CSSPropertyCornerTopRightShape, CSSPropertyID::CSSPropertyCornerBottomLeftShape, CSSPropertyID::CSSPropertyCornerBottomRightShape };
        return properties[static_cast<size_t>(mapCornerLogicalToPhysical(writingMode, LogicalBoxCorner::EndEnd))];
    }
    case CSSPropertyID::CSSPropertyCornerEndStartShape: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyCornerTopLeftShape, CSSPropertyID::CSSPropertyCornerTopRightShape, CSSPropertyID::CSSPropertyCornerBottomLeftShape, CSSPropertyID::CSSPropertyCornerBottomRightShape };
        return properties[static_cast<size_t>(mapCornerLogicalToPhysical(writingMode, LogicalBoxCorner::EndStart))];
    }
    case CSSPropertyID::CSSPropertyCornerStartEndShape: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyCornerTopLeftShape, CSSPropertyID::CSSPropertyCornerTopRightShape, CSSPropertyID::CSSPropertyCornerBottomLeftShape, CSSPropertyID::CSSPropertyCornerBottomRightShape };
        return properties[static_cast<size_t>(mapCornerLogicalToPhysical(writingMode, LogicalBoxCorner::StartEnd))];
    }
    case CSSPropertyID::CSSPropertyCornerStartStartShape: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyCornerTopLeftShape, CSSPropertyID::CSSPropertyCornerTopRightShape, CSSPropertyID::CSSPropertyCornerBottomLeftShape, CSSPropertyID::CSSPropertyCornerBottomRightShape };
        return properties[static_cast<size_t>(mapCornerLogicalToPhysical(writingMode, LogicalBoxCorner::StartStart))];
    }
    case CSSPropertyID::CSSPropertyInsetBlockEnd: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyTop, CSSPropertyID::CSSPropertyRight, CSSPropertyID::CSSPropertyBottom, CSSPropertyID::CSSPropertyLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockEnd))];
    }
    case CSSPropertyID::CSSPropertyInsetBlockStart: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyTop, CSSPropertyID::CSSPropertyRight, CSSPropertyID::CSSPropertyBottom, CSSPropertyID::CSSPropertyLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockStart))];
    }
    case CSSPropertyID::CSSPropertyInsetInlineEnd: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyTop, CSSPropertyID::CSSPropertyRight, CSSPropertyID::CSSPropertyBottom, CSSPropertyID::CSSPropertyLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineEnd))];
    }
    case CSSPropertyID::CSSPropertyInsetInlineStart: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyTop, CSSPropertyID::CSSPropertyRight, CSSPropertyID::CSSPropertyBottom, CSSPropertyID::CSSPropertyLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineStart))];
    }
    case CSSPropertyID::CSSPropertyMarginBlockEnd: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyMarginTop, CSSPropertyID::CSSPropertyMarginRight, CSSPropertyID::CSSPropertyMarginBottom, CSSPropertyID::CSSPropertyMarginLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockEnd))];
    }
    case CSSPropertyID::CSSPropertyMarginBlockStart: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyMarginTop, CSSPropertyID::CSSPropertyMarginRight, CSSPropertyID::CSSPropertyMarginBottom, CSSPropertyID::CSSPropertyMarginLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockStart))];
    }
    case CSSPropertyID::CSSPropertyMarginInlineEnd: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyMarginTop, CSSPropertyID::CSSPropertyMarginRight, CSSPropertyID::CSSPropertyMarginBottom, CSSPropertyID::CSSPropertyMarginLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineEnd))];
    }
    case CSSPropertyID::CSSPropertyMarginInlineStart: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyMarginTop, CSSPropertyID::CSSPropertyMarginRight, CSSPropertyID::CSSPropertyMarginBottom, CSSPropertyID::CSSPropertyMarginLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineStart))];
    }
    case CSSPropertyID::CSSPropertyMaxBlockSize: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyMaxWidth, CSSPropertyID::CSSPropertyMaxHeight };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Block))];
    }
    case CSSPropertyID::CSSPropertyMaxInlineSize: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyMaxWidth, CSSPropertyID::CSSPropertyMaxHeight };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Inline))];
    }
    case CSSPropertyID::CSSPropertyMinBlockSize: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyMinWidth, CSSPropertyID::CSSPropertyMinHeight };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Block))];
    }
    case CSSPropertyID::CSSPropertyMinInlineSize: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyMinWidth, CSSPropertyID::CSSPropertyMinHeight };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Inline))];
    }
    case CSSPropertyID::CSSPropertyOverflowBlock: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyOverflowX, CSSPropertyID::CSSPropertyOverflowY };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Block))];
    }
    case CSSPropertyID::CSSPropertyOverflowInline: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyOverflowX, CSSPropertyID::CSSPropertyOverflowY };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Inline))];
    }
    case CSSPropertyID::CSSPropertyOverscrollBehaviorBlock: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyOverscrollBehaviorX, CSSPropertyID::CSSPropertyOverscrollBehaviorY };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Block))];
    }
    case CSSPropertyID::CSSPropertyOverscrollBehaviorInline: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyOverscrollBehaviorX, CSSPropertyID::CSSPropertyOverscrollBehaviorY };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Inline))];
    }
    case CSSPropertyID::CSSPropertyPaddingBlockEnd: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyPaddingTop, CSSPropertyID::CSSPropertyPaddingRight, CSSPropertyID::CSSPropertyPaddingBottom, CSSPropertyID::CSSPropertyPaddingLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockEnd))];
    }
    case CSSPropertyID::CSSPropertyPaddingBlockStart: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyPaddingTop, CSSPropertyID::CSSPropertyPaddingRight, CSSPropertyID::CSSPropertyPaddingBottom, CSSPropertyID::CSSPropertyPaddingLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockStart))];
    }
    case CSSPropertyID::CSSPropertyPaddingInlineEnd: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyPaddingTop, CSSPropertyID::CSSPropertyPaddingRight, CSSPropertyID::CSSPropertyPaddingBottom, CSSPropertyID::CSSPropertyPaddingLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineEnd))];
    }
    case CSSPropertyID::CSSPropertyPaddingInlineStart: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyPaddingTop, CSSPropertyID::CSSPropertyPaddingRight, CSSPropertyID::CSSPropertyPaddingBottom, CSSPropertyID::CSSPropertyPaddingLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineStart))];
    }
    case CSSPropertyID::CSSPropertyScrollMarginBlockEnd: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollMarginTop, CSSPropertyID::CSSPropertyScrollMarginRight, CSSPropertyID::CSSPropertyScrollMarginBottom, CSSPropertyID::CSSPropertyScrollMarginLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockEnd))];
    }
    case CSSPropertyID::CSSPropertyScrollMarginBlockStart: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollMarginTop, CSSPropertyID::CSSPropertyScrollMarginRight, CSSPropertyID::CSSPropertyScrollMarginBottom, CSSPropertyID::CSSPropertyScrollMarginLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockStart))];
    }
    case CSSPropertyID::CSSPropertyScrollMarginInlineEnd: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollMarginTop, CSSPropertyID::CSSPropertyScrollMarginRight, CSSPropertyID::CSSPropertyScrollMarginBottom, CSSPropertyID::CSSPropertyScrollMarginLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineEnd))];
    }
    case CSSPropertyID::CSSPropertyScrollMarginInlineStart: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollMarginTop, CSSPropertyID::CSSPropertyScrollMarginRight, CSSPropertyID::CSSPropertyScrollMarginBottom, CSSPropertyID::CSSPropertyScrollMarginLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineStart))];
    }
    case CSSPropertyID::CSSPropertyScrollPaddingBlockEnd: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollPaddingTop, CSSPropertyID::CSSPropertyScrollPaddingRight, CSSPropertyID::CSSPropertyScrollPaddingBottom, CSSPropertyID::CSSPropertyScrollPaddingLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockEnd))];
    }
    case CSSPropertyID::CSSPropertyScrollPaddingBlockStart: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollPaddingTop, CSSPropertyID::CSSPropertyScrollPaddingRight, CSSPropertyID::CSSPropertyScrollPaddingBottom, CSSPropertyID::CSSPropertyScrollPaddingLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::BlockStart))];
    }
    case CSSPropertyID::CSSPropertyScrollPaddingInlineEnd: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollPaddingTop, CSSPropertyID::CSSPropertyScrollPaddingRight, CSSPropertyID::CSSPropertyScrollPaddingBottom, CSSPropertyID::CSSPropertyScrollPaddingLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineEnd))];
    }
    case CSSPropertyID::CSSPropertyScrollPaddingInlineStart: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollPaddingTop, CSSPropertyID::CSSPropertyScrollPaddingRight, CSSPropertyID::CSSPropertyScrollPaddingBottom, CSSPropertyID::CSSPropertyScrollPaddingLeft };
        return properties[static_cast<size_t>(mapSideLogicalToPhysical(writingMode, LogicalBoxSide::InlineStart))];
    }
    case CSSPropertyID::CSSPropertyBlockSize: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyWidth, CSSPropertyID::CSSPropertyHeight };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Block))];
    }
    case CSSPropertyID::CSSPropertyInlineSize: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyWidth, CSSPropertyID::CSSPropertyHeight };
        return properties[static_cast<size_t>(mapAxisLogicalToPhysical(writingMode, LogicalBoxAxis::Inline))];
    }
    default:
        return id;
    }
}

CSSPropertyID CSSProperty::unresolvePhysicalProperty(CSSPropertyID id, WritingMode writingMode)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBorderBottomColor: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartColor, CSSPropertyID::CSSPropertyBorderInlineEndColor, CSSPropertyID::CSSPropertyBorderBlockEndColor, CSSPropertyID::CSSPropertyBorderInlineStartColor };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Bottom))];
    }
    case CSSPropertyID::CSSPropertyBorderLeftColor: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartColor, CSSPropertyID::CSSPropertyBorderInlineEndColor, CSSPropertyID::CSSPropertyBorderBlockEndColor, CSSPropertyID::CSSPropertyBorderInlineStartColor };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Left))];
    }
    case CSSPropertyID::CSSPropertyBorderRightColor: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartColor, CSSPropertyID::CSSPropertyBorderInlineEndColor, CSSPropertyID::CSSPropertyBorderBlockEndColor, CSSPropertyID::CSSPropertyBorderInlineStartColor };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Right))];
    }
    case CSSPropertyID::CSSPropertyBorderTopColor: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartColor, CSSPropertyID::CSSPropertyBorderInlineEndColor, CSSPropertyID::CSSPropertyBorderBlockEndColor, CSSPropertyID::CSSPropertyBorderInlineStartColor };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Top))];
    }
    case CSSPropertyID::CSSPropertyBorderBottomLeftRadius: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderStartStartRadius, CSSPropertyID::CSSPropertyBorderStartEndRadius, CSSPropertyID::CSSPropertyBorderEndStartRadius, CSSPropertyID::CSSPropertyBorderEndEndRadius };
        return properties[static_cast<size_t>(mapCornerPhysicalToLogical(writingMode, BoxCorner::BottomLeft))];
    }
    case CSSPropertyID::CSSPropertyBorderBottomRightRadius: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderStartStartRadius, CSSPropertyID::CSSPropertyBorderStartEndRadius, CSSPropertyID::CSSPropertyBorderEndStartRadius, CSSPropertyID::CSSPropertyBorderEndEndRadius };
        return properties[static_cast<size_t>(mapCornerPhysicalToLogical(writingMode, BoxCorner::BottomRight))];
    }
    case CSSPropertyID::CSSPropertyBorderTopLeftRadius: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderStartStartRadius, CSSPropertyID::CSSPropertyBorderStartEndRadius, CSSPropertyID::CSSPropertyBorderEndStartRadius, CSSPropertyID::CSSPropertyBorderEndEndRadius };
        return properties[static_cast<size_t>(mapCornerPhysicalToLogical(writingMode, BoxCorner::TopLeft))];
    }
    case CSSPropertyID::CSSPropertyBorderTopRightRadius: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderStartStartRadius, CSSPropertyID::CSSPropertyBorderStartEndRadius, CSSPropertyID::CSSPropertyBorderEndStartRadius, CSSPropertyID::CSSPropertyBorderEndEndRadius };
        return properties[static_cast<size_t>(mapCornerPhysicalToLogical(writingMode, BoxCorner::TopRight))];
    }
    case CSSPropertyID::CSSPropertyBorderBottomStyle: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartStyle, CSSPropertyID::CSSPropertyBorderInlineEndStyle, CSSPropertyID::CSSPropertyBorderBlockEndStyle, CSSPropertyID::CSSPropertyBorderInlineStartStyle };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Bottom))];
    }
    case CSSPropertyID::CSSPropertyBorderLeftStyle: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartStyle, CSSPropertyID::CSSPropertyBorderInlineEndStyle, CSSPropertyID::CSSPropertyBorderBlockEndStyle, CSSPropertyID::CSSPropertyBorderInlineStartStyle };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Left))];
    }
    case CSSPropertyID::CSSPropertyBorderRightStyle: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartStyle, CSSPropertyID::CSSPropertyBorderInlineEndStyle, CSSPropertyID::CSSPropertyBorderBlockEndStyle, CSSPropertyID::CSSPropertyBorderInlineStartStyle };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Right))];
    }
    case CSSPropertyID::CSSPropertyBorderTopStyle: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartStyle, CSSPropertyID::CSSPropertyBorderInlineEndStyle, CSSPropertyID::CSSPropertyBorderBlockEndStyle, CSSPropertyID::CSSPropertyBorderInlineStartStyle };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Top))];
    }
    case CSSPropertyID::CSSPropertyBorderBottomWidth: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartWidth, CSSPropertyID::CSSPropertyBorderInlineEndWidth, CSSPropertyID::CSSPropertyBorderBlockEndWidth, CSSPropertyID::CSSPropertyBorderInlineStartWidth };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Bottom))];
    }
    case CSSPropertyID::CSSPropertyBorderLeftWidth: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartWidth, CSSPropertyID::CSSPropertyBorderInlineEndWidth, CSSPropertyID::CSSPropertyBorderBlockEndWidth, CSSPropertyID::CSSPropertyBorderInlineStartWidth };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Left))];
    }
    case CSSPropertyID::CSSPropertyBorderRightWidth: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartWidth, CSSPropertyID::CSSPropertyBorderInlineEndWidth, CSSPropertyID::CSSPropertyBorderBlockEndWidth, CSSPropertyID::CSSPropertyBorderInlineStartWidth };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Right))];
    }
    case CSSPropertyID::CSSPropertyBorderTopWidth: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyBorderBlockStartWidth, CSSPropertyID::CSSPropertyBorderInlineEndWidth, CSSPropertyID::CSSPropertyBorderBlockEndWidth, CSSPropertyID::CSSPropertyBorderInlineStartWidth };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Top))];
    }
    case CSSPropertyID::CSSPropertyContainIntrinsicWidth: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyContainIntrinsicInlineSize, CSSPropertyID::CSSPropertyContainIntrinsicBlockSize };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Horizontal))];
    }
    case CSSPropertyID::CSSPropertyContainIntrinsicHeight: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyContainIntrinsicInlineSize, CSSPropertyID::CSSPropertyContainIntrinsicBlockSize };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Vertical))];
    }
    case CSSPropertyID::CSSPropertyCornerBottomLeftShape: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyCornerStartStartShape, CSSPropertyID::CSSPropertyCornerStartEndShape, CSSPropertyID::CSSPropertyCornerEndStartShape, CSSPropertyID::CSSPropertyCornerEndEndShape };
        return properties[static_cast<size_t>(mapCornerPhysicalToLogical(writingMode, BoxCorner::BottomLeft))];
    }
    case CSSPropertyID::CSSPropertyCornerBottomRightShape: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyCornerStartStartShape, CSSPropertyID::CSSPropertyCornerStartEndShape, CSSPropertyID::CSSPropertyCornerEndStartShape, CSSPropertyID::CSSPropertyCornerEndEndShape };
        return properties[static_cast<size_t>(mapCornerPhysicalToLogical(writingMode, BoxCorner::BottomRight))];
    }
    case CSSPropertyID::CSSPropertyCornerTopLeftShape: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyCornerStartStartShape, CSSPropertyID::CSSPropertyCornerStartEndShape, CSSPropertyID::CSSPropertyCornerEndStartShape, CSSPropertyID::CSSPropertyCornerEndEndShape };
        return properties[static_cast<size_t>(mapCornerPhysicalToLogical(writingMode, BoxCorner::TopLeft))];
    }
    case CSSPropertyID::CSSPropertyCornerTopRightShape: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyCornerStartStartShape, CSSPropertyID::CSSPropertyCornerStartEndShape, CSSPropertyID::CSSPropertyCornerEndStartShape, CSSPropertyID::CSSPropertyCornerEndEndShape };
        return properties[static_cast<size_t>(mapCornerPhysicalToLogical(writingMode, BoxCorner::TopRight))];
    }
    case CSSPropertyID::CSSPropertyBottom: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyInsetBlockStart, CSSPropertyID::CSSPropertyInsetInlineEnd, CSSPropertyID::CSSPropertyInsetBlockEnd, CSSPropertyID::CSSPropertyInsetInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Bottom))];
    }
    case CSSPropertyID::CSSPropertyLeft: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyInsetBlockStart, CSSPropertyID::CSSPropertyInsetInlineEnd, CSSPropertyID::CSSPropertyInsetBlockEnd, CSSPropertyID::CSSPropertyInsetInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Left))];
    }
    case CSSPropertyID::CSSPropertyRight: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyInsetBlockStart, CSSPropertyID::CSSPropertyInsetInlineEnd, CSSPropertyID::CSSPropertyInsetBlockEnd, CSSPropertyID::CSSPropertyInsetInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Right))];
    }
    case CSSPropertyID::CSSPropertyTop: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyInsetBlockStart, CSSPropertyID::CSSPropertyInsetInlineEnd, CSSPropertyID::CSSPropertyInsetBlockEnd, CSSPropertyID::CSSPropertyInsetInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Top))];
    }
    case CSSPropertyID::CSSPropertyMarginBottom: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyMarginBlockStart, CSSPropertyID::CSSPropertyMarginInlineEnd, CSSPropertyID::CSSPropertyMarginBlockEnd, CSSPropertyID::CSSPropertyMarginInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Bottom))];
    }
    case CSSPropertyID::CSSPropertyMarginLeft: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyMarginBlockStart, CSSPropertyID::CSSPropertyMarginInlineEnd, CSSPropertyID::CSSPropertyMarginBlockEnd, CSSPropertyID::CSSPropertyMarginInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Left))];
    }
    case CSSPropertyID::CSSPropertyMarginRight: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyMarginBlockStart, CSSPropertyID::CSSPropertyMarginInlineEnd, CSSPropertyID::CSSPropertyMarginBlockEnd, CSSPropertyID::CSSPropertyMarginInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Right))];
    }
    case CSSPropertyID::CSSPropertyMarginTop: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyMarginBlockStart, CSSPropertyID::CSSPropertyMarginInlineEnd, CSSPropertyID::CSSPropertyMarginBlockEnd, CSSPropertyID::CSSPropertyMarginInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Top))];
    }
    case CSSPropertyID::CSSPropertyMaxWidth: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyMaxInlineSize, CSSPropertyID::CSSPropertyMaxBlockSize };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Horizontal))];
    }
    case CSSPropertyID::CSSPropertyMaxHeight: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyMaxInlineSize, CSSPropertyID::CSSPropertyMaxBlockSize };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Vertical))];
    }
    case CSSPropertyID::CSSPropertyMinWidth: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyMinInlineSize, CSSPropertyID::CSSPropertyMinBlockSize };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Horizontal))];
    }
    case CSSPropertyID::CSSPropertyMinHeight: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyMinInlineSize, CSSPropertyID::CSSPropertyMinBlockSize };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Vertical))];
    }
    case CSSPropertyID::CSSPropertyOverflowX: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyOverflowInline, CSSPropertyID::CSSPropertyOverflowBlock };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Horizontal))];
    }
    case CSSPropertyID::CSSPropertyOverflowY: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyOverflowInline, CSSPropertyID::CSSPropertyOverflowBlock };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Vertical))];
    }
    case CSSPropertyID::CSSPropertyOverscrollBehaviorX: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyOverscrollBehaviorInline, CSSPropertyID::CSSPropertyOverscrollBehaviorBlock };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Horizontal))];
    }
    case CSSPropertyID::CSSPropertyOverscrollBehaviorY: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyOverscrollBehaviorInline, CSSPropertyID::CSSPropertyOverscrollBehaviorBlock };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Vertical))];
    }
    case CSSPropertyID::CSSPropertyPaddingBottom: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyPaddingBlockStart, CSSPropertyID::CSSPropertyPaddingInlineEnd, CSSPropertyID::CSSPropertyPaddingBlockEnd, CSSPropertyID::CSSPropertyPaddingInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Bottom))];
    }
    case CSSPropertyID::CSSPropertyPaddingLeft: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyPaddingBlockStart, CSSPropertyID::CSSPropertyPaddingInlineEnd, CSSPropertyID::CSSPropertyPaddingBlockEnd, CSSPropertyID::CSSPropertyPaddingInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Left))];
    }
    case CSSPropertyID::CSSPropertyPaddingRight: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyPaddingBlockStart, CSSPropertyID::CSSPropertyPaddingInlineEnd, CSSPropertyID::CSSPropertyPaddingBlockEnd, CSSPropertyID::CSSPropertyPaddingInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Right))];
    }
    case CSSPropertyID::CSSPropertyPaddingTop: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyPaddingBlockStart, CSSPropertyID::CSSPropertyPaddingInlineEnd, CSSPropertyID::CSSPropertyPaddingBlockEnd, CSSPropertyID::CSSPropertyPaddingInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Top))];
    }
    case CSSPropertyID::CSSPropertyScrollMarginBottom: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollMarginBlockStart, CSSPropertyID::CSSPropertyScrollMarginInlineEnd, CSSPropertyID::CSSPropertyScrollMarginBlockEnd, CSSPropertyID::CSSPropertyScrollMarginInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Bottom))];
    }
    case CSSPropertyID::CSSPropertyScrollMarginLeft: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollMarginBlockStart, CSSPropertyID::CSSPropertyScrollMarginInlineEnd, CSSPropertyID::CSSPropertyScrollMarginBlockEnd, CSSPropertyID::CSSPropertyScrollMarginInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Left))];
    }
    case CSSPropertyID::CSSPropertyScrollMarginRight: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollMarginBlockStart, CSSPropertyID::CSSPropertyScrollMarginInlineEnd, CSSPropertyID::CSSPropertyScrollMarginBlockEnd, CSSPropertyID::CSSPropertyScrollMarginInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Right))];
    }
    case CSSPropertyID::CSSPropertyScrollMarginTop: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollMarginBlockStart, CSSPropertyID::CSSPropertyScrollMarginInlineEnd, CSSPropertyID::CSSPropertyScrollMarginBlockEnd, CSSPropertyID::CSSPropertyScrollMarginInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Top))];
    }
    case CSSPropertyID::CSSPropertyScrollPaddingBottom: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollPaddingBlockStart, CSSPropertyID::CSSPropertyScrollPaddingInlineEnd, CSSPropertyID::CSSPropertyScrollPaddingBlockEnd, CSSPropertyID::CSSPropertyScrollPaddingInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Bottom))];
    }
    case CSSPropertyID::CSSPropertyScrollPaddingLeft: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollPaddingBlockStart, CSSPropertyID::CSSPropertyScrollPaddingInlineEnd, CSSPropertyID::CSSPropertyScrollPaddingBlockEnd, CSSPropertyID::CSSPropertyScrollPaddingInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Left))];
    }
    case CSSPropertyID::CSSPropertyScrollPaddingRight: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollPaddingBlockStart, CSSPropertyID::CSSPropertyScrollPaddingInlineEnd, CSSPropertyID::CSSPropertyScrollPaddingBlockEnd, CSSPropertyID::CSSPropertyScrollPaddingInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Right))];
    }
    case CSSPropertyID::CSSPropertyScrollPaddingTop: {
        static constexpr CSSPropertyID properties[4] = { CSSPropertyID::CSSPropertyScrollPaddingBlockStart, CSSPropertyID::CSSPropertyScrollPaddingInlineEnd, CSSPropertyID::CSSPropertyScrollPaddingBlockEnd, CSSPropertyID::CSSPropertyScrollPaddingInlineStart };
        return properties[static_cast<size_t>(mapSidePhysicalToLogical(writingMode, BoxSide::Top))];
    }
    case CSSPropertyID::CSSPropertyWidth: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyInlineSize, CSSPropertyID::CSSPropertyBlockSize };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Horizontal))];
    }
    case CSSPropertyID::CSSPropertyHeight: {
        static constexpr CSSPropertyID properties[2] = { CSSPropertyID::CSSPropertyInlineSize, CSSPropertyID::CSSPropertyBlockSize };
        return properties[static_cast<size_t>(mapAxisPhysicalToLogical(writingMode, BoxAxis::Vertical))];
    }
    default:
        return id;
    }
}

bool CSSProperty::isDescriptorOnly(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyAdditiveSymbols:
    case CSSPropertyID::CSSPropertyFallback:
    case CSSPropertyID::CSSPropertyNegative:
    case CSSPropertyID::CSSPropertyPad:
    case CSSPropertyID::CSSPropertyPrefix:
    case CSSPropertyID::CSSPropertyRange:
    case CSSPropertyID::CSSPropertySuffix:
    case CSSPropertyID::CSSPropertySymbols:
    case CSSPropertyID::CSSPropertySystem:
    case CSSPropertyID::CSSPropertyFontDisplay:
    case CSSPropertyID::CSSPropertySizeAdjust:
    case CSSPropertyID::CSSPropertySrc:
    case CSSPropertyID::CSSPropertyUnicodeRange:
    case CSSPropertyID::CSSPropertyBasePalette:
    case CSSPropertyID::CSSPropertyOverrideColors:
    case CSSPropertyID::CSSPropertySize:
    case CSSPropertyID::CSSPropertyInherits:
    case CSSPropertyID::CSSPropertyInitialValue:
    case CSSPropertyID::CSSPropertySyntax:
    case CSSPropertyID::CSSPropertyNavigation:
    case CSSPropertyID::CSSPropertyTypes:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::acceptsQuirkyColor(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBackgroundColor:
    case CSSPropertyID::CSSPropertyColor:
    case CSSPropertyID::CSSPropertyBorderBottomColor:
    case CSSPropertyID::CSSPropertyBorderLeftColor:
    case CSSPropertyID::CSSPropertyBorderRightColor:
    case CSSPropertyID::CSSPropertyBorderTopColor:
    case CSSPropertyID::CSSPropertyBorderColor:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::acceptsQuirkyLength(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyFontSize:
    case CSSPropertyID::CSSPropertyLetterSpacing:
    case CSSPropertyID::CSSPropertyClip:
    case CSSPropertyID::CSSPropertyTextIndent:
    case CSSPropertyID::CSSPropertyVerticalAlign:
    case CSSPropertyID::CSSPropertyWebkitFontSizeDelta:
    case CSSPropertyID::CSSPropertyWebkitMarqueeIncrement:
    case CSSPropertyID::CSSPropertyWordSpacing:
    case CSSPropertyID::CSSPropertyBorderBottomWidth:
    case CSSPropertyID::CSSPropertyBorderLeftWidth:
    case CSSPropertyID::CSSPropertyBorderRightWidth:
    case CSSPropertyID::CSSPropertyBorderTopWidth:
    case CSSPropertyID::CSSPropertyBottom:
    case CSSPropertyID::CSSPropertyHeight:
    case CSSPropertyID::CSSPropertyLeft:
    case CSSPropertyID::CSSPropertyMarginBottom:
    case CSSPropertyID::CSSPropertyMarginLeft:
    case CSSPropertyID::CSSPropertyMarginRight:
    case CSSPropertyID::CSSPropertyMarginTop:
    case CSSPropertyID::CSSPropertyMaxHeight:
    case CSSPropertyID::CSSPropertyMaxWidth:
    case CSSPropertyID::CSSPropertyMinHeight:
    case CSSPropertyID::CSSPropertyMinWidth:
    case CSSPropertyID::CSSPropertyPaddingBottom:
    case CSSPropertyID::CSSPropertyPaddingLeft:
    case CSSPropertyID::CSSPropertyPaddingRight:
    case CSSPropertyID::CSSPropertyPaddingTop:
    case CSSPropertyID::CSSPropertyRight:
    case CSSPropertyID::CSSPropertyTop:
    case CSSPropertyID::CSSPropertyWidth:
    case CSSPropertyID::CSSPropertyBackgroundPosition:
    case CSSPropertyID::CSSPropertyBorderSpacing:
    case CSSPropertyID::CSSPropertyBorderWidth:
    case CSSPropertyID::CSSPropertyMargin:
    case CSSPropertyID::CSSPropertyPadding:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::acceptsQuirkyAngle(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyGlyphOrientationHorizontal:
    case CSSPropertyID::CSSPropertyGlyphOrientationVertical:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::animationUsesNonAdditiveOrCumulativeInterpolation(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyStrokeDasharray:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::animationUsesNonNormalizedDiscreteInterpolation(CSSPropertyID id)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyDisplay:
    case CSSPropertyID::CSSPropertyContentVisibility:
        return true;
    default:
        return false;
    }
}

bool CSSProperty::animationIsAccelerated(CSSPropertyID id, [[maybe_unused]] const Settings& settings)
{
    switch (id) {
    case CSSPropertyID::CSSPropertyBackdropFilter:
        return true;
    case CSSPropertyID::CSSPropertyFilter:
        return true;
    case CSSPropertyID::CSSPropertyOpacity:
        return true;
    case CSSPropertyID::CSSPropertyRotate:
        return true;
    case CSSPropertyID::CSSPropertyScale:
        return true;
    case CSSPropertyID::CSSPropertyTransform:
        return true;
    case CSSPropertyID::CSSPropertyTranslate:
        return true;
    default:
        return false;
    }
}

std::span<const CSSPropertyID> CSSProperty::allAcceleratedAnimationProperties([[maybe_unused]] const Settings& settings)
{
    static constexpr std::array propertiesExcludingThreadedOnly {
        CSSPropertyID::CSSPropertyBackdropFilter,
        CSSPropertyID::CSSPropertyFilter,
        CSSPropertyID::CSSPropertyOpacity,
        CSSPropertyID::CSSPropertyRotate,
        CSSPropertyID::CSSPropertyScale,
        CSSPropertyID::CSSPropertyTransform,
        CSSPropertyID::CSSPropertyTranslate,
    };
    return std::span<const CSSPropertyID> { propertiesExcludingThreadedOnly };
}

CSSPropertySettings::CSSPropertySettings(const Settings& settings)
    : accentColorEnabled { settings.accentColorEnabled() }
    , colorFilterEnabled { settings.colorFilterEnabled() }
    , crossDocumentViewTransitionsEnabled { settings.crossDocumentViewTransitionsEnabled() }
    , cssAnchorPositioningEnabled { settings.cssAnchorPositioningEnabled() }
    , cssAnchorPositioningPositionVisibilityEnabled { settings.cssAnchorPositioningPositionVisibilityEnabled() }
    , cssCornerShapeEnabled { settings.cssCornerShapeEnabled() }
    , cssDPropertyEnabled { settings.cssDPropertyEnabled() }
    , cssFieldSizingEnabled { settings.cssFieldSizingEnabled() }
    , cssFontVariantEmojiEnabled { settings.cssFontVariantEmojiEnabled() }
    , cssInputSecurityEnabled { settings.cssInputSecurityEnabled() }
    , cssLineClampEnabled { settings.cssLineClampEnabled() }
    , cssLineFitEdgeEnabled { settings.cssLineFitEdgeEnabled() }
    , cssRhythmicSizingEnabled { settings.cssRhythmicSizingEnabled() }
    , cssRubyAlignEnabled { settings.cssRubyAlignEnabled() }
    , cssRubyOverhangEnabled { settings.cssRubyOverhangEnabled() }
    , cssScrollAnchoringEnabled { settings.cssScrollAnchoringEnabled() }
    , cssScrollbarColorEnabled { settings.cssScrollbarColorEnabled() }
    , cssScrollbarGutterEnabled { settings.cssScrollbarGutterEnabled() }
    , cssScrollbarWidthEnabled { settings.cssScrollbarWidthEnabled() }
    , cssTextAutospaceEnabled { settings.cssTextAutospaceEnabled() }
    , cssTextBoxTrimEnabled { settings.cssTextBoxTrimEnabled() }
    , cssTextGroupAlignEnabled { settings.cssTextGroupAlignEnabled() }
    , cssTextJustifyEnabled { settings.cssTextJustifyEnabled() }
    , cssTextSpacingTrimEnabled { settings.cssTextSpacingTrimEnabled() }
    , cssUnprefixedBackdropFilterEnabled { settings.cssUnprefixedBackdropFilterEnabled() }
    , overscrollBehaviorEnabled { settings.overscrollBehaviorEnabled() }
    , scrollDrivenAnimationsEnabled { settings.scrollDrivenAnimationsEnabled() }
    , supportHDRDisplayEnabled { settings.supportHDRDisplayEnabled() }
    , viewTransitionClassesEnabled { settings.viewTransitionClassesEnabled() }
    , viewTransitionsEnabled { settings.viewTransitionsEnabled() }
{
}

bool operator==(const CSSPropertySettings& a, const CSSPropertySettings& b)
{
    return a.accentColorEnabled == b.accentColorEnabled
        && a.colorFilterEnabled == b.colorFilterEnabled
        && a.crossDocumentViewTransitionsEnabled == b.crossDocumentViewTransitionsEnabled
        && a.cssAnchorPositioningEnabled == b.cssAnchorPositioningEnabled
        && a.cssAnchorPositioningPositionVisibilityEnabled == b.cssAnchorPositioningPositionVisibilityEnabled
        && a.cssCornerShapeEnabled == b.cssCornerShapeEnabled
        && a.cssDPropertyEnabled == b.cssDPropertyEnabled
        && a.cssFieldSizingEnabled == b.cssFieldSizingEnabled
        && a.cssFontVariantEmojiEnabled == b.cssFontVariantEmojiEnabled
        && a.cssInputSecurityEnabled == b.cssInputSecurityEnabled
        && a.cssLineClampEnabled == b.cssLineClampEnabled
        && a.cssLineFitEdgeEnabled == b.cssLineFitEdgeEnabled
        && a.cssRhythmicSizingEnabled == b.cssRhythmicSizingEnabled
        && a.cssRubyAlignEnabled == b.cssRubyAlignEnabled
        && a.cssRubyOverhangEnabled == b.cssRubyOverhangEnabled
        && a.cssScrollAnchoringEnabled == b.cssScrollAnchoringEnabled
        && a.cssScrollbarColorEnabled == b.cssScrollbarColorEnabled
        && a.cssScrollbarGutterEnabled == b.cssScrollbarGutterEnabled
        && a.cssScrollbarWidthEnabled == b.cssScrollbarWidthEnabled
        && a.cssTextAutospaceEnabled == b.cssTextAutospaceEnabled
        && a.cssTextBoxTrimEnabled == b.cssTextBoxTrimEnabled
        && a.cssTextGroupAlignEnabled == b.cssTextGroupAlignEnabled
        && a.cssTextJustifyEnabled == b.cssTextJustifyEnabled
        && a.cssTextSpacingTrimEnabled == b.cssTextSpacingTrimEnabled
        && a.cssUnprefixedBackdropFilterEnabled == b.cssUnprefixedBackdropFilterEnabled
        && a.overscrollBehaviorEnabled == b.overscrollBehaviorEnabled
        && a.scrollDrivenAnimationsEnabled == b.scrollDrivenAnimationsEnabled
        && a.supportHDRDisplayEnabled == b.supportHDRDisplayEnabled
        && a.viewTransitionClassesEnabled == b.viewTransitionClassesEnabled
        && a.viewTransitionsEnabled == b.viewTransitionsEnabled;
}

void add(Hasher& hasher, const CSSPropertySettings& settings)
{
    uint64_t bits = settings.accentColorEnabled << 0
        | settings.colorFilterEnabled << 1
        | settings.crossDocumentViewTransitionsEnabled << 2
        | settings.cssAnchorPositioningEnabled << 3
        | settings.cssAnchorPositioningPositionVisibilityEnabled << 4
        | settings.cssCornerShapeEnabled << 5
        | settings.cssDPropertyEnabled << 6
        | settings.cssFieldSizingEnabled << 7
        | settings.cssFontVariantEmojiEnabled << 8
        | settings.cssInputSecurityEnabled << 9
        | settings.cssLineClampEnabled << 10
        | settings.cssLineFitEdgeEnabled << 11
        | settings.cssRhythmicSizingEnabled << 12
        | settings.cssRubyAlignEnabled << 13
        | settings.cssRubyOverhangEnabled << 14
        | settings.cssScrollAnchoringEnabled << 15
        | settings.cssScrollbarColorEnabled << 16
        | settings.cssScrollbarGutterEnabled << 17
        | settings.cssScrollbarWidthEnabled << 18
        | settings.cssTextAutospaceEnabled << 19
        | settings.cssTextBoxTrimEnabled << 20
        | settings.cssTextGroupAlignEnabled << 21
        | settings.cssTextJustifyEnabled << 22
        | settings.cssTextSpacingTrimEnabled << 23
        | settings.cssUnprefixedBackdropFilterEnabled << 24
        | settings.overscrollBehaviorEnabled << 25
        | settings.scrollDrivenAnimationsEnabled << 26
        | settings.supportHDRDisplayEnabled << 27
        | settings.viewTransitionClassesEnabled << 28
        | settings.viewTransitionsEnabled << 29;
    add(hasher, bits);
}


TextStream& operator<<(TextStream& stream, CSSPropertyID property)
{
    return stream << nameLiteral(property);
}

} // namespace WebCore

WTF_ALLOW_UNSAFE_BUFFER_USAGE_END
IGNORE_WARNINGS_END
